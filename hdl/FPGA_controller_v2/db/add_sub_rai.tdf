--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=13 aclr(gnd) clken clock dataa datab result
--VERSION_BEGIN 19.1 cbx_cycloneii 2019:09:22:08:02:34:SJ cbx_lpm_add_sub 2019:09:22:08:02:34:SJ cbx_mgl 2019:09:22:09:26:20:SJ cbx_nadder 2019:09:22:08:02:34:SJ cbx_stratix 2019:09:22:08:02:34:SJ cbx_stratixii 2019:09:22:08:02:34:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 14 
SUBDESIGN add_sub_rai
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	dataa[12..0]	:	input;
	datab[12..0]	:	input;
	result[12..0]	:	output;
) 
VARIABLE
	pipeline_dffe[12..0]	:	DFFE
		WITH (
			power_up ="low"
		);
	result_int[12..0]	:	WIRE;
	const_used_aclr	:	WIRE;
BEGIN 
	result_int[] = dataa[] - datab[];
	pipeline_dffe[].clk = clock;
	pipeline_dffe[].ena = clken;
	result[] = pipeline_dffe[12..0].q;
	pipeline_dffe[12..0].d = result_int[];
	const_used_aclr = aclr;
END;
--VALID FILE
