--lpm_clshift CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" LPM_PIPELINE=1 LPM_WIDTH=78 LPM_WIDTHDIST=7 aclr clken clock data direction distance result
--VERSION_BEGIN 19.1 cbx_lpm_clshift 2019:09:22:08:02:34:SJ cbx_mgl 2019:09:22:09:26:20:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 79 
SUBDESIGN lpm_clshift_e9d
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	data[77..0]	:	input;
	direction	:	input;
	distance[6..0]	:	input;
	result[77..0]	:	output;
) 
VARIABLE 
	direction_reg[0..0] : dffe;
	pipe_wl1c[77..0] : dffe;
	direction_w[1..0]	: WIRE;
	pad_w[63..0]	: WIRE;
	sbit_w[623..0]	: WIRE;
	sel_w[6..0]	: WIRE;

BEGIN 
	direction_reg[].clk = clock;
	direction_reg[].clrn = (! aclr);
	direction_reg[].d = ( direction_w[0..0]);
	direction_reg[].ena = clken;
	pipe_wl1c[].clk = clock;
	pipe_wl1c[].clrn = (! aclr);
	pipe_wl1c[].d = ((((sel_w[6..6] & (! direction_w[0..0])) & ( sbit_w[481..468], pad_w[63..0])) # ((sel_w[6..6] & direction_w[0..0]) & ( pad_w[63..0], sbit_w[545..532]))) # ((! sel_w[6..6]) & sbit_w[545..468]));
	pipe_wl1c[].ena = clken;
	direction_w[] = ( direction_reg[0..0].q, direction);
	pad_w[] = B"0000000000000000000000000000000000000000000000000000000000000000";
	result[77..0] = sbit_w[623..546];
	sbit_w[] = ( pipe_wl1c[].q, ((((sel_w[5..5] & (! direction_w[0..0])) & ( sbit_w[435..390], pad_w[31..0])) # ((sel_w[5..5] & direction_w[0..0]) & ( pad_w[31..0], sbit_w[467..422]))) # ((! sel_w[5..5]) & sbit_w[467..390])), ((((sel_w[4..4] & (! direction_w[0..0])) & ( sbit_w[373..312], pad_w[15..0])) # ((sel_w[4..4] & direction_w[0..0]) & ( pad_w[15..0], sbit_w[389..328]))) # ((! sel_w[4..4]) & sbit_w[389..312])), ((((sel_w[3..3] & (! direction_w[0..0])) & ( sbit_w[303..234], pad_w[7..0])) # ((sel_w[3..3] & direction_w[0..0]) & ( pad_w[7..0], sbit_w[311..242]))) # ((! sel_w[3..3]) & sbit_w[311..234])), ((((sel_w[2..2] & (! direction_w[0..0])) & ( sbit_w[229..156], pad_w[3..0])) # ((sel_w[2..2] & direction_w[0..0]) & ( pad_w[3..0], sbit_w[233..160]))) # ((! sel_w[2..2]) & sbit_w[233..156])), ((((sel_w[1..1] & (! direction_w[0..0])) & ( sbit_w[153..78], pad_w[1..0])) # ((sel_w[1..1] & direction_w[0..0]) & ( pad_w[1..0], sbit_w[155..80]))) # ((! sel_w[1..1]) & sbit_w[155..78])), ((((sel_w[0..0] & (! direction_w[0..0])) & ( sbit_w[76..0], pad_w[0..0])) # ((sel_w[0..0] & direction_w[0..0]) & ( pad_w[0..0], sbit_w[77..1]))) # ((! sel_w[0..0]) & sbit_w[77..0])), data[]);
	sel_w[] = ( distance[6..0]);
END;
--VALID FILE
