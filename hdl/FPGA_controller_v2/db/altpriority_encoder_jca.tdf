--altpriority_encoder CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" PIPELINE=1 WIDTH=64 WIDTHAD=6 aclr clk_en clock data q
--VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION altpriority_encoder_ida (data[31..0])
RETURNS ( q[4..0]);
FUNCTION altpriority_encoder_isa (data[31..0])
RETURNS ( q[4..0], zero);

--synthesis_resources = reg 6 
SUBDESIGN altpriority_encoder_jca
( 
	aclr	:	input;
	clk_en	:	input;
	clock	:	input;
	data[63..0]	:	input;
	q[5..0]	:	output;
) 
VARIABLE 
	altpriority_encoder7 : altpriority_encoder_ida;
	altpriority_encoder8 : altpriority_encoder_isa;
	pipeline_q_dffe[5..0] : dffe;
	tmp_q_wire[5..0]	: WIRE;

BEGIN 
	altpriority_encoder7.data[31..0] = data[31..0];
	altpriority_encoder8.data[31..0] = data[63..32];
	pipeline_q_dffe[].clk = clock;
	pipeline_q_dffe[].clrn = (! aclr);
	pipeline_q_dffe[].d = tmp_q_wire[];
	pipeline_q_dffe[].ena = clk_en;
	q[] = pipeline_q_dffe[].q;
	tmp_q_wire[] = ( (! altpriority_encoder8.zero), ((altpriority_encoder8.zero & altpriority_encoder7.q[]) # ((! altpriority_encoder8.zero) & altpriority_encoder8.q[])));
END;
--VALID FILE
