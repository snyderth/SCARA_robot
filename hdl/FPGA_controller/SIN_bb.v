// megafunction wizard: %ALTFP_SINCOS%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altfp_sincos 

// ============================================================
// File Name: SIN_bb.v
// Megafunction Name(s):
// 			altfp_sincos
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 18.1.0 Build 625 09/12/2018 SJ Lite Edition
// ************************************************************


//Copyright (C) 2018  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details.


//altfp_sincos CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" OPERATION="SIN" PIPELINE=36 ROUNDING="TO_NEAREST" WIDTH_EXP=8 WIDTH_MAN=23 clock data result
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//altfp_sincos_cordic_m CBX_AUTO_BLACKBOX="ALL" DEPTH=18 DEVICE_FAMILY="Cyclone V" INDEXPOINT=2 WIDTH=34 aclr clken clock indexbit radians sincos sincosbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=0 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_45b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_0_w;
	wire  [47:0]  valuenode_2_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_0_w[47:14]) | ({34{indexbit}} & valuenode_2_w[45:12])),
		valuenode_0_w = 48'b001100100100001111110110101010001000100001011010,
		valuenode_2_w = 48'b000011111010110110111010111111001001011001000000;
endmodule //SIN_bb_altfp_sincos_cordic_atan_45b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=10 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_l6b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_10_w;
	wire  [47:0]  valuenode_12_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_10_w[47:14]) | ({34{indexbit}} & valuenode_12_w[45:12])),
		valuenode_10_w = 48'b000000000000111111111111111111111010101010101011,
		valuenode_12_w = 48'b000000000000001111111111111111111111111010101011;
endmodule //SIN_bb_altfp_sincos_cordic_atan_l6b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=11 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_m6b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_11_w;
	wire  [47:0]  valuenode_13_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_11_w[47:14]) | ({34{indexbit}} & valuenode_13_w[45:12])),
		valuenode_11_w = 48'b000000000000011111111111111111111111010101010101,
		valuenode_13_w = 48'b000000000000000111111111111111111111111111010101;
endmodule //SIN_bb_altfp_sincos_cordic_atan_m6b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=12 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_n6b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_12_w;
	wire  [47:0]  valuenode_14_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_12_w[47:14]) | ({34{indexbit}} & valuenode_14_w[45:12])),
		valuenode_12_w = 48'b000000000000001111111111111111111111111010101011,
		valuenode_14_w = 48'b000000000000000011111111111111111111111111111011;
endmodule //SIN_bb_altfp_sincos_cordic_atan_n6b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=13 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_o6b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_13_w;
	wire  [47:0]  valuenode_15_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_13_w[47:14]) | ({34{indexbit}} & valuenode_15_w[45:12])),
		valuenode_13_w = 48'b000000000000000111111111111111111111111111010101,
		valuenode_15_w = 48'b000000000000000001111111111111111111111111111111;
endmodule //SIN_bb_altfp_sincos_cordic_atan_o6b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=1 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_55b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_1_w;
	wire  [47:0]  valuenode_3_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_1_w[47:14]) | ({34{indexbit}} & valuenode_3_w[45:12])),
		valuenode_1_w = 48'b000111011010110001100111000001010110000110111011,
		valuenode_3_w = 48'b000001111111010101101110101001101010101100001100;
endmodule //SIN_bb_altfp_sincos_cordic_atan_55b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=2 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_65b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_2_w;
	wire  [47:0]  valuenode_4_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_2_w[47:14]) | ({34{indexbit}} & valuenode_4_w[45:12])),
		valuenode_2_w = 48'b000011111010110110111010111111001001011001000000,
		valuenode_4_w = 48'b000000111111111010101011011101101110010110100000;
endmodule //SIN_bb_altfp_sincos_cordic_atan_65b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=3 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_75b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_3_w;
	wire  [47:0]  valuenode_5_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_3_w[47:14]) | ({34{indexbit}} & valuenode_5_w[45:12])),
		valuenode_3_w = 48'b000001111111010101101110101001101010101100001100,
		valuenode_5_w = 48'b000000011111111111010101010110111011101010010111;
endmodule //SIN_bb_altfp_sincos_cordic_atan_75b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=4 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_85b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_4_w;
	wire  [47:0]  valuenode_6_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_4_w[47:14]) | ({34{indexbit}} & valuenode_6_w[45:12])),
		valuenode_4_w = 48'b000000111111111010101011011101101110010110100000,
		valuenode_6_w = 48'b000000001111111111111010101010101101110111011100;
endmodule //SIN_bb_altfp_sincos_cordic_atan_85b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=5 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_95b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_5_w;
	wire  [47:0]  valuenode_7_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_5_w[47:14]) | ({34{indexbit}} & valuenode_7_w[45:12])),
		valuenode_5_w = 48'b000000011111111111010101010110111011101010010111,
		valuenode_7_w = 48'b000000000111111111111111010101010101011011101111;
endmodule //SIN_bb_altfp_sincos_cordic_atan_95b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=6 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_a5b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_6_w;
	wire  [47:0]  valuenode_8_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_6_w[47:14]) | ({34{indexbit}} & valuenode_8_w[45:12])),
		valuenode_6_w = 48'b000000001111111111111010101010101101110111011100,
		valuenode_8_w = 48'b000000000011111111111111111010101010101010110111;
endmodule //SIN_bb_altfp_sincos_cordic_atan_a5b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=7 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_b5b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_7_w;
	wire  [47:0]  valuenode_9_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_7_w[47:14]) | ({34{indexbit}} & valuenode_9_w[45:12])),
		valuenode_7_w = 48'b000000000111111111111111010101010101011011101111,
		valuenode_9_w = 48'b000000000001111111111111111111010101010101010110;
endmodule //SIN_bb_altfp_sincos_cordic_atan_b5b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=8 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_c5b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_10_w;
	wire  [47:0]  valuenode_8_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_8_w[47:14]) | ({34{indexbit}} & valuenode_10_w[45:12])),
		valuenode_10_w = 48'b000000000000111111111111111111111010101010101011,
		valuenode_8_w = 48'b000000000011111111111111111010101010101010110111;
endmodule //SIN_bb_altfp_sincos_cordic_atan_c5b


//altfp_sincos_cordic_atan CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" indexpoint=2 START=9 WIDTH=34 arctan indexbit
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_atan_d5b
	( 
	arctan,
	indexbit) ;
	output   [33:0]  arctan;
	input   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   indexbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [47:0]  valuenode_11_w;
	wire  [47:0]  valuenode_9_w;

	assign
		arctan = (({34{(~ indexbit)}} & valuenode_9_w[47:14]) | ({34{indexbit}} & valuenode_11_w[45:12])),
		valuenode_11_w = 48'b000000000000011111111111111111111111010101010101,
		valuenode_9_w = 48'b000000000001111111111111111111010101010101010110;
endmodule //SIN_bb_altfp_sincos_cordic_atan_d5b


//altfp_sincos_cordic_start CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" WIDTH=34 index value
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_start_709
	( 
	index,
	value) ;
	input   [3:0]  index;
	output   [33:0]  value;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [3:0]  index;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [33:0]   wire_mux1_result;
	wire  [35:0]  valuenode_0_w;
	wire  [35:0]  valuenode_10_w;
	wire  [35:0]  valuenode_11_w;
	wire  [35:0]  valuenode_12_w;
	wire  [35:0]  valuenode_13_w;
	wire  [35:0]  valuenode_14_w;
	wire  [35:0]  valuenode_15_w;
	wire  [35:0]  valuenode_1_w;
	wire  [35:0]  valuenode_2_w;
	wire  [35:0]  valuenode_3_w;
	wire  [35:0]  valuenode_4_w;
	wire  [35:0]  valuenode_5_w;
	wire  [35:0]  valuenode_6_w;
	wire  [35:0]  valuenode_7_w;
	wire  [35:0]  valuenode_8_w;
	wire  [35:0]  valuenode_9_w;

	lpm_mux   mux1
	( 
	.data({valuenode_15_w[35:2], valuenode_14_w[35:2], valuenode_13_w[35:2], valuenode_12_w[35:2], valuenode_11_w[35:2], valuenode_10_w[35:2], valuenode_9_w[35:2], valuenode_8_w[35:2], valuenode_7_w[35:2], valuenode_6_w[35:2], valuenode_5_w[35:2], valuenode_4_w[35:2], valuenode_3_w[35:2], valuenode_2_w[35:2], valuenode_1_w[35:2], valuenode_0_w[35:2]}),
	.result(wire_mux1_result),
	.sel(index)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux1.lpm_size = 16,
		mux1.lpm_width = 34,
		mux1.lpm_widths = 4,
		mux1.lpm_type = "lpm_mux";
	assign
		value = wire_mux1_result,
		valuenode_0_w = 36'b001001101101110100111011011010100001,
		valuenode_10_w = 36'b001111111111111111111101010101010101,
		valuenode_11_w = 36'b001111111111111111111111010101010101,
		valuenode_12_w = 36'b001111111111111111111111111101010101,
		valuenode_13_w = 36'b001111111111111111111111110101010101,
		valuenode_14_w = 36'b001111111111111111111111111111110101,
		valuenode_15_w = 36'b001111111111111111111111111111010101,
		valuenode_1_w = 36'b001101101111011001010110110001011010,
		valuenode_2_w = 36'b001111010111001100011101111111111011,
		valuenode_3_w = 36'b001111110101011101000011101100100100,
		valuenode_4_w = 36'b001111111101010101110100100001100000,
		valuenode_5_w = 36'b001111111111010101010111010010011001,
		valuenode_6_w = 36'b001111111111110101010101011101001010,
		valuenode_7_w = 36'b001111111111111101010101010101110101,
		valuenode_8_w = 36'b001111111111111111010101010101010111,
		valuenode_9_w = 36'b001111111111111111110101010101010101;
endmodule //SIN_bb_altfp_sincos_cordic_start_709

//synthesis_resources = lpm_add_sub 39 lpm_mult 1 lpm_mux 1 reg 1598 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_cordic_m_e5e
	( 
	aclr,
	clken,
	clock,
	indexbit,
	radians,
	sincos,
	sincosbit) ;
	input   aclr;
	input   clken;
	input   clock;
	input   indexbit;
	input   [33:0]  radians;
	output   [33:0]  sincos;
	input   sincosbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   indexbit;
	tri0   [33:0]  radians;
	tri0   sincosbit;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [33:0]   wire_cata_0_cordic_atan_arctan;
	wire  [33:0]   wire_cata_10_cordic_atan_arctan;
	wire  [33:0]   wire_cata_11_cordic_atan_arctan;
	wire  [33:0]   wire_cata_12_cordic_atan_arctan;
	wire  [33:0]   wire_cata_13_cordic_atan_arctan;
	wire  [33:0]   wire_cata_1_cordic_atan_arctan;
	wire  [33:0]   wire_cata_2_cordic_atan_arctan;
	wire  [33:0]   wire_cata_3_cordic_atan_arctan;
	wire  [33:0]   wire_cata_4_cordic_atan_arctan;
	wire  [33:0]   wire_cata_5_cordic_atan_arctan;
	wire  [33:0]   wire_cata_6_cordic_atan_arctan;
	wire  [33:0]   wire_cata_7_cordic_atan_arctan;
	wire  [33:0]   wire_cata_8_cordic_atan_arctan;
	wire  [33:0]   wire_cata_9_cordic_atan_arctan;
	wire  [33:0]   wire_cxs_value;
	reg	[33:0]	cdaff_0;
	reg	[33:0]	cdaff_1;
	reg	[33:0]	cdaff_2;
	reg	[16:0]	indexbitff;
	reg	[16:0]	sincosbitff;
	reg	[33:0]	sincosff;
	reg	[33:0]	x_pipeff_0;
	reg	[33:0]	x_pipeff_1;
	reg	[33:0]	x_pipeff_10;
	reg	[33:0]	x_pipeff_11;
	reg	[33:0]	x_pipeff_12;
	reg	[33:0]	x_pipeff_13;
	reg	[33:0]	x_pipeff_2;
	reg	[33:0]	x_pipeff_3;
	reg	[33:0]	x_pipeff_4;
	reg	[33:0]	x_pipeff_5;
	reg	[33:0]	x_pipeff_6;
	reg	[33:0]	x_pipeff_7;
	reg	[33:0]	x_pipeff_8;
	reg	[33:0]	x_pipeff_9;
	reg	[33:0]	y_pipeff_0;
	reg	[33:0]	y_pipeff_1;
	reg	[33:0]	y_pipeff_10;
	reg	[33:0]	y_pipeff_11;
	reg	[33:0]	y_pipeff_12;
	reg	[33:0]	y_pipeff_13;
	reg	[33:0]	y_pipeff_2;
	reg	[33:0]	y_pipeff_3;
	reg	[33:0]	y_pipeff_4;
	reg	[33:0]	y_pipeff_5;
	reg	[33:0]	y_pipeff_6;
	reg	[33:0]	y_pipeff_7;
	reg	[33:0]	y_pipeff_8;
	reg	[33:0]	y_pipeff_9;
	reg	[33:0]	z_pipeff_0;
	reg	[33:0]	z_pipeff_1;
	reg	[33:0]	z_pipeff_10;
	reg	[33:0]	z_pipeff_11;
	reg	[33:0]	z_pipeff_12;
	reg	[33:0]	z_pipeff_13;
	reg	[33:0]	z_pipeff_2;
	reg	[33:0]	z_pipeff_3;
	reg	[33:0]	z_pipeff_4;
	reg	[33:0]	z_pipeff_5;
	reg	[33:0]	z_pipeff_6;
	reg	[33:0]	z_pipeff_7;
	reg	[33:0]	z_pipeff_8;
	reg	[33:0]	z_pipeff_9;
	wire  [33:0]   wire_sincos_add_result;
	wire  [33:0]   wire_x_pipenode_10_add_result;
	wire  [33:0]   wire_x_pipenode_11_add_result;
	wire  [33:0]   wire_x_pipenode_12_add_result;
	wire  [33:0]   wire_x_pipenode_13_add_result;
	wire  [33:0]   wire_x_pipenode_2_add_result;
	wire  [33:0]   wire_x_pipenode_3_add_result;
	wire  [33:0]   wire_x_pipenode_4_add_result;
	wire  [33:0]   wire_x_pipenode_5_add_result;
	wire  [33:0]   wire_x_pipenode_6_add_result;
	wire  [33:0]   wire_x_pipenode_7_add_result;
	wire  [33:0]   wire_x_pipenode_8_add_result;
	wire  [33:0]   wire_x_pipenode_9_add_result;
	wire  [33:0]   wire_y_pipeff1_add_result;
	wire  [33:0]   wire_y_pipenode_10_add_result;
	wire  [33:0]   wire_y_pipenode_11_add_result;
	wire  [33:0]   wire_y_pipenode_12_add_result;
	wire  [33:0]   wire_y_pipenode_13_add_result;
	wire  [33:0]   wire_y_pipenode_2_add_result;
	wire  [33:0]   wire_y_pipenode_3_add_result;
	wire  [33:0]   wire_y_pipenode_4_add_result;
	wire  [33:0]   wire_y_pipenode_5_add_result;
	wire  [33:0]   wire_y_pipenode_6_add_result;
	wire  [33:0]   wire_y_pipenode_7_add_result;
	wire  [33:0]   wire_y_pipenode_8_add_result;
	wire  [33:0]   wire_y_pipenode_9_add_result;
	wire  [33:0]   wire_z_pipeff1_sub_result;
	wire  [33:0]   wire_z_pipenode_10_add_result;
	wire  [33:0]   wire_z_pipenode_11_add_result;
	wire  [33:0]   wire_z_pipenode_12_add_result;
	wire  [33:0]   wire_z_pipenode_13_add_result;
	wire  [33:0]   wire_z_pipenode_2_add_result;
	wire  [33:0]   wire_z_pipenode_3_add_result;
	wire  [33:0]   wire_z_pipenode_4_add_result;
	wire  [33:0]   wire_z_pipenode_5_add_result;
	wire  [33:0]   wire_z_pipenode_6_add_result;
	wire  [33:0]   wire_z_pipenode_7_add_result;
	wire  [33:0]   wire_z_pipenode_8_add_result;
	wire  [33:0]   wire_z_pipenode_9_add_result;
	wire  [67:0]   wire_cmx_result;
	wire  [33:0]  atannode_0_w;
	wire  [33:0]  atannode_10_w;
	wire  [33:0]  atannode_11_w;
	wire  [33:0]  atannode_12_w;
	wire  [33:0]  atannode_1_w;
	wire  [33:0]  atannode_2_w;
	wire  [33:0]  atannode_3_w;
	wire  [33:0]  atannode_4_w;
	wire  [33:0]  atannode_5_w;
	wire  [33:0]  atannode_6_w;
	wire  [33:0]  atannode_7_w;
	wire  [33:0]  atannode_8_w;
	wire  [33:0]  atannode_9_w;
	wire  [33:0]  delay_input_w;
	wire  [33:0]  delay_pipe_w;
	wire  [33:0]  estimate_w;
	wire  [3:0]  indexpointnum_w;
	wire  [33:0]  multiplier_input_w;
	wire  [67:0]  multipliernode_w;
	wire  [33:0]  post_estimate_w;
	wire  [33:0]  pre_estimate_w;
	wire  [33:0]  radians_load_node_w;
	wire  [3:0]  startindex_w;
	wire  [33:0]  x_pipenode_10_w;
	wire  [33:0]  x_pipenode_11_w;
	wire  [33:0]  x_pipenode_12_w;
	wire  [33:0]  x_pipenode_13_w;
	wire  [33:0]  x_pipenode_2_w;
	wire  [33:0]  x_pipenode_3_w;
	wire  [33:0]  x_pipenode_4_w;
	wire  [33:0]  x_pipenode_5_w;
	wire  [33:0]  x_pipenode_6_w;
	wire  [33:0]  x_pipenode_7_w;
	wire  [33:0]  x_pipenode_8_w;
	wire  [33:0]  x_pipenode_9_w;
	wire  [33:0]  x_prenode_10_w;
	wire  [33:0]  x_prenode_11_w;
	wire  [33:0]  x_prenode_12_w;
	wire  [33:0]  x_prenode_13_w;
	wire  [33:0]  x_prenode_2_w;
	wire  [33:0]  x_prenode_3_w;
	wire  [33:0]  x_prenode_4_w;
	wire  [33:0]  x_prenode_5_w;
	wire  [33:0]  x_prenode_6_w;
	wire  [33:0]  x_prenode_7_w;
	wire  [33:0]  x_prenode_8_w;
	wire  [33:0]  x_prenode_9_w;
	wire  [33:0]  x_prenodeone_10_w;
	wire  [33:0]  x_prenodeone_11_w;
	wire  [33:0]  x_prenodeone_12_w;
	wire  [33:0]  x_prenodeone_13_w;
	wire  [33:0]  x_prenodeone_2_w;
	wire  [33:0]  x_prenodeone_3_w;
	wire  [33:0]  x_prenodeone_4_w;
	wire  [33:0]  x_prenodeone_5_w;
	wire  [33:0]  x_prenodeone_6_w;
	wire  [33:0]  x_prenodeone_7_w;
	wire  [33:0]  x_prenodeone_8_w;
	wire  [33:0]  x_prenodeone_9_w;
	wire  [33:0]  x_prenodetwo_10_w;
	wire  [33:0]  x_prenodetwo_11_w;
	wire  [33:0]  x_prenodetwo_12_w;
	wire  [33:0]  x_prenodetwo_13_w;
	wire  [33:0]  x_prenodetwo_2_w;
	wire  [33:0]  x_prenodetwo_3_w;
	wire  [33:0]  x_prenodetwo_4_w;
	wire  [33:0]  x_prenodetwo_5_w;
	wire  [33:0]  x_prenodetwo_6_w;
	wire  [33:0]  x_prenodetwo_7_w;
	wire  [33:0]  x_prenodetwo_8_w;
	wire  [33:0]  x_prenodetwo_9_w;
	wire  [33:0]  x_start_node_w;
	wire  [33:0]  x_subnode_10_w;
	wire  [33:0]  x_subnode_11_w;
	wire  [33:0]  x_subnode_12_w;
	wire  [33:0]  x_subnode_13_w;
	wire  [33:0]  x_subnode_2_w;
	wire  [33:0]  x_subnode_3_w;
	wire  [33:0]  x_subnode_4_w;
	wire  [33:0]  x_subnode_5_w;
	wire  [33:0]  x_subnode_6_w;
	wire  [33:0]  x_subnode_7_w;
	wire  [33:0]  x_subnode_8_w;
	wire  [33:0]  x_subnode_9_w;
	wire  [33:0]  y_pipenode_10_w;
	wire  [33:0]  y_pipenode_11_w;
	wire  [33:0]  y_pipenode_12_w;
	wire  [33:0]  y_pipenode_13_w;
	wire  [33:0]  y_pipenode_2_w;
	wire  [33:0]  y_pipenode_3_w;
	wire  [33:0]  y_pipenode_4_w;
	wire  [33:0]  y_pipenode_5_w;
	wire  [33:0]  y_pipenode_6_w;
	wire  [33:0]  y_pipenode_7_w;
	wire  [33:0]  y_pipenode_8_w;
	wire  [33:0]  y_pipenode_9_w;
	wire  [33:0]  y_prenode_10_w;
	wire  [33:0]  y_prenode_11_w;
	wire  [33:0]  y_prenode_12_w;
	wire  [33:0]  y_prenode_13_w;
	wire  [33:0]  y_prenode_2_w;
	wire  [33:0]  y_prenode_3_w;
	wire  [33:0]  y_prenode_4_w;
	wire  [33:0]  y_prenode_5_w;
	wire  [33:0]  y_prenode_6_w;
	wire  [33:0]  y_prenode_7_w;
	wire  [33:0]  y_prenode_8_w;
	wire  [33:0]  y_prenode_9_w;
	wire  [33:0]  y_prenodeone_10_w;
	wire  [33:0]  y_prenodeone_11_w;
	wire  [33:0]  y_prenodeone_12_w;
	wire  [33:0]  y_prenodeone_13_w;
	wire  [33:0]  y_prenodeone_2_w;
	wire  [33:0]  y_prenodeone_3_w;
	wire  [33:0]  y_prenodeone_4_w;
	wire  [33:0]  y_prenodeone_5_w;
	wire  [33:0]  y_prenodeone_6_w;
	wire  [33:0]  y_prenodeone_7_w;
	wire  [33:0]  y_prenodeone_8_w;
	wire  [33:0]  y_prenodeone_9_w;
	wire  [33:0]  y_prenodetwo_10_w;
	wire  [33:0]  y_prenodetwo_11_w;
	wire  [33:0]  y_prenodetwo_12_w;
	wire  [33:0]  y_prenodetwo_13_w;
	wire  [33:0]  y_prenodetwo_2_w;
	wire  [33:0]  y_prenodetwo_3_w;
	wire  [33:0]  y_prenodetwo_4_w;
	wire  [33:0]  y_prenodetwo_5_w;
	wire  [33:0]  y_prenodetwo_6_w;
	wire  [33:0]  y_prenodetwo_7_w;
	wire  [33:0]  y_prenodetwo_8_w;
	wire  [33:0]  y_prenodetwo_9_w;
	wire  [33:0]  y_subnode_10_w;
	wire  [33:0]  y_subnode_11_w;
	wire  [33:0]  y_subnode_12_w;
	wire  [33:0]  y_subnode_13_w;
	wire  [33:0]  y_subnode_1_w;
	wire  [33:0]  y_subnode_2_w;
	wire  [33:0]  y_subnode_3_w;
	wire  [33:0]  y_subnode_4_w;
	wire  [33:0]  y_subnode_5_w;
	wire  [33:0]  y_subnode_6_w;
	wire  [33:0]  y_subnode_7_w;
	wire  [33:0]  y_subnode_8_w;
	wire  [33:0]  y_subnode_9_w;
	wire  [33:0]  z_pipenode_10_w;
	wire  [33:0]  z_pipenode_11_w;
	wire  [33:0]  z_pipenode_12_w;
	wire  [33:0]  z_pipenode_13_w;
	wire  [33:0]  z_pipenode_2_w;
	wire  [33:0]  z_pipenode_3_w;
	wire  [33:0]  z_pipenode_4_w;
	wire  [33:0]  z_pipenode_5_w;
	wire  [33:0]  z_pipenode_6_w;
	wire  [33:0]  z_pipenode_7_w;
	wire  [33:0]  z_pipenode_8_w;
	wire  [33:0]  z_pipenode_9_w;
	wire  [33:0]  z_subnode_10_w;
	wire  [33:0]  z_subnode_11_w;
	wire  [33:0]  z_subnode_12_w;
	wire  [33:0]  z_subnode_13_w;
	wire  [33:0]  z_subnode_2_w;
	wire  [33:0]  z_subnode_3_w;
	wire  [33:0]  z_subnode_4_w;
	wire  [33:0]  z_subnode_5_w;
	wire  [33:0]  z_subnode_6_w;
	wire  [33:0]  z_subnode_7_w;
	wire  [33:0]  z_subnode_8_w;
	wire  [33:0]  z_subnode_9_w;

	SIN_bb_altfp_sincos_cordic_atan_45b   cata_0_cordic_atan
	( 
	.arctan(wire_cata_0_cordic_atan_arctan),
	.indexbit(indexbitff[0]));
	SIN_bb_altfp_sincos_cordic_atan_l6b   cata_10_cordic_atan
	( 
	.arctan(wire_cata_10_cordic_atan_arctan),
	.indexbit(indexbitff[10]));
	SIN_bb_altfp_sincos_cordic_atan_m6b   cata_11_cordic_atan
	( 
	.arctan(wire_cata_11_cordic_atan_arctan),
	.indexbit(indexbitff[11]));
	SIN_bb_altfp_sincos_cordic_atan_n6b   cata_12_cordic_atan
	( 
	.arctan(wire_cata_12_cordic_atan_arctan),
	.indexbit(indexbitff[12]));
	SIN_bb_altfp_sincos_cordic_atan_o6b   cata_13_cordic_atan
	( 
	.arctan(wire_cata_13_cordic_atan_arctan),
	.indexbit(indexbitff[13]));
	SIN_bb_altfp_sincos_cordic_atan_55b   cata_1_cordic_atan
	( 
	.arctan(wire_cata_1_cordic_atan_arctan),
	.indexbit(indexbitff[1]));
	SIN_bb_altfp_sincos_cordic_atan_65b   cata_2_cordic_atan
	( 
	.arctan(wire_cata_2_cordic_atan_arctan),
	.indexbit(indexbitff[2]));
	SIN_bb_altfp_sincos_cordic_atan_75b   cata_3_cordic_atan
	( 
	.arctan(wire_cata_3_cordic_atan_arctan),
	.indexbit(indexbitff[3]));
	SIN_bb_altfp_sincos_cordic_atan_85b   cata_4_cordic_atan
	( 
	.arctan(wire_cata_4_cordic_atan_arctan),
	.indexbit(indexbitff[4]));
	SIN_bb_altfp_sincos_cordic_atan_95b   cata_5_cordic_atan
	( 
	.arctan(wire_cata_5_cordic_atan_arctan),
	.indexbit(indexbitff[5]));
	SIN_bb_altfp_sincos_cordic_atan_a5b   cata_6_cordic_atan
	( 
	.arctan(wire_cata_6_cordic_atan_arctan),
	.indexbit(indexbitff[6]));
	SIN_bb_altfp_sincos_cordic_atan_b5b   cata_7_cordic_atan
	( 
	.arctan(wire_cata_7_cordic_atan_arctan),
	.indexbit(indexbitff[7]));
	SIN_bb_altfp_sincos_cordic_atan_c5b   cata_8_cordic_atan
	( 
	.arctan(wire_cata_8_cordic_atan_arctan),
	.indexbit(indexbitff[8]));
	SIN_bb_altfp_sincos_cordic_atan_d5b   cata_9_cordic_atan
	( 
	.arctan(wire_cata_9_cordic_atan_arctan),
	.indexbit(indexbitff[9]));
	SIN_bb_altfp_sincos_cordic_start_709   cxs
	( 
	.index(startindex_w),
	.value(wire_cxs_value));
	// synopsys translate_off
	initial
		cdaff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cdaff_0 <= 34'b0;
		else if  (clken == 1'b1)   cdaff_0 <= delay_input_w;
	// synopsys translate_off
	initial
		cdaff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cdaff_1 <= 34'b0;
		else if  (clken == 1'b1)   cdaff_1 <= cdaff_0;
	// synopsys translate_off
	initial
		cdaff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cdaff_2 <= 34'b0;
		else if  (clken == 1'b1)   cdaff_2 <= cdaff_1;
	// synopsys translate_off
	initial
		indexbitff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) indexbitff <= 17'b0;
		else if  (clken == 1'b1)   indexbitff <= {indexbitff[15:0], indexbit};
	// synopsys translate_off
	initial
		sincosbitff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sincosbitff <= 17'b0;
		else if  (clken == 1'b1)   sincosbitff <= {sincosbitff[15:0], sincosbit};
	// synopsys translate_off
	initial
		sincosff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sincosff <= 34'b0;
		else if  (clken == 1'b1)   sincosff <= wire_sincos_add_result;
	// synopsys translate_off
	initial
		x_pipeff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_0 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_0 <= x_start_node_w;
	// synopsys translate_off
	initial
		x_pipeff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_1 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_1 <= x_pipeff_0;
	// synopsys translate_off
	initial
		x_pipeff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_10 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_10 <= x_pipenode_10_w;
	// synopsys translate_off
	initial
		x_pipeff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_11 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_11 <= x_pipenode_11_w;
	// synopsys translate_off
	initial
		x_pipeff_12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_12 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_12 <= x_pipenode_12_w;
	// synopsys translate_off
	initial
		x_pipeff_13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_13 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_13 <= x_pipenode_13_w;
	// synopsys translate_off
	initial
		x_pipeff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_2 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_2 <= x_pipenode_2_w;
	// synopsys translate_off
	initial
		x_pipeff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_3 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_3 <= x_pipenode_3_w;
	// synopsys translate_off
	initial
		x_pipeff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_4 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_4 <= x_pipenode_4_w;
	// synopsys translate_off
	initial
		x_pipeff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_5 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_5 <= x_pipenode_5_w;
	// synopsys translate_off
	initial
		x_pipeff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_6 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_6 <= x_pipenode_6_w;
	// synopsys translate_off
	initial
		x_pipeff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_7 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_7 <= x_pipenode_7_w;
	// synopsys translate_off
	initial
		x_pipeff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_8 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_8 <= x_pipenode_8_w;
	// synopsys translate_off
	initial
		x_pipeff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) x_pipeff_9 <= 34'b0;
		else if  (clken == 1'b1)   x_pipeff_9 <= x_pipenode_9_w;
	// synopsys translate_off
	initial
		y_pipeff_0[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[0:0] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[0:0] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[1:1] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[1:1] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[2:2] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[2:2] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[3:3] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[3:3] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[4:4] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[4:4] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[5:5] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[5:5] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[6:6] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[6:6] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[7:7] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[7:7] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[7:7] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[8:8] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[8:8] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[8:8] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[9:9] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[9:9] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[9:9] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[10:10] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[10:10] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[10:10] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[11:11] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[11:11] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[11:11] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[12:12] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[12:12] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[12:12] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[13:13] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[13:13] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[13:13] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[14:14] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[14:14] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[14:14] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[15:15] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[15:15] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[15:15] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[16:16] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[16:16] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[16:16] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[17:17] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[17:17] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[17:17] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[18:18] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[18:18] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[18:18] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[19:19] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[19:19] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[19:19] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[20:20] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[20:20] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[20:20] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[21:21] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[21:21] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[21:21] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[22:22] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[22:22] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[22:22] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[23:23] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[23:23] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[23:23] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[24:24] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[24:24] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[24:24] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[25:25] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[25:25] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[25:25] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[26:26] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[26:26] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[26:26] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[27:27] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[27:27] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[27:27] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[28:28] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[28:28] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[28:28] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[29:29] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[29:29] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[29:29] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[30:30] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[30:30] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[30:30] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[31:31] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[31:31] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[31:31] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[32:32] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[32:32] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[32:32] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_0[33:33] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_0[33:33] <= 1'b0;
		else if  (clken == 1'b1)   y_pipeff_0[33:33] <= 1'b0;
	// synopsys translate_off
	initial
		y_pipeff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_1 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_1 <= wire_y_pipeff1_add_result;
	// synopsys translate_off
	initial
		y_pipeff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_10 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_10 <= y_pipenode_10_w;
	// synopsys translate_off
	initial
		y_pipeff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_11 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_11 <= y_pipenode_11_w;
	// synopsys translate_off
	initial
		y_pipeff_12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_12 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_12 <= y_pipenode_12_w;
	// synopsys translate_off
	initial
		y_pipeff_13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_13 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_13 <= y_pipenode_13_w;
	// synopsys translate_off
	initial
		y_pipeff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_2 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_2 <= y_pipenode_2_w;
	// synopsys translate_off
	initial
		y_pipeff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_3 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_3 <= y_pipenode_3_w;
	// synopsys translate_off
	initial
		y_pipeff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_4 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_4 <= y_pipenode_4_w;
	// synopsys translate_off
	initial
		y_pipeff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_5 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_5 <= y_pipenode_5_w;
	// synopsys translate_off
	initial
		y_pipeff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_6 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_6 <= y_pipenode_6_w;
	// synopsys translate_off
	initial
		y_pipeff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_7 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_7 <= y_pipenode_7_w;
	// synopsys translate_off
	initial
		y_pipeff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_8 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_8 <= y_pipenode_8_w;
	// synopsys translate_off
	initial
		y_pipeff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) y_pipeff_9 <= 34'b0;
		else if  (clken == 1'b1)   y_pipeff_9 <= y_pipenode_9_w;
	// synopsys translate_off
	initial
		z_pipeff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_0 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_0 <= radians_load_node_w;
	// synopsys translate_off
	initial
		z_pipeff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_1 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_1 <= wire_z_pipeff1_sub_result;
	// synopsys translate_off
	initial
		z_pipeff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_10 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_10 <= z_pipenode_10_w;
	// synopsys translate_off
	initial
		z_pipeff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_11 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_11 <= z_pipenode_11_w;
	// synopsys translate_off
	initial
		z_pipeff_12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_12 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_12 <= z_pipenode_12_w;
	// synopsys translate_off
	initial
		z_pipeff_13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_13 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_13 <= z_pipenode_13_w;
	// synopsys translate_off
	initial
		z_pipeff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_2 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_2 <= z_pipenode_2_w;
	// synopsys translate_off
	initial
		z_pipeff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_3 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_3 <= z_pipenode_3_w;
	// synopsys translate_off
	initial
		z_pipeff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_4 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_4 <= z_pipenode_4_w;
	// synopsys translate_off
	initial
		z_pipeff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_5 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_5 <= z_pipenode_5_w;
	// synopsys translate_off
	initial
		z_pipeff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_6 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_6 <= z_pipenode_6_w;
	// synopsys translate_off
	initial
		z_pipeff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_7 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_7 <= z_pipenode_7_w;
	// synopsys translate_off
	initial
		z_pipeff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_8 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_8 <= z_pipenode_8_w;
	// synopsys translate_off
	initial
		z_pipeff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) z_pipeff_9 <= 34'b0;
		else if  (clken == 1'b1)   z_pipeff_9 <= z_pipenode_9_w;
	lpm_add_sub   sincos_add
	( 
	.cin((~ sincosbitff[16])),
	.cout(),
	.dataa(delay_pipe_w),
	.datab(post_estimate_w),
	.overflow(),
	.result(wire_sincos_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		sincos_add.lpm_direction = "ADD",
		sincos_add.lpm_representation = "UNSIGNED",
		sincos_add.lpm_width = 34,
		sincos_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_10_add
	( 
	.cin(z_pipeff_9[33]),
	.cout(),
	.dataa(x_pipeff_9),
	.datab(x_subnode_10_w),
	.overflow(),
	.result(wire_x_pipenode_10_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_10_add.lpm_direction = "ADD",
		x_pipenode_10_add.lpm_representation = "UNSIGNED",
		x_pipenode_10_add.lpm_width = 34,
		x_pipenode_10_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_11_add
	( 
	.cin(z_pipeff_10[33]),
	.cout(),
	.dataa(x_pipeff_10),
	.datab(x_subnode_11_w),
	.overflow(),
	.result(wire_x_pipenode_11_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_11_add.lpm_direction = "ADD",
		x_pipenode_11_add.lpm_representation = "UNSIGNED",
		x_pipenode_11_add.lpm_width = 34,
		x_pipenode_11_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_12_add
	( 
	.cin(z_pipeff_11[33]),
	.cout(),
	.dataa(x_pipeff_11),
	.datab(x_subnode_12_w),
	.overflow(),
	.result(wire_x_pipenode_12_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_12_add.lpm_direction = "ADD",
		x_pipenode_12_add.lpm_representation = "UNSIGNED",
		x_pipenode_12_add.lpm_width = 34,
		x_pipenode_12_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_13_add
	( 
	.cin(z_pipeff_12[33]),
	.cout(),
	.dataa(x_pipeff_12),
	.datab(x_subnode_13_w),
	.overflow(),
	.result(wire_x_pipenode_13_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_13_add.lpm_direction = "ADD",
		x_pipenode_13_add.lpm_representation = "UNSIGNED",
		x_pipenode_13_add.lpm_width = 34,
		x_pipenode_13_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_2_add
	( 
	.cin(z_pipeff_1[33]),
	.cout(),
	.dataa(x_pipeff_1),
	.datab(x_subnode_2_w),
	.overflow(),
	.result(wire_x_pipenode_2_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_2_add.lpm_direction = "ADD",
		x_pipenode_2_add.lpm_representation = "UNSIGNED",
		x_pipenode_2_add.lpm_width = 34,
		x_pipenode_2_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_3_add
	( 
	.cin(z_pipeff_2[33]),
	.cout(),
	.dataa(x_pipeff_2),
	.datab(x_subnode_3_w),
	.overflow(),
	.result(wire_x_pipenode_3_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_3_add.lpm_direction = "ADD",
		x_pipenode_3_add.lpm_representation = "UNSIGNED",
		x_pipenode_3_add.lpm_width = 34,
		x_pipenode_3_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_4_add
	( 
	.cin(z_pipeff_3[33]),
	.cout(),
	.dataa(x_pipeff_3),
	.datab(x_subnode_4_w),
	.overflow(),
	.result(wire_x_pipenode_4_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_4_add.lpm_direction = "ADD",
		x_pipenode_4_add.lpm_representation = "UNSIGNED",
		x_pipenode_4_add.lpm_width = 34,
		x_pipenode_4_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_5_add
	( 
	.cin(z_pipeff_4[33]),
	.cout(),
	.dataa(x_pipeff_4),
	.datab(x_subnode_5_w),
	.overflow(),
	.result(wire_x_pipenode_5_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_5_add.lpm_direction = "ADD",
		x_pipenode_5_add.lpm_representation = "UNSIGNED",
		x_pipenode_5_add.lpm_width = 34,
		x_pipenode_5_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_6_add
	( 
	.cin(z_pipeff_5[33]),
	.cout(),
	.dataa(x_pipeff_5),
	.datab(x_subnode_6_w),
	.overflow(),
	.result(wire_x_pipenode_6_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_6_add.lpm_direction = "ADD",
		x_pipenode_6_add.lpm_representation = "UNSIGNED",
		x_pipenode_6_add.lpm_width = 34,
		x_pipenode_6_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_7_add
	( 
	.cin(z_pipeff_6[33]),
	.cout(),
	.dataa(x_pipeff_6),
	.datab(x_subnode_7_w),
	.overflow(),
	.result(wire_x_pipenode_7_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_7_add.lpm_direction = "ADD",
		x_pipenode_7_add.lpm_representation = "UNSIGNED",
		x_pipenode_7_add.lpm_width = 34,
		x_pipenode_7_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_8_add
	( 
	.cin(z_pipeff_7[33]),
	.cout(),
	.dataa(x_pipeff_7),
	.datab(x_subnode_8_w),
	.overflow(),
	.result(wire_x_pipenode_8_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_8_add.lpm_direction = "ADD",
		x_pipenode_8_add.lpm_representation = "UNSIGNED",
		x_pipenode_8_add.lpm_width = 34,
		x_pipenode_8_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   x_pipenode_9_add
	( 
	.cin(z_pipeff_8[33]),
	.cout(),
	.dataa(x_pipeff_8),
	.datab(x_subnode_9_w),
	.overflow(),
	.result(wire_x_pipenode_9_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		x_pipenode_9_add.lpm_direction = "ADD",
		x_pipenode_9_add.lpm_representation = "UNSIGNED",
		x_pipenode_9_add.lpm_width = 34,
		x_pipenode_9_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipeff1_add
	( 
	.cout(),
	.dataa(y_pipeff_0),
	.datab(y_subnode_1_w),
	.overflow(),
	.result(wire_y_pipeff1_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipeff1_add.lpm_direction = "ADD",
		y_pipeff1_add.lpm_representation = "UNSIGNED",
		y_pipeff1_add.lpm_width = 34,
		y_pipeff1_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_10_add
	( 
	.cin(z_pipeff_9[33]),
	.cout(),
	.dataa(y_pipeff_9),
	.datab(y_subnode_10_w),
	.overflow(),
	.result(wire_y_pipenode_10_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_10_add.lpm_direction = "ADD",
		y_pipenode_10_add.lpm_representation = "UNSIGNED",
		y_pipenode_10_add.lpm_width = 34,
		y_pipenode_10_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_11_add
	( 
	.cin(z_pipeff_10[33]),
	.cout(),
	.dataa(y_pipeff_10),
	.datab(y_subnode_11_w),
	.overflow(),
	.result(wire_y_pipenode_11_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_11_add.lpm_direction = "ADD",
		y_pipenode_11_add.lpm_representation = "UNSIGNED",
		y_pipenode_11_add.lpm_width = 34,
		y_pipenode_11_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_12_add
	( 
	.cin(z_pipeff_11[33]),
	.cout(),
	.dataa(y_pipeff_11),
	.datab(y_subnode_12_w),
	.overflow(),
	.result(wire_y_pipenode_12_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_12_add.lpm_direction = "ADD",
		y_pipenode_12_add.lpm_representation = "UNSIGNED",
		y_pipenode_12_add.lpm_width = 34,
		y_pipenode_12_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_13_add
	( 
	.cin(z_pipeff_12[33]),
	.cout(),
	.dataa(y_pipeff_12),
	.datab(y_subnode_13_w),
	.overflow(),
	.result(wire_y_pipenode_13_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_13_add.lpm_direction = "ADD",
		y_pipenode_13_add.lpm_representation = "UNSIGNED",
		y_pipenode_13_add.lpm_width = 34,
		y_pipenode_13_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_2_add
	( 
	.cin(z_pipeff_1[33]),
	.cout(),
	.dataa(y_pipeff_1),
	.datab(y_subnode_2_w),
	.overflow(),
	.result(wire_y_pipenode_2_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_2_add.lpm_direction = "ADD",
		y_pipenode_2_add.lpm_representation = "UNSIGNED",
		y_pipenode_2_add.lpm_width = 34,
		y_pipenode_2_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_3_add
	( 
	.cin(z_pipeff_2[33]),
	.cout(),
	.dataa(y_pipeff_2),
	.datab(y_subnode_3_w),
	.overflow(),
	.result(wire_y_pipenode_3_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_3_add.lpm_direction = "ADD",
		y_pipenode_3_add.lpm_representation = "UNSIGNED",
		y_pipenode_3_add.lpm_width = 34,
		y_pipenode_3_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_4_add
	( 
	.cin(z_pipeff_3[33]),
	.cout(),
	.dataa(y_pipeff_3),
	.datab(y_subnode_4_w),
	.overflow(),
	.result(wire_y_pipenode_4_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_4_add.lpm_direction = "ADD",
		y_pipenode_4_add.lpm_representation = "UNSIGNED",
		y_pipenode_4_add.lpm_width = 34,
		y_pipenode_4_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_5_add
	( 
	.cin(z_pipeff_4[33]),
	.cout(),
	.dataa(y_pipeff_4),
	.datab(y_subnode_5_w),
	.overflow(),
	.result(wire_y_pipenode_5_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_5_add.lpm_direction = "ADD",
		y_pipenode_5_add.lpm_representation = "UNSIGNED",
		y_pipenode_5_add.lpm_width = 34,
		y_pipenode_5_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_6_add
	( 
	.cin(z_pipeff_5[33]),
	.cout(),
	.dataa(y_pipeff_5),
	.datab(y_subnode_6_w),
	.overflow(),
	.result(wire_y_pipenode_6_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_6_add.lpm_direction = "ADD",
		y_pipenode_6_add.lpm_representation = "UNSIGNED",
		y_pipenode_6_add.lpm_width = 34,
		y_pipenode_6_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_7_add
	( 
	.cin(z_pipeff_6[33]),
	.cout(),
	.dataa(y_pipeff_6),
	.datab(y_subnode_7_w),
	.overflow(),
	.result(wire_y_pipenode_7_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_7_add.lpm_direction = "ADD",
		y_pipenode_7_add.lpm_representation = "UNSIGNED",
		y_pipenode_7_add.lpm_width = 34,
		y_pipenode_7_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_8_add
	( 
	.cin(z_pipeff_7[33]),
	.cout(),
	.dataa(y_pipeff_7),
	.datab(y_subnode_8_w),
	.overflow(),
	.result(wire_y_pipenode_8_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_8_add.lpm_direction = "ADD",
		y_pipenode_8_add.lpm_representation = "UNSIGNED",
		y_pipenode_8_add.lpm_width = 34,
		y_pipenode_8_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   y_pipenode_9_add
	( 
	.cin(z_pipeff_8[33]),
	.cout(),
	.dataa(y_pipeff_8),
	.datab(y_subnode_9_w),
	.overflow(),
	.result(wire_y_pipenode_9_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		y_pipenode_9_add.lpm_direction = "ADD",
		y_pipenode_9_add.lpm_representation = "UNSIGNED",
		y_pipenode_9_add.lpm_width = 34,
		y_pipenode_9_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipeff1_sub
	( 
	.cout(),
	.dataa(z_pipeff_0),
	.datab(atannode_0_w),
	.overflow(),
	.result(wire_z_pipeff1_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipeff1_sub.lpm_direction = "SUB",
		z_pipeff1_sub.lpm_representation = "UNSIGNED",
		z_pipeff1_sub.lpm_width = 34,
		z_pipeff1_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_10_add
	( 
	.cin(z_pipeff_9[33]),
	.cout(),
	.dataa(z_pipeff_9),
	.datab(z_subnode_10_w),
	.overflow(),
	.result(wire_z_pipenode_10_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_10_add.lpm_direction = "ADD",
		z_pipenode_10_add.lpm_representation = "UNSIGNED",
		z_pipenode_10_add.lpm_width = 34,
		z_pipenode_10_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_11_add
	( 
	.cin(z_pipeff_10[33]),
	.cout(),
	.dataa(z_pipeff_10),
	.datab(z_subnode_11_w),
	.overflow(),
	.result(wire_z_pipenode_11_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_11_add.lpm_direction = "ADD",
		z_pipenode_11_add.lpm_representation = "UNSIGNED",
		z_pipenode_11_add.lpm_width = 34,
		z_pipenode_11_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_12_add
	( 
	.cin(z_pipeff_11[33]),
	.cout(),
	.dataa(z_pipeff_11),
	.datab(z_subnode_12_w),
	.overflow(),
	.result(wire_z_pipenode_12_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_12_add.lpm_direction = "ADD",
		z_pipenode_12_add.lpm_representation = "UNSIGNED",
		z_pipenode_12_add.lpm_width = 34,
		z_pipenode_12_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_13_add
	( 
	.cin(z_pipeff_12[33]),
	.cout(),
	.dataa(z_pipeff_12),
	.datab(z_subnode_13_w),
	.overflow(),
	.result(wire_z_pipenode_13_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_13_add.lpm_direction = "ADD",
		z_pipenode_13_add.lpm_representation = "UNSIGNED",
		z_pipenode_13_add.lpm_width = 34,
		z_pipenode_13_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_2_add
	( 
	.cin(z_pipeff_1[33]),
	.cout(),
	.dataa(z_pipeff_1),
	.datab(z_subnode_2_w),
	.overflow(),
	.result(wire_z_pipenode_2_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_2_add.lpm_direction = "ADD",
		z_pipenode_2_add.lpm_representation = "UNSIGNED",
		z_pipenode_2_add.lpm_width = 34,
		z_pipenode_2_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_3_add
	( 
	.cin(z_pipeff_2[33]),
	.cout(),
	.dataa(z_pipeff_2),
	.datab(z_subnode_3_w),
	.overflow(),
	.result(wire_z_pipenode_3_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_3_add.lpm_direction = "ADD",
		z_pipenode_3_add.lpm_representation = "UNSIGNED",
		z_pipenode_3_add.lpm_width = 34,
		z_pipenode_3_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_4_add
	( 
	.cin(z_pipeff_3[33]),
	.cout(),
	.dataa(z_pipeff_3),
	.datab(z_subnode_4_w),
	.overflow(),
	.result(wire_z_pipenode_4_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_4_add.lpm_direction = "ADD",
		z_pipenode_4_add.lpm_representation = "UNSIGNED",
		z_pipenode_4_add.lpm_width = 34,
		z_pipenode_4_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_5_add
	( 
	.cin(z_pipeff_4[33]),
	.cout(),
	.dataa(z_pipeff_4),
	.datab(z_subnode_5_w),
	.overflow(),
	.result(wire_z_pipenode_5_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_5_add.lpm_direction = "ADD",
		z_pipenode_5_add.lpm_representation = "UNSIGNED",
		z_pipenode_5_add.lpm_width = 34,
		z_pipenode_5_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_6_add
	( 
	.cin(z_pipeff_5[33]),
	.cout(),
	.dataa(z_pipeff_5),
	.datab(z_subnode_6_w),
	.overflow(),
	.result(wire_z_pipenode_6_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_6_add.lpm_direction = "ADD",
		z_pipenode_6_add.lpm_representation = "UNSIGNED",
		z_pipenode_6_add.lpm_width = 34,
		z_pipenode_6_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_7_add
	( 
	.cin(z_pipeff_6[33]),
	.cout(),
	.dataa(z_pipeff_6),
	.datab(z_subnode_7_w),
	.overflow(),
	.result(wire_z_pipenode_7_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_7_add.lpm_direction = "ADD",
		z_pipenode_7_add.lpm_representation = "UNSIGNED",
		z_pipenode_7_add.lpm_width = 34,
		z_pipenode_7_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_8_add
	( 
	.cin(z_pipeff_7[33]),
	.cout(),
	.dataa(z_pipeff_7),
	.datab(z_subnode_8_w),
	.overflow(),
	.result(wire_z_pipenode_8_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_8_add.lpm_direction = "ADD",
		z_pipenode_8_add.lpm_representation = "UNSIGNED",
		z_pipenode_8_add.lpm_width = 34,
		z_pipenode_8_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   z_pipenode_9_add
	( 
	.cin(z_pipeff_8[33]),
	.cout(),
	.dataa(z_pipeff_8),
	.datab(z_subnode_9_w),
	.overflow(),
	.result(wire_z_pipenode_9_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		z_pipenode_9_add.lpm_direction = "ADD",
		z_pipenode_9_add.lpm_representation = "UNSIGNED",
		z_pipenode_9_add.lpm_width = 34,
		z_pipenode_9_add.lpm_type = "lpm_add_sub";
	lpm_mult   cmx
	( 
	.aclr(aclr),
	.clken(clken),
	.clock(clock),
	.dataa(multiplier_input_w),
	.datab(z_pipeff_13),
	.result(wire_cmx_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sclr(1'b0),
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		cmx.lpm_pipeline = 3,
		cmx.lpm_representation = "SIGNED",
		cmx.lpm_widtha = 34,
		cmx.lpm_widthb = 34,
		cmx.lpm_widthp = 68,
		cmx.lpm_type = "lpm_mult";
	assign
		atannode_0_w = wire_cata_0_cordic_atan_arctan,
		atannode_10_w = wire_cata_10_cordic_atan_arctan,
		atannode_11_w = wire_cata_11_cordic_atan_arctan,
		atannode_12_w = wire_cata_12_cordic_atan_arctan,
		atannode_1_w = wire_cata_1_cordic_atan_arctan,
		atannode_2_w = wire_cata_2_cordic_atan_arctan,
		atannode_3_w = wire_cata_3_cordic_atan_arctan,
		atannode_4_w = wire_cata_4_cordic_atan_arctan,
		atannode_5_w = wire_cata_5_cordic_atan_arctan,
		atannode_6_w = wire_cata_6_cordic_atan_arctan,
		atannode_7_w = wire_cata_7_cordic_atan_arctan,
		atannode_8_w = wire_cata_8_cordic_atan_arctan,
		atannode_9_w = wire_cata_9_cordic_atan_arctan,
		delay_input_w = ((x_pipeff_13 & {34{(~ sincosbitff[13])}}) | (y_pipeff_13 & {34{sincosbitff[13]}})),
		delay_pipe_w = cdaff_2,
		estimate_w = {((pre_estimate_w[33] & (~ indexbitff[16])) | (pre_estimate_w[33] & indexbitff[16])), ((pre_estimate_w[32] & (~ indexbitff[16])) | (pre_estimate_w[33] & indexbitff[16])), ((pre_estimate_w[31] & (~ indexbitff[16])) | (pre_estimate_w[33] & indexbitff[16])), ((pre_estimate_w[30] & (~ indexbitff[16])) | (pre_estimate_w[32] & indexbitff[16])), ((pre_estimate_w[29] & (~ indexbitff[16])) | (pre_estimate_w[31] & indexbitff[16])), ((pre_estimate_w[28] & (~ indexbitff[16])) | (pre_estimate_w[30] & indexbitff[16])), ((pre_estimate_w[27] & (~ indexbitff[16])) | (pre_estimate_w[29] & indexbitff[16])), ((pre_estimate_w[26] & (~ indexbitff[16])) | (pre_estimate_w[28] & indexbitff[16])), ((pre_estimate_w[25] & (~ indexbitff[16])) | (pre_estimate_w[27] & indexbitff[16])), ((pre_estimate_w[24] & (~ indexbitff[16])) | (pre_estimate_w[26] & indexbitff[16])), ((pre_estimate_w[23] & (~ indexbitff[16])) | (pre_estimate_w[25] & indexbitff[16])), ((pre_estimate_w[22] & (~ indexbitff[16])) | (pre_estimate_w[24] & indexbitff[16])), ((pre_estimate_w[21] & (~ indexbitff[16])) | (pre_estimate_w[23] & indexbitff[16])), ((pre_estimate_w[20] & (~ indexbitff[16])) | (pre_estimate_w[22] & indexbitff[16])), ((pre_estimate_w[19] & (~ indexbitff[16])) | (pre_estimate_w[21] & indexbitff[16])), ((pre_estimate_w[18] & (~ indexbitff[16])) | (pre_estimate_w[20] & indexbitff[16])), ((pre_estimate_w[17] & (~ indexbitff[16])) | (pre_estimate_w[19] & indexbitff[16])), ((pre_estimate_w[16] & (~ indexbitff[16])) | (pre_estimate_w[18] & indexbitff[16])), ((pre_estimate_w[15] & (~ indexbitff[16])) | (pre_estimate_w[17] & indexbitff[16])), ((pre_estimate_w[14] & (~ indexbitff[16])) | (pre_estimate_w[16] & indexbitff[16])), ((pre_estimate_w[13] & (~ indexbitff[16])) | (pre_estimate_w[15] & indexbitff[16])), ((pre_estimate_w[12] & (~ indexbitff[16])) | (pre_estimate_w[14] & indexbitff[16])), ((pre_estimate_w[11] & (~ indexbitff[16])) | (pre_estimate_w[13] & indexbitff[16])), ((pre_estimate_w[10] & (~ indexbitff[16])) | (pre_estimate_w[12] & indexbitff[16]
)), ((pre_estimate_w[9] & (~ indexbitff[16])) | (pre_estimate_w[11] & indexbitff[16])), ((pre_estimate_w[8] & (~ indexbitff[16])) | (pre_estimate_w[10] & indexbitff[16])), ((pre_estimate_w[7] & (~ indexbitff[16])) | (pre_estimate_w[9] & indexbitff[16])), ((pre_estimate_w[6] & (~ indexbitff[16])) | (pre_estimate_w[8] & indexbitff[16])), ((pre_estimate_w[5] & (~ indexbitff[16])) | (pre_estimate_w[7] & indexbitff[16])), ((pre_estimate_w[4] & (~ indexbitff[16])) | (pre_estimate_w[6] & indexbitff[16])), ((pre_estimate_w[3] & (~ indexbitff[16])) | (pre_estimate_w[5] & indexbitff[16])), ((pre_estimate_w[2] & (~ indexbitff[16])) | (pre_estimate_w[4] & indexbitff[16])), ((pre_estimate_w[1] & (~ indexbitff[16])) | (pre_estimate_w[3] & indexbitff[16])), ((pre_estimate_w[0] & (~ indexbitff[16])) | (pre_estimate_w[2] & indexbitff[16]))},
		indexpointnum_w = {4{1'b0}},
		multiplier_input_w = ((x_pipeff_13 & {34{sincosbitff[13]}}) | (y_pipeff_13 & {34{(~ sincosbitff[13])}})),
		multipliernode_w = wire_cmx_result,
		post_estimate_w = (estimate_w ^ {34{(~ sincosbitff[16])}}),
		pre_estimate_w = multipliernode_w[65:32],
		radians_load_node_w = {((radians[33] & (~ indexbit)) | (radians[31] & indexbit)), ((radians[32] & (~ indexbit)) | (radians[30] & indexbit)), ((radians[31] & (~ indexbit)) | (radians[29] & indexbit)), ((radians[30] & (~ indexbit)) | (radians[28] & indexbit)), ((radians[29] & (~ indexbit)) | (radians[27] & indexbit)), ((radians[28] & (~ indexbit)) | (radians[26] & indexbit)), ((radians[27] & (~ indexbit)) | (radians[25] & indexbit)), ((radians[26] & (~ indexbit)) | (radians[24] & indexbit)), ((radians[25] & (~ indexbit)) | (radians[23] & indexbit)), ((radians[24] & (~ indexbit)) | (radians[22] & indexbit)), ((radians[23] & (~ indexbit)) | (radians[21] & indexbit)), ((radians[22] & (~ indexbit)) | (radians[20] & indexbit)), ((radians[21] & (~ indexbit)) | (radians[19] & indexbit)), ((radians[20] & (~ indexbit)) | (radians[18] & indexbit)), ((radians[19] & (~ indexbit)) | (radians[17] & indexbit)), ((radians[18] & (~ indexbit)) | (radians[16] & indexbit)), ((radians[17] & (~ indexbit)) | (radians[15] & indexbit)), ((radians[16] & (~ indexbit)) | (radians[14] & indexbit)), ((radians[15] & (~ indexbit)) | (radians[13] & indexbit)), ((radians[14] & (~ indexbit)) | (radians[12] & indexbit)), ((radians[13] & (~ indexbit)) | (radians[11] & indexbit)), ((radians[12] & (~ indexbit)) | (radians[10] & indexbit)), ((radians[11] & (~ indexbit)) | (radians[9] & indexbit)), ((radians[10] & (~ indexbit)) | (radians[8] & indexbit)), ((radians[9] & (~ indexbit)) | (radians[7] & indexbit)), ((radians[8] & (~ indexbit)) | (radians[6] & indexbit)), ((radians[7] & (~ indexbit)) | (radians[5] & indexbit)), ((radians[6] & (~ indexbit)) | (radians[4] & indexbit)), ((radians[5] & (~ indexbit)) | (radians[3] & indexbit)), ((radians[4] & (~ indexbit)) | (radians[2] & indexbit)), ((radians[3] & (~ indexbit)) | (radians[1] & indexbit)), ((radians[2] & (~ indexbit)) | (radians[0] & indexbit)), (radians[1] & (~ indexbit)), (radians[0] & (~ indexbit))},
		sincos = sincosff,
		startindex_w = (indexpointnum_w & {4{indexbit}}),
		x_pipenode_10_w = wire_x_pipenode_10_add_result,
		x_pipenode_11_w = wire_x_pipenode_11_add_result,
		x_pipenode_12_w = wire_x_pipenode_12_add_result,
		x_pipenode_13_w = wire_x_pipenode_13_add_result,
		x_pipenode_2_w = wire_x_pipenode_2_add_result,
		x_pipenode_3_w = wire_x_pipenode_3_add_result,
		x_pipenode_4_w = wire_x_pipenode_4_add_result,
		x_pipenode_5_w = wire_x_pipenode_5_add_result,
		x_pipenode_6_w = wire_x_pipenode_6_add_result,
		x_pipenode_7_w = wire_x_pipenode_7_add_result,
		x_pipenode_8_w = wire_x_pipenode_8_add_result,
		x_pipenode_9_w = wire_x_pipenode_9_add_result,
		x_prenode_10_w = {((x_prenodeone_10_w[33] & (~ indexbitff[9])) | (x_prenodetwo_10_w[33] & indexbitff[9])), ((x_prenodeone_10_w[32] & (~ indexbitff[9])) | (x_prenodetwo_10_w[32] & indexbitff[9])), ((x_prenodeone_10_w[31] & (~ indexbitff[9])) | (x_prenodetwo_10_w[31] & indexbitff[9])), ((x_prenodeone_10_w[30] & (~ indexbitff[9])) | (x_prenodetwo_10_w[30] & indexbitff[9])), ((x_prenodeone_10_w[29] & (~ indexbitff[9])) | (x_prenodetwo_10_w[29] & indexbitff[9])), ((x_prenodeone_10_w[28] & (~ indexbitff[9])) | (x_prenodetwo_10_w[28] & indexbitff[9])), ((x_prenodeone_10_w[27] & (~ indexbitff[9])) | (x_prenodetwo_10_w[27] & indexbitff[9])), ((x_prenodeone_10_w[26] & (~ indexbitff[9])) | (x_prenodetwo_10_w[26] & indexbitff[9])), ((x_prenodeone_10_w[25] & (~ indexbitff[9])) | (x_prenodetwo_10_w[25] & indexbitff[9])), ((x_prenodeone_10_w[24] & (~ indexbitff[9])) | (x_prenodetwo_10_w[24] & indexbitff[9])), ((x_prenodeone_10_w[23] & (~ indexbitff[9])) | (x_prenodetwo_10_w[23] & indexbitff[9])), ((x_prenodeone_10_w[22] & (~ indexbitff[9])) | (x_prenodetwo_10_w[22] & indexbitff[9])), ((x_prenodeone_10_w[21] & (~ indexbitff[9])) | (x_prenodetwo_10_w[21] & indexbitff[9])), ((x_prenodeone_10_w[20] & (~ indexbitff[9])) | (x_prenodetwo_10_w[20] & indexbitff[9])), ((x_prenodeone_10_w[19] & (~ indexbitff[9])) | (x_prenodetwo_10_w[19] & indexbitff[9])), ((x_prenodeone_10_w[18] & (~ indexbitff[9])) | (x_prenodetwo_10_w[18] & indexbitff[9])), ((x_prenodeone_10_w[17] & (~ indexbitff[9])) | (x_prenodetwo_10_w[17] & indexbitff[9])), ((x_prenodeone_10_w[16] & (~ indexbitff[9])) | (x_prenodetwo_10_w[16] & indexbitff[9])), ((x_prenodeone_10_w[15] & (~ indexbitff[9])) | (x_prenodetwo_10_w[15] & indexbitff[9])), ((x_prenodeone_10_w[14] & (~ indexbitff[9])) | (x_prenodetwo_10_w[14] & indexbitff[9])), ((x_prenodeone_10_w[13] & (~ indexbitff[9])) | (x_prenodetwo_10_w[13] & indexbitff[9])), ((x_prenodeone_10_w[12] & (~ indexbitff[9])) | (x_prenodetwo_10_w[12] & indexbitff[9])), ((x_prenodeone_10_w[11] & (~ indexbitff[9])) | (x_prenodetwo_10_w[11] 
& indexbitff[9])), ((x_prenodeone_10_w[10] & (~ indexbitff[9])) | (x_prenodetwo_10_w[10] & indexbitff[9])), ((x_prenodeone_10_w[9] & (~ indexbitff[9])) | (x_prenodetwo_10_w[9] & indexbitff[9])), ((x_prenodeone_10_w[8] & (~ indexbitff[9])) | (x_prenodetwo_10_w[8] & indexbitff[9])), ((x_prenodeone_10_w[7] & (~ indexbitff[9])) | (x_prenodetwo_10_w[7] & indexbitff[9])), ((x_prenodeone_10_w[6] & (~ indexbitff[9])) | (x_prenodetwo_10_w[6] & indexbitff[9])), ((x_prenodeone_10_w[5] & (~ indexbitff[9])) | (x_prenodetwo_10_w[5] & indexbitff[9])), ((x_prenodeone_10_w[4] & (~ indexbitff[9])) | (x_prenodetwo_10_w[4] & indexbitff[9])), ((x_prenodeone_10_w[3] & (~ indexbitff[9])) | (x_prenodetwo_10_w[3] & indexbitff[9])), ((x_prenodeone_10_w[2] & (~ indexbitff[9])) | (x_prenodetwo_10_w[2] & indexbitff[9])), ((x_prenodeone_10_w[1] & (~ indexbitff[9])) | (x_prenodetwo_10_w[1] & indexbitff[9])), ((x_prenodeone_10_w[0] & (~ indexbitff[9])) | (x_prenodetwo_10_w[0] & indexbitff[9]))},
		x_prenode_11_w = {((x_prenodeone_11_w[33] & (~ indexbitff[10])) | (x_prenodetwo_11_w[33] & indexbitff[10])), ((x_prenodeone_11_w[32] & (~ indexbitff[10])) | (x_prenodetwo_11_w[32] & indexbitff[10])), ((x_prenodeone_11_w[31] & (~ indexbitff[10])) | (x_prenodetwo_11_w[31] & indexbitff[10])), ((x_prenodeone_11_w[30] & (~ indexbitff[10])) | (x_prenodetwo_11_w[30] & indexbitff[10])), ((x_prenodeone_11_w[29] & (~ indexbitff[10])) | (x_prenodetwo_11_w[29] & indexbitff[10])), ((x_prenodeone_11_w[28] & (~ indexbitff[10])) | (x_prenodetwo_11_w[28] & indexbitff[10])), ((x_prenodeone_11_w[27] & (~ indexbitff[10])) | (x_prenodetwo_11_w[27] & indexbitff[10])), ((x_prenodeone_11_w[26] & (~ indexbitff[10])) | (x_prenodetwo_11_w[26] & indexbitff[10])), ((x_prenodeone_11_w[25] & (~ indexbitff[10])) | (x_prenodetwo_11_w[25] & indexbitff[10])), ((x_prenodeone_11_w[24] & (~ indexbitff[10])) | (x_prenodetwo_11_w[24] & indexbitff[10])), ((x_prenodeone_11_w[23] & (~ indexbitff[10])) | (x_prenodetwo_11_w[23] & indexbitff[10])), ((x_prenodeone_11_w[22] & (~ indexbitff[10])) | (x_prenodetwo_11_w[22] & indexbitff[10])), ((x_prenodeone_11_w[21] & (~ indexbitff[10])) | (x_prenodetwo_11_w[21] & indexbitff[10])), ((x_prenodeone_11_w[20] & (~ indexbitff[10])) | (x_prenodetwo_11_w[20] & indexbitff[10])), ((x_prenodeone_11_w[19] & (~ indexbitff[10])) | (x_prenodetwo_11_w[19] & indexbitff[10])), ((x_prenodeone_11_w[18] & (~ indexbitff[10])) | (x_prenodetwo_11_w[18] & indexbitff[10])), ((x_prenodeone_11_w[17] & (~ indexbitff[10])) | (x_prenodetwo_11_w[17] & indexbitff[10])), ((x_prenodeone_11_w[16] & (~ indexbitff[10])) | (x_prenodetwo_11_w[16] & indexbitff[10])), ((x_prenodeone_11_w[15] & (~ indexbitff[10])) | (x_prenodetwo_11_w[15] & indexbitff[10])), ((x_prenodeone_11_w[14] & (~ indexbitff[10])) | (x_prenodetwo_11_w[14] & indexbitff[10])), ((x_prenodeone_11_w[13] & (~ indexbitff[10])) | (x_prenodetwo_11_w[13] & indexbitff[10])), ((x_prenodeone_11_w[12] & (~ indexbitff[10])) | (x_prenodetwo_11_w[12] & indexbitff[10])), ((x_prenodeone_11_w[11] & 
(~ indexbitff[10])) | (x_prenodetwo_11_w[11] & indexbitff[10])), ((x_prenodeone_11_w[10] & (~ indexbitff[10])) | (x_prenodetwo_11_w[10] & indexbitff[10])), ((x_prenodeone_11_w[9] & (~ indexbitff[10])) | (x_prenodetwo_11_w[9] & indexbitff[10])), ((x_prenodeone_11_w[8] & (~ indexbitff[10])) | (x_prenodetwo_11_w[8] & indexbitff[10])), ((x_prenodeone_11_w[7] & (~ indexbitff[10])) | (x_prenodetwo_11_w[7] & indexbitff[10])), ((x_prenodeone_11_w[6] & (~ indexbitff[10])) | (x_prenodetwo_11_w[6] & indexbitff[10])), ((x_prenodeone_11_w[5] & (~ indexbitff[10])) | (x_prenodetwo_11_w[5] & indexbitff[10])), ((x_prenodeone_11_w[4] & (~ indexbitff[10])) | (x_prenodetwo_11_w[4] & indexbitff[10])), ((x_prenodeone_11_w[3] & (~ indexbitff[10])) | (x_prenodetwo_11_w[3] & indexbitff[10])), ((x_prenodeone_11_w[2] & (~ indexbitff[10])) | (x_prenodetwo_11_w[2] & indexbitff[10])), ((x_prenodeone_11_w[1] & (~ indexbitff[10])) | (x_prenodetwo_11_w[1] & indexbitff[10])), ((x_prenodeone_11_w[0] & (~ indexbitff[10])) | (x_prenodetwo_11_w[0] & indexbitff[10]))},
		x_prenode_12_w = {((x_prenodeone_12_w[33] & (~ indexbitff[11])) | (x_prenodetwo_12_w[33] & indexbitff[11])), ((x_prenodeone_12_w[32] & (~ indexbitff[11])) | (x_prenodetwo_12_w[32] & indexbitff[11])), ((x_prenodeone_12_w[31] & (~ indexbitff[11])) | (x_prenodetwo_12_w[31] & indexbitff[11])), ((x_prenodeone_12_w[30] & (~ indexbitff[11])) | (x_prenodetwo_12_w[30] & indexbitff[11])), ((x_prenodeone_12_w[29] & (~ indexbitff[11])) | (x_prenodetwo_12_w[29] & indexbitff[11])), ((x_prenodeone_12_w[28] & (~ indexbitff[11])) | (x_prenodetwo_12_w[28] & indexbitff[11])), ((x_prenodeone_12_w[27] & (~ indexbitff[11])) | (x_prenodetwo_12_w[27] & indexbitff[11])), ((x_prenodeone_12_w[26] & (~ indexbitff[11])) | (x_prenodetwo_12_w[26] & indexbitff[11])), ((x_prenodeone_12_w[25] & (~ indexbitff[11])) | (x_prenodetwo_12_w[25] & indexbitff[11])), ((x_prenodeone_12_w[24] & (~ indexbitff[11])) | (x_prenodetwo_12_w[24] & indexbitff[11])), ((x_prenodeone_12_w[23] & (~ indexbitff[11])) | (x_prenodetwo_12_w[23] & indexbitff[11])), ((x_prenodeone_12_w[22] & (~ indexbitff[11])) | (x_prenodetwo_12_w[22] & indexbitff[11])), ((x_prenodeone_12_w[21] & (~ indexbitff[11])) | (x_prenodetwo_12_w[21] & indexbitff[11])), ((x_prenodeone_12_w[20] & (~ indexbitff[11])) | (x_prenodetwo_12_w[20] & indexbitff[11])), ((x_prenodeone_12_w[19] & (~ indexbitff[11])) | (x_prenodetwo_12_w[19] & indexbitff[11])), ((x_prenodeone_12_w[18] & (~ indexbitff[11])) | (x_prenodetwo_12_w[18] & indexbitff[11])), ((x_prenodeone_12_w[17] & (~ indexbitff[11])) | (x_prenodetwo_12_w[17] & indexbitff[11])), ((x_prenodeone_12_w[16] & (~ indexbitff[11])) | (x_prenodetwo_12_w[16] & indexbitff[11])), ((x_prenodeone_12_w[15] & (~ indexbitff[11])) | (x_prenodetwo_12_w[15] & indexbitff[11])), ((x_prenodeone_12_w[14] & (~ indexbitff[11])) | (x_prenodetwo_12_w[14] & indexbitff[11])), ((x_prenodeone_12_w[13] & (~ indexbitff[11])) | (x_prenodetwo_12_w[13] & indexbitff[11])), ((x_prenodeone_12_w[12] & (~ indexbitff[11])) | (x_prenodetwo_12_w[12] & indexbitff[11])), ((x_prenodeone_12_w[11] & 
(~ indexbitff[11])) | (x_prenodetwo_12_w[11] & indexbitff[11])), ((x_prenodeone_12_w[10] & (~ indexbitff[11])) | (x_prenodetwo_12_w[10] & indexbitff[11])), ((x_prenodeone_12_w[9] & (~ indexbitff[11])) | (x_prenodetwo_12_w[9] & indexbitff[11])), ((x_prenodeone_12_w[8] & (~ indexbitff[11])) | (x_prenodetwo_12_w[8] & indexbitff[11])), ((x_prenodeone_12_w[7] & (~ indexbitff[11])) | (x_prenodetwo_12_w[7] & indexbitff[11])), ((x_prenodeone_12_w[6] & (~ indexbitff[11])) | (x_prenodetwo_12_w[6] & indexbitff[11])), ((x_prenodeone_12_w[5] & (~ indexbitff[11])) | (x_prenodetwo_12_w[5] & indexbitff[11])), ((x_prenodeone_12_w[4] & (~ indexbitff[11])) | (x_prenodetwo_12_w[4] & indexbitff[11])), ((x_prenodeone_12_w[3] & (~ indexbitff[11])) | (x_prenodetwo_12_w[3] & indexbitff[11])), ((x_prenodeone_12_w[2] & (~ indexbitff[11])) | (x_prenodetwo_12_w[2] & indexbitff[11])), ((x_prenodeone_12_w[1] & (~ indexbitff[11])) | (x_prenodetwo_12_w[1] & indexbitff[11])), ((x_prenodeone_12_w[0] & (~ indexbitff[11])) | (x_prenodetwo_12_w[0] & indexbitff[11]))},
		x_prenode_13_w = {((x_prenodeone_13_w[33] & (~ indexbitff[12])) | (x_prenodetwo_13_w[33] & indexbitff[12])), ((x_prenodeone_13_w[32] & (~ indexbitff[12])) | (x_prenodetwo_13_w[32] & indexbitff[12])), ((x_prenodeone_13_w[31] & (~ indexbitff[12])) | (x_prenodetwo_13_w[31] & indexbitff[12])), ((x_prenodeone_13_w[30] & (~ indexbitff[12])) | (x_prenodetwo_13_w[30] & indexbitff[12])), ((x_prenodeone_13_w[29] & (~ indexbitff[12])) | (x_prenodetwo_13_w[29] & indexbitff[12])), ((x_prenodeone_13_w[28] & (~ indexbitff[12])) | (x_prenodetwo_13_w[28] & indexbitff[12])), ((x_prenodeone_13_w[27] & (~ indexbitff[12])) | (x_prenodetwo_13_w[27] & indexbitff[12])), ((x_prenodeone_13_w[26] & (~ indexbitff[12])) | (x_prenodetwo_13_w[26] & indexbitff[12])), ((x_prenodeone_13_w[25] & (~ indexbitff[12])) | (x_prenodetwo_13_w[25] & indexbitff[12])), ((x_prenodeone_13_w[24] & (~ indexbitff[12])) | (x_prenodetwo_13_w[24] & indexbitff[12])), ((x_prenodeone_13_w[23] & (~ indexbitff[12])) | (x_prenodetwo_13_w[23] & indexbitff[12])), ((x_prenodeone_13_w[22] & (~ indexbitff[12])) | (x_prenodetwo_13_w[22] & indexbitff[12])), ((x_prenodeone_13_w[21] & (~ indexbitff[12])) | (x_prenodetwo_13_w[21] & indexbitff[12])), ((x_prenodeone_13_w[20] & (~ indexbitff[12])) | (x_prenodetwo_13_w[20] & indexbitff[12])), ((x_prenodeone_13_w[19] & (~ indexbitff[12])) | (x_prenodetwo_13_w[19] & indexbitff[12])), ((x_prenodeone_13_w[18] & (~ indexbitff[12])) | (x_prenodetwo_13_w[18] & indexbitff[12])), ((x_prenodeone_13_w[17] & (~ indexbitff[12])) | (x_prenodetwo_13_w[17] & indexbitff[12])), ((x_prenodeone_13_w[16] & (~ indexbitff[12])) | (x_prenodetwo_13_w[16] & indexbitff[12])), ((x_prenodeone_13_w[15] & (~ indexbitff[12])) | (x_prenodetwo_13_w[15] & indexbitff[12])), ((x_prenodeone_13_w[14] & (~ indexbitff[12])) | (x_prenodetwo_13_w[14] & indexbitff[12])), ((x_prenodeone_13_w[13] & (~ indexbitff[12])) | (x_prenodetwo_13_w[13] & indexbitff[12])), ((x_prenodeone_13_w[12] & (~ indexbitff[12])) | (x_prenodetwo_13_w[12] & indexbitff[12])), ((x_prenodeone_13_w[11] & 
(~ indexbitff[12])) | (x_prenodetwo_13_w[11] & indexbitff[12])), ((x_prenodeone_13_w[10] & (~ indexbitff[12])) | (x_prenodetwo_13_w[10] & indexbitff[12])), ((x_prenodeone_13_w[9] & (~ indexbitff[12])) | (x_prenodetwo_13_w[9] & indexbitff[12])), ((x_prenodeone_13_w[8] & (~ indexbitff[12])) | (x_prenodetwo_13_w[8] & indexbitff[12])), ((x_prenodeone_13_w[7] & (~ indexbitff[12])) | (x_prenodetwo_13_w[7] & indexbitff[12])), ((x_prenodeone_13_w[6] & (~ indexbitff[12])) | (x_prenodetwo_13_w[6] & indexbitff[12])), ((x_prenodeone_13_w[5] & (~ indexbitff[12])) | (x_prenodetwo_13_w[5] & indexbitff[12])), ((x_prenodeone_13_w[4] & (~ indexbitff[12])) | (x_prenodetwo_13_w[4] & indexbitff[12])), ((x_prenodeone_13_w[3] & (~ indexbitff[12])) | (x_prenodetwo_13_w[3] & indexbitff[12])), ((x_prenodeone_13_w[2] & (~ indexbitff[12])) | (x_prenodetwo_13_w[2] & indexbitff[12])), ((x_prenodeone_13_w[1] & (~ indexbitff[12])) | (x_prenodetwo_13_w[1] & indexbitff[12])), ((x_prenodeone_13_w[0] & (~ indexbitff[12])) | (x_prenodetwo_13_w[0] & indexbitff[12]))},
		x_prenode_2_w = {((x_prenodeone_2_w[33] & (~ indexbitff[1])) | (x_prenodetwo_2_w[33] & indexbitff[1])), ((x_prenodeone_2_w[32] & (~ indexbitff[1])) | (x_prenodetwo_2_w[32] & indexbitff[1])), ((x_prenodeone_2_w[31] & (~ indexbitff[1])) | (x_prenodetwo_2_w[31] & indexbitff[1])), ((x_prenodeone_2_w[30] & (~ indexbitff[1])) | (x_prenodetwo_2_w[30] & indexbitff[1])), ((x_prenodeone_2_w[29] & (~ indexbitff[1])) | (x_prenodetwo_2_w[29] & indexbitff[1])), ((x_prenodeone_2_w[28] & (~ indexbitff[1])) | (x_prenodetwo_2_w[28] & indexbitff[1])), ((x_prenodeone_2_w[27] & (~ indexbitff[1])) | (x_prenodetwo_2_w[27] & indexbitff[1])), ((x_prenodeone_2_w[26] & (~ indexbitff[1])) | (x_prenodetwo_2_w[26] & indexbitff[1])), ((x_prenodeone_2_w[25] & (~ indexbitff[1])) | (x_prenodetwo_2_w[25] & indexbitff[1])), ((x_prenodeone_2_w[24] & (~ indexbitff[1])) | (x_prenodetwo_2_w[24] & indexbitff[1])), ((x_prenodeone_2_w[23] & (~ indexbitff[1])) | (x_prenodetwo_2_w[23] & indexbitff[1])), ((x_prenodeone_2_w[22] & (~ indexbitff[1])) | (x_prenodetwo_2_w[22] & indexbitff[1])), ((x_prenodeone_2_w[21] & (~ indexbitff[1])) | (x_prenodetwo_2_w[21] & indexbitff[1])), ((x_prenodeone_2_w[20] & (~ indexbitff[1])) | (x_prenodetwo_2_w[20] & indexbitff[1])), ((x_prenodeone_2_w[19] & (~ indexbitff[1])) | (x_prenodetwo_2_w[19] & indexbitff[1])), ((x_prenodeone_2_w[18] & (~ indexbitff[1])) | (x_prenodetwo_2_w[18] & indexbitff[1])), ((x_prenodeone_2_w[17] & (~ indexbitff[1])) | (x_prenodetwo_2_w[17] & indexbitff[1])), ((x_prenodeone_2_w[16] & (~ indexbitff[1])) | (x_prenodetwo_2_w[16] & indexbitff[1])), ((x_prenodeone_2_w[15] & (~ indexbitff[1])) | (x_prenodetwo_2_w[15] & indexbitff[1])), ((x_prenodeone_2_w[14] & (~ indexbitff[1])) | (x_prenodetwo_2_w[14] & indexbitff[1])), ((x_prenodeone_2_w[13] & (~ indexbitff[1])) | (x_prenodetwo_2_w[13] & indexbitff[1])), ((x_prenodeone_2_w[12] & (~ indexbitff[1])) | (x_prenodetwo_2_w[12] & indexbitff[1])), ((x_prenodeone_2_w[11] & (~ indexbitff[1])) | (x_prenodetwo_2_w[11] & indexbitff[1])), ((x_prenodeone_2_w[10] & (~ indexbitff[1]
)) | (x_prenodetwo_2_w[10] & indexbitff[1])), ((x_prenodeone_2_w[9] & (~ indexbitff[1])) | (x_prenodetwo_2_w[9] & indexbitff[1])), ((x_prenodeone_2_w[8] & (~ indexbitff[1])) | (x_prenodetwo_2_w[8] & indexbitff[1])), ((x_prenodeone_2_w[7] & (~ indexbitff[1])) | (x_prenodetwo_2_w[7] & indexbitff[1])), ((x_prenodeone_2_w[6] & (~ indexbitff[1])) | (x_prenodetwo_2_w[6] & indexbitff[1])), ((x_prenodeone_2_w[5] & (~ indexbitff[1])) | (x_prenodetwo_2_w[5] & indexbitff[1])), ((x_prenodeone_2_w[4] & (~ indexbitff[1])) | (x_prenodetwo_2_w[4] & indexbitff[1])), ((x_prenodeone_2_w[3] & (~ indexbitff[1])) | (x_prenodetwo_2_w[3] & indexbitff[1])), ((x_prenodeone_2_w[2] & (~ indexbitff[1])) | (x_prenodetwo_2_w[2] & indexbitff[1])), ((x_prenodeone_2_w[1] & (~ indexbitff[1])) | (x_prenodetwo_2_w[1] & indexbitff[1])), ((x_prenodeone_2_w[0] & (~ indexbitff[1])) | (x_prenodetwo_2_w[0] & indexbitff[1]))},
		x_prenode_3_w = {((x_prenodeone_3_w[33] & (~ indexbitff[2])) | (x_prenodetwo_3_w[33] & indexbitff[2])), ((x_prenodeone_3_w[32] & (~ indexbitff[2])) | (x_prenodetwo_3_w[32] & indexbitff[2])), ((x_prenodeone_3_w[31] & (~ indexbitff[2])) | (x_prenodetwo_3_w[31] & indexbitff[2])), ((x_prenodeone_3_w[30] & (~ indexbitff[2])) | (x_prenodetwo_3_w[30] & indexbitff[2])), ((x_prenodeone_3_w[29] & (~ indexbitff[2])) | (x_prenodetwo_3_w[29] & indexbitff[2])), ((x_prenodeone_3_w[28] & (~ indexbitff[2])) | (x_prenodetwo_3_w[28] & indexbitff[2])), ((x_prenodeone_3_w[27] & (~ indexbitff[2])) | (x_prenodetwo_3_w[27] & indexbitff[2])), ((x_prenodeone_3_w[26] & (~ indexbitff[2])) | (x_prenodetwo_3_w[26] & indexbitff[2])), ((x_prenodeone_3_w[25] & (~ indexbitff[2])) | (x_prenodetwo_3_w[25] & indexbitff[2])), ((x_prenodeone_3_w[24] & (~ indexbitff[2])) | (x_prenodetwo_3_w[24] & indexbitff[2])), ((x_prenodeone_3_w[23] & (~ indexbitff[2])) | (x_prenodetwo_3_w[23] & indexbitff[2])), ((x_prenodeone_3_w[22] & (~ indexbitff[2])) | (x_prenodetwo_3_w[22] & indexbitff[2])), ((x_prenodeone_3_w[21] & (~ indexbitff[2])) | (x_prenodetwo_3_w[21] & indexbitff[2])), ((x_prenodeone_3_w[20] & (~ indexbitff[2])) | (x_prenodetwo_3_w[20] & indexbitff[2])), ((x_prenodeone_3_w[19] & (~ indexbitff[2])) | (x_prenodetwo_3_w[19] & indexbitff[2])), ((x_prenodeone_3_w[18] & (~ indexbitff[2])) | (x_prenodetwo_3_w[18] & indexbitff[2])), ((x_prenodeone_3_w[17] & (~ indexbitff[2])) | (x_prenodetwo_3_w[17] & indexbitff[2])), ((x_prenodeone_3_w[16] & (~ indexbitff[2])) | (x_prenodetwo_3_w[16] & indexbitff[2])), ((x_prenodeone_3_w[15] & (~ indexbitff[2])) | (x_prenodetwo_3_w[15] & indexbitff[2])), ((x_prenodeone_3_w[14] & (~ indexbitff[2])) | (x_prenodetwo_3_w[14] & indexbitff[2])), ((x_prenodeone_3_w[13] & (~ indexbitff[2])) | (x_prenodetwo_3_w[13] & indexbitff[2])), ((x_prenodeone_3_w[12] & (~ indexbitff[2])) | (x_prenodetwo_3_w[12] & indexbitff[2])), ((x_prenodeone_3_w[11] & (~ indexbitff[2])) | (x_prenodetwo_3_w[11] & indexbitff[2])), ((x_prenodeone_3_w[10] & (~ indexbitff[2]
)) | (x_prenodetwo_3_w[10] & indexbitff[2])), ((x_prenodeone_3_w[9] & (~ indexbitff[2])) | (x_prenodetwo_3_w[9] & indexbitff[2])), ((x_prenodeone_3_w[8] & (~ indexbitff[2])) | (x_prenodetwo_3_w[8] & indexbitff[2])), ((x_prenodeone_3_w[7] & (~ indexbitff[2])) | (x_prenodetwo_3_w[7] & indexbitff[2])), ((x_prenodeone_3_w[6] & (~ indexbitff[2])) | (x_prenodetwo_3_w[6] & indexbitff[2])), ((x_prenodeone_3_w[5] & (~ indexbitff[2])) | (x_prenodetwo_3_w[5] & indexbitff[2])), ((x_prenodeone_3_w[4] & (~ indexbitff[2])) | (x_prenodetwo_3_w[4] & indexbitff[2])), ((x_prenodeone_3_w[3] & (~ indexbitff[2])) | (x_prenodetwo_3_w[3] & indexbitff[2])), ((x_prenodeone_3_w[2] & (~ indexbitff[2])) | (x_prenodetwo_3_w[2] & indexbitff[2])), ((x_prenodeone_3_w[1] & (~ indexbitff[2])) | (x_prenodetwo_3_w[1] & indexbitff[2])), ((x_prenodeone_3_w[0] & (~ indexbitff[2])) | (x_prenodetwo_3_w[0] & indexbitff[2]))},
		x_prenode_4_w = {((x_prenodeone_4_w[33] & (~ indexbitff[3])) | (x_prenodetwo_4_w[33] & indexbitff[3])), ((x_prenodeone_4_w[32] & (~ indexbitff[3])) | (x_prenodetwo_4_w[32] & indexbitff[3])), ((x_prenodeone_4_w[31] & (~ indexbitff[3])) | (x_prenodetwo_4_w[31] & indexbitff[3])), ((x_prenodeone_4_w[30] & (~ indexbitff[3])) | (x_prenodetwo_4_w[30] & indexbitff[3])), ((x_prenodeone_4_w[29] & (~ indexbitff[3])) | (x_prenodetwo_4_w[29] & indexbitff[3])), ((x_prenodeone_4_w[28] & (~ indexbitff[3])) | (x_prenodetwo_4_w[28] & indexbitff[3])), ((x_prenodeone_4_w[27] & (~ indexbitff[3])) | (x_prenodetwo_4_w[27] & indexbitff[3])), ((x_prenodeone_4_w[26] & (~ indexbitff[3])) | (x_prenodetwo_4_w[26] & indexbitff[3])), ((x_prenodeone_4_w[25] & (~ indexbitff[3])) | (x_prenodetwo_4_w[25] & indexbitff[3])), ((x_prenodeone_4_w[24] & (~ indexbitff[3])) | (x_prenodetwo_4_w[24] & indexbitff[3])), ((x_prenodeone_4_w[23] & (~ indexbitff[3])) | (x_prenodetwo_4_w[23] & indexbitff[3])), ((x_prenodeone_4_w[22] & (~ indexbitff[3])) | (x_prenodetwo_4_w[22] & indexbitff[3])), ((x_prenodeone_4_w[21] & (~ indexbitff[3])) | (x_prenodetwo_4_w[21] & indexbitff[3])), ((x_prenodeone_4_w[20] & (~ indexbitff[3])) | (x_prenodetwo_4_w[20] & indexbitff[3])), ((x_prenodeone_4_w[19] & (~ indexbitff[3])) | (x_prenodetwo_4_w[19] & indexbitff[3])), ((x_prenodeone_4_w[18] & (~ indexbitff[3])) | (x_prenodetwo_4_w[18] & indexbitff[3])), ((x_prenodeone_4_w[17] & (~ indexbitff[3])) | (x_prenodetwo_4_w[17] & indexbitff[3])), ((x_prenodeone_4_w[16] & (~ indexbitff[3])) | (x_prenodetwo_4_w[16] & indexbitff[3])), ((x_prenodeone_4_w[15] & (~ indexbitff[3])) | (x_prenodetwo_4_w[15] & indexbitff[3])), ((x_prenodeone_4_w[14] & (~ indexbitff[3])) | (x_prenodetwo_4_w[14] & indexbitff[3])), ((x_prenodeone_4_w[13] & (~ indexbitff[3])) | (x_prenodetwo_4_w[13] & indexbitff[3])), ((x_prenodeone_4_w[12] & (~ indexbitff[3])) | (x_prenodetwo_4_w[12] & indexbitff[3])), ((x_prenodeone_4_w[11] & (~ indexbitff[3])) | (x_prenodetwo_4_w[11] & indexbitff[3])), ((x_prenodeone_4_w[10] & (~ indexbitff[3]
)) | (x_prenodetwo_4_w[10] & indexbitff[3])), ((x_prenodeone_4_w[9] & (~ indexbitff[3])) | (x_prenodetwo_4_w[9] & indexbitff[3])), ((x_prenodeone_4_w[8] & (~ indexbitff[3])) | (x_prenodetwo_4_w[8] & indexbitff[3])), ((x_prenodeone_4_w[7] & (~ indexbitff[3])) | (x_prenodetwo_4_w[7] & indexbitff[3])), ((x_prenodeone_4_w[6] & (~ indexbitff[3])) | (x_prenodetwo_4_w[6] & indexbitff[3])), ((x_prenodeone_4_w[5] & (~ indexbitff[3])) | (x_prenodetwo_4_w[5] & indexbitff[3])), ((x_prenodeone_4_w[4] & (~ indexbitff[3])) | (x_prenodetwo_4_w[4] & indexbitff[3])), ((x_prenodeone_4_w[3] & (~ indexbitff[3])) | (x_prenodetwo_4_w[3] & indexbitff[3])), ((x_prenodeone_4_w[2] & (~ indexbitff[3])) | (x_prenodetwo_4_w[2] & indexbitff[3])), ((x_prenodeone_4_w[1] & (~ indexbitff[3])) | (x_prenodetwo_4_w[1] & indexbitff[3])), ((x_prenodeone_4_w[0] & (~ indexbitff[3])) | (x_prenodetwo_4_w[0] & indexbitff[3]))},
		x_prenode_5_w = {((x_prenodeone_5_w[33] & (~ indexbitff[4])) | (x_prenodetwo_5_w[33] & indexbitff[4])), ((x_prenodeone_5_w[32] & (~ indexbitff[4])) | (x_prenodetwo_5_w[32] & indexbitff[4])), ((x_prenodeone_5_w[31] & (~ indexbitff[4])) | (x_prenodetwo_5_w[31] & indexbitff[4])), ((x_prenodeone_5_w[30] & (~ indexbitff[4])) | (x_prenodetwo_5_w[30] & indexbitff[4])), ((x_prenodeone_5_w[29] & (~ indexbitff[4])) | (x_prenodetwo_5_w[29] & indexbitff[4])), ((x_prenodeone_5_w[28] & (~ indexbitff[4])) | (x_prenodetwo_5_w[28] & indexbitff[4])), ((x_prenodeone_5_w[27] & (~ indexbitff[4])) | (x_prenodetwo_5_w[27] & indexbitff[4])), ((x_prenodeone_5_w[26] & (~ indexbitff[4])) | (x_prenodetwo_5_w[26] & indexbitff[4])), ((x_prenodeone_5_w[25] & (~ indexbitff[4])) | (x_prenodetwo_5_w[25] & indexbitff[4])), ((x_prenodeone_5_w[24] & (~ indexbitff[4])) | (x_prenodetwo_5_w[24] & indexbitff[4])), ((x_prenodeone_5_w[23] & (~ indexbitff[4])) | (x_prenodetwo_5_w[23] & indexbitff[4])), ((x_prenodeone_5_w[22] & (~ indexbitff[4])) | (x_prenodetwo_5_w[22] & indexbitff[4])), ((x_prenodeone_5_w[21] & (~ indexbitff[4])) | (x_prenodetwo_5_w[21] & indexbitff[4])), ((x_prenodeone_5_w[20] & (~ indexbitff[4])) | (x_prenodetwo_5_w[20] & indexbitff[4])), ((x_prenodeone_5_w[19] & (~ indexbitff[4])) | (x_prenodetwo_5_w[19] & indexbitff[4])), ((x_prenodeone_5_w[18] & (~ indexbitff[4])) | (x_prenodetwo_5_w[18] & indexbitff[4])), ((x_prenodeone_5_w[17] & (~ indexbitff[4])) | (x_prenodetwo_5_w[17] & indexbitff[4])), ((x_prenodeone_5_w[16] & (~ indexbitff[4])) | (x_prenodetwo_5_w[16] & indexbitff[4])), ((x_prenodeone_5_w[15] & (~ indexbitff[4])) | (x_prenodetwo_5_w[15] & indexbitff[4])), ((x_prenodeone_5_w[14] & (~ indexbitff[4])) | (x_prenodetwo_5_w[14] & indexbitff[4])), ((x_prenodeone_5_w[13] & (~ indexbitff[4])) | (x_prenodetwo_5_w[13] & indexbitff[4])), ((x_prenodeone_5_w[12] & (~ indexbitff[4])) | (x_prenodetwo_5_w[12] & indexbitff[4])), ((x_prenodeone_5_w[11] & (~ indexbitff[4])) | (x_prenodetwo_5_w[11] & indexbitff[4])), ((x_prenodeone_5_w[10] & (~ indexbitff[4]
)) | (x_prenodetwo_5_w[10] & indexbitff[4])), ((x_prenodeone_5_w[9] & (~ indexbitff[4])) | (x_prenodetwo_5_w[9] & indexbitff[4])), ((x_prenodeone_5_w[8] & (~ indexbitff[4])) | (x_prenodetwo_5_w[8] & indexbitff[4])), ((x_prenodeone_5_w[7] & (~ indexbitff[4])) | (x_prenodetwo_5_w[7] & indexbitff[4])), ((x_prenodeone_5_w[6] & (~ indexbitff[4])) | (x_prenodetwo_5_w[6] & indexbitff[4])), ((x_prenodeone_5_w[5] & (~ indexbitff[4])) | (x_prenodetwo_5_w[5] & indexbitff[4])), ((x_prenodeone_5_w[4] & (~ indexbitff[4])) | (x_prenodetwo_5_w[4] & indexbitff[4])), ((x_prenodeone_5_w[3] & (~ indexbitff[4])) | (x_prenodetwo_5_w[3] & indexbitff[4])), ((x_prenodeone_5_w[2] & (~ indexbitff[4])) | (x_prenodetwo_5_w[2] & indexbitff[4])), ((x_prenodeone_5_w[1] & (~ indexbitff[4])) | (x_prenodetwo_5_w[1] & indexbitff[4])), ((x_prenodeone_5_w[0] & (~ indexbitff[4])) | (x_prenodetwo_5_w[0] & indexbitff[4]))},
		x_prenode_6_w = {((x_prenodeone_6_w[33] & (~ indexbitff[5])) | (x_prenodetwo_6_w[33] & indexbitff[5])), ((x_prenodeone_6_w[32] & (~ indexbitff[5])) | (x_prenodetwo_6_w[32] & indexbitff[5])), ((x_prenodeone_6_w[31] & (~ indexbitff[5])) | (x_prenodetwo_6_w[31] & indexbitff[5])), ((x_prenodeone_6_w[30] & (~ indexbitff[5])) | (x_prenodetwo_6_w[30] & indexbitff[5])), ((x_prenodeone_6_w[29] & (~ indexbitff[5])) | (x_prenodetwo_6_w[29] & indexbitff[5])), ((x_prenodeone_6_w[28] & (~ indexbitff[5])) | (x_prenodetwo_6_w[28] & indexbitff[5])), ((x_prenodeone_6_w[27] & (~ indexbitff[5])) | (x_prenodetwo_6_w[27] & indexbitff[5])), ((x_prenodeone_6_w[26] & (~ indexbitff[5])) | (x_prenodetwo_6_w[26] & indexbitff[5])), ((x_prenodeone_6_w[25] & (~ indexbitff[5])) | (x_prenodetwo_6_w[25] & indexbitff[5])), ((x_prenodeone_6_w[24] & (~ indexbitff[5])) | (x_prenodetwo_6_w[24] & indexbitff[5])), ((x_prenodeone_6_w[23] & (~ indexbitff[5])) | (x_prenodetwo_6_w[23] & indexbitff[5])), ((x_prenodeone_6_w[22] & (~ indexbitff[5])) | (x_prenodetwo_6_w[22] & indexbitff[5])), ((x_prenodeone_6_w[21] & (~ indexbitff[5])) | (x_prenodetwo_6_w[21] & indexbitff[5])), ((x_prenodeone_6_w[20] & (~ indexbitff[5])) | (x_prenodetwo_6_w[20] & indexbitff[5])), ((x_prenodeone_6_w[19] & (~ indexbitff[5])) | (x_prenodetwo_6_w[19] & indexbitff[5])), ((x_prenodeone_6_w[18] & (~ indexbitff[5])) | (x_prenodetwo_6_w[18] & indexbitff[5])), ((x_prenodeone_6_w[17] & (~ indexbitff[5])) | (x_prenodetwo_6_w[17] & indexbitff[5])), ((x_prenodeone_6_w[16] & (~ indexbitff[5])) | (x_prenodetwo_6_w[16] & indexbitff[5])), ((x_prenodeone_6_w[15] & (~ indexbitff[5])) | (x_prenodetwo_6_w[15] & indexbitff[5])), ((x_prenodeone_6_w[14] & (~ indexbitff[5])) | (x_prenodetwo_6_w[14] & indexbitff[5])), ((x_prenodeone_6_w[13] & (~ indexbitff[5])) | (x_prenodetwo_6_w[13] & indexbitff[5])), ((x_prenodeone_6_w[12] & (~ indexbitff[5])) | (x_prenodetwo_6_w[12] & indexbitff[5])), ((x_prenodeone_6_w[11] & (~ indexbitff[5])) | (x_prenodetwo_6_w[11] & indexbitff[5])), ((x_prenodeone_6_w[10] & (~ indexbitff[5]
)) | (x_prenodetwo_6_w[10] & indexbitff[5])), ((x_prenodeone_6_w[9] & (~ indexbitff[5])) | (x_prenodetwo_6_w[9] & indexbitff[5])), ((x_prenodeone_6_w[8] & (~ indexbitff[5])) | (x_prenodetwo_6_w[8] & indexbitff[5])), ((x_prenodeone_6_w[7] & (~ indexbitff[5])) | (x_prenodetwo_6_w[7] & indexbitff[5])), ((x_prenodeone_6_w[6] & (~ indexbitff[5])) | (x_prenodetwo_6_w[6] & indexbitff[5])), ((x_prenodeone_6_w[5] & (~ indexbitff[5])) | (x_prenodetwo_6_w[5] & indexbitff[5])), ((x_prenodeone_6_w[4] & (~ indexbitff[5])) | (x_prenodetwo_6_w[4] & indexbitff[5])), ((x_prenodeone_6_w[3] & (~ indexbitff[5])) | (x_prenodetwo_6_w[3] & indexbitff[5])), ((x_prenodeone_6_w[2] & (~ indexbitff[5])) | (x_prenodetwo_6_w[2] & indexbitff[5])), ((x_prenodeone_6_w[1] & (~ indexbitff[5])) | (x_prenodetwo_6_w[1] & indexbitff[5])), ((x_prenodeone_6_w[0] & (~ indexbitff[5])) | (x_prenodetwo_6_w[0] & indexbitff[5]))},
		x_prenode_7_w = {((x_prenodeone_7_w[33] & (~ indexbitff[6])) | (x_prenodetwo_7_w[33] & indexbitff[6])), ((x_prenodeone_7_w[32] & (~ indexbitff[6])) | (x_prenodetwo_7_w[32] & indexbitff[6])), ((x_prenodeone_7_w[31] & (~ indexbitff[6])) | (x_prenodetwo_7_w[31] & indexbitff[6])), ((x_prenodeone_7_w[30] & (~ indexbitff[6])) | (x_prenodetwo_7_w[30] & indexbitff[6])), ((x_prenodeone_7_w[29] & (~ indexbitff[6])) | (x_prenodetwo_7_w[29] & indexbitff[6])), ((x_prenodeone_7_w[28] & (~ indexbitff[6])) | (x_prenodetwo_7_w[28] & indexbitff[6])), ((x_prenodeone_7_w[27] & (~ indexbitff[6])) | (x_prenodetwo_7_w[27] & indexbitff[6])), ((x_prenodeone_7_w[26] & (~ indexbitff[6])) | (x_prenodetwo_7_w[26] & indexbitff[6])), ((x_prenodeone_7_w[25] & (~ indexbitff[6])) | (x_prenodetwo_7_w[25] & indexbitff[6])), ((x_prenodeone_7_w[24] & (~ indexbitff[6])) | (x_prenodetwo_7_w[24] & indexbitff[6])), ((x_prenodeone_7_w[23] & (~ indexbitff[6])) | (x_prenodetwo_7_w[23] & indexbitff[6])), ((x_prenodeone_7_w[22] & (~ indexbitff[6])) | (x_prenodetwo_7_w[22] & indexbitff[6])), ((x_prenodeone_7_w[21] & (~ indexbitff[6])) | (x_prenodetwo_7_w[21] & indexbitff[6])), ((x_prenodeone_7_w[20] & (~ indexbitff[6])) | (x_prenodetwo_7_w[20] & indexbitff[6])), ((x_prenodeone_7_w[19] & (~ indexbitff[6])) | (x_prenodetwo_7_w[19] & indexbitff[6])), ((x_prenodeone_7_w[18] & (~ indexbitff[6])) | (x_prenodetwo_7_w[18] & indexbitff[6])), ((x_prenodeone_7_w[17] & (~ indexbitff[6])) | (x_prenodetwo_7_w[17] & indexbitff[6])), ((x_prenodeone_7_w[16] & (~ indexbitff[6])) | (x_prenodetwo_7_w[16] & indexbitff[6])), ((x_prenodeone_7_w[15] & (~ indexbitff[6])) | (x_prenodetwo_7_w[15] & indexbitff[6])), ((x_prenodeone_7_w[14] & (~ indexbitff[6])) | (x_prenodetwo_7_w[14] & indexbitff[6])), ((x_prenodeone_7_w[13] & (~ indexbitff[6])) | (x_prenodetwo_7_w[13] & indexbitff[6])), ((x_prenodeone_7_w[12] & (~ indexbitff[6])) | (x_prenodetwo_7_w[12] & indexbitff[6])), ((x_prenodeone_7_w[11] & (~ indexbitff[6])) | (x_prenodetwo_7_w[11] & indexbitff[6])), ((x_prenodeone_7_w[10] & (~ indexbitff[6]
)) | (x_prenodetwo_7_w[10] & indexbitff[6])), ((x_prenodeone_7_w[9] & (~ indexbitff[6])) | (x_prenodetwo_7_w[9] & indexbitff[6])), ((x_prenodeone_7_w[8] & (~ indexbitff[6])) | (x_prenodetwo_7_w[8] & indexbitff[6])), ((x_prenodeone_7_w[7] & (~ indexbitff[6])) | (x_prenodetwo_7_w[7] & indexbitff[6])), ((x_prenodeone_7_w[6] & (~ indexbitff[6])) | (x_prenodetwo_7_w[6] & indexbitff[6])), ((x_prenodeone_7_w[5] & (~ indexbitff[6])) | (x_prenodetwo_7_w[5] & indexbitff[6])), ((x_prenodeone_7_w[4] & (~ indexbitff[6])) | (x_prenodetwo_7_w[4] & indexbitff[6])), ((x_prenodeone_7_w[3] & (~ indexbitff[6])) | (x_prenodetwo_7_w[3] & indexbitff[6])), ((x_prenodeone_7_w[2] & (~ indexbitff[6])) | (x_prenodetwo_7_w[2] & indexbitff[6])), ((x_prenodeone_7_w[1] & (~ indexbitff[6])) | (x_prenodetwo_7_w[1] & indexbitff[6])), ((x_prenodeone_7_w[0] & (~ indexbitff[6])) | (x_prenodetwo_7_w[0] & indexbitff[6]))},
		x_prenode_8_w = {((x_prenodeone_8_w[33] & (~ indexbitff[7])) | (x_prenodetwo_8_w[33] & indexbitff[7])), ((x_prenodeone_8_w[32] & (~ indexbitff[7])) | (x_prenodetwo_8_w[32] & indexbitff[7])), ((x_prenodeone_8_w[31] & (~ indexbitff[7])) | (x_prenodetwo_8_w[31] & indexbitff[7])), ((x_prenodeone_8_w[30] & (~ indexbitff[7])) | (x_prenodetwo_8_w[30] & indexbitff[7])), ((x_prenodeone_8_w[29] & (~ indexbitff[7])) | (x_prenodetwo_8_w[29] & indexbitff[7])), ((x_prenodeone_8_w[28] & (~ indexbitff[7])) | (x_prenodetwo_8_w[28] & indexbitff[7])), ((x_prenodeone_8_w[27] & (~ indexbitff[7])) | (x_prenodetwo_8_w[27] & indexbitff[7])), ((x_prenodeone_8_w[26] & (~ indexbitff[7])) | (x_prenodetwo_8_w[26] & indexbitff[7])), ((x_prenodeone_8_w[25] & (~ indexbitff[7])) | (x_prenodetwo_8_w[25] & indexbitff[7])), ((x_prenodeone_8_w[24] & (~ indexbitff[7])) | (x_prenodetwo_8_w[24] & indexbitff[7])), ((x_prenodeone_8_w[23] & (~ indexbitff[7])) | (x_prenodetwo_8_w[23] & indexbitff[7])), ((x_prenodeone_8_w[22] & (~ indexbitff[7])) | (x_prenodetwo_8_w[22] & indexbitff[7])), ((x_prenodeone_8_w[21] & (~ indexbitff[7])) | (x_prenodetwo_8_w[21] & indexbitff[7])), ((x_prenodeone_8_w[20] & (~ indexbitff[7])) | (x_prenodetwo_8_w[20] & indexbitff[7])), ((x_prenodeone_8_w[19] & (~ indexbitff[7])) | (x_prenodetwo_8_w[19] & indexbitff[7])), ((x_prenodeone_8_w[18] & (~ indexbitff[7])) | (x_prenodetwo_8_w[18] & indexbitff[7])), ((x_prenodeone_8_w[17] & (~ indexbitff[7])) | (x_prenodetwo_8_w[17] & indexbitff[7])), ((x_prenodeone_8_w[16] & (~ indexbitff[7])) | (x_prenodetwo_8_w[16] & indexbitff[7])), ((x_prenodeone_8_w[15] & (~ indexbitff[7])) | (x_prenodetwo_8_w[15] & indexbitff[7])), ((x_prenodeone_8_w[14] & (~ indexbitff[7])) | (x_prenodetwo_8_w[14] & indexbitff[7])), ((x_prenodeone_8_w[13] & (~ indexbitff[7])) | (x_prenodetwo_8_w[13] & indexbitff[7])), ((x_prenodeone_8_w[12] & (~ indexbitff[7])) | (x_prenodetwo_8_w[12] & indexbitff[7])), ((x_prenodeone_8_w[11] & (~ indexbitff[7])) | (x_prenodetwo_8_w[11] & indexbitff[7])), ((x_prenodeone_8_w[10] & (~ indexbitff[7]
)) | (x_prenodetwo_8_w[10] & indexbitff[7])), ((x_prenodeone_8_w[9] & (~ indexbitff[7])) | (x_prenodetwo_8_w[9] & indexbitff[7])), ((x_prenodeone_8_w[8] & (~ indexbitff[7])) | (x_prenodetwo_8_w[8] & indexbitff[7])), ((x_prenodeone_8_w[7] & (~ indexbitff[7])) | (x_prenodetwo_8_w[7] & indexbitff[7])), ((x_prenodeone_8_w[6] & (~ indexbitff[7])) | (x_prenodetwo_8_w[6] & indexbitff[7])), ((x_prenodeone_8_w[5] & (~ indexbitff[7])) | (x_prenodetwo_8_w[5] & indexbitff[7])), ((x_prenodeone_8_w[4] & (~ indexbitff[7])) | (x_prenodetwo_8_w[4] & indexbitff[7])), ((x_prenodeone_8_w[3] & (~ indexbitff[7])) | (x_prenodetwo_8_w[3] & indexbitff[7])), ((x_prenodeone_8_w[2] & (~ indexbitff[7])) | (x_prenodetwo_8_w[2] & indexbitff[7])), ((x_prenodeone_8_w[1] & (~ indexbitff[7])) | (x_prenodetwo_8_w[1] & indexbitff[7])), ((x_prenodeone_8_w[0] & (~ indexbitff[7])) | (x_prenodetwo_8_w[0] & indexbitff[7]))},
		x_prenode_9_w = {((x_prenodeone_9_w[33] & (~ indexbitff[8])) | (x_prenodetwo_9_w[33] & indexbitff[8])), ((x_prenodeone_9_w[32] & (~ indexbitff[8])) | (x_prenodetwo_9_w[32] & indexbitff[8])), ((x_prenodeone_9_w[31] & (~ indexbitff[8])) | (x_prenodetwo_9_w[31] & indexbitff[8])), ((x_prenodeone_9_w[30] & (~ indexbitff[8])) | (x_prenodetwo_9_w[30] & indexbitff[8])), ((x_prenodeone_9_w[29] & (~ indexbitff[8])) | (x_prenodetwo_9_w[29] & indexbitff[8])), ((x_prenodeone_9_w[28] & (~ indexbitff[8])) | (x_prenodetwo_9_w[28] & indexbitff[8])), ((x_prenodeone_9_w[27] & (~ indexbitff[8])) | (x_prenodetwo_9_w[27] & indexbitff[8])), ((x_prenodeone_9_w[26] & (~ indexbitff[8])) | (x_prenodetwo_9_w[26] & indexbitff[8])), ((x_prenodeone_9_w[25] & (~ indexbitff[8])) | (x_prenodetwo_9_w[25] & indexbitff[8])), ((x_prenodeone_9_w[24] & (~ indexbitff[8])) | (x_prenodetwo_9_w[24] & indexbitff[8])), ((x_prenodeone_9_w[23] & (~ indexbitff[8])) | (x_prenodetwo_9_w[23] & indexbitff[8])), ((x_prenodeone_9_w[22] & (~ indexbitff[8])) | (x_prenodetwo_9_w[22] & indexbitff[8])), ((x_prenodeone_9_w[21] & (~ indexbitff[8])) | (x_prenodetwo_9_w[21] & indexbitff[8])), ((x_prenodeone_9_w[20] & (~ indexbitff[8])) | (x_prenodetwo_9_w[20] & indexbitff[8])), ((x_prenodeone_9_w[19] & (~ indexbitff[8])) | (x_prenodetwo_9_w[19] & indexbitff[8])), ((x_prenodeone_9_w[18] & (~ indexbitff[8])) | (x_prenodetwo_9_w[18] & indexbitff[8])), ((x_prenodeone_9_w[17] & (~ indexbitff[8])) | (x_prenodetwo_9_w[17] & indexbitff[8])), ((x_prenodeone_9_w[16] & (~ indexbitff[8])) | (x_prenodetwo_9_w[16] & indexbitff[8])), ((x_prenodeone_9_w[15] & (~ indexbitff[8])) | (x_prenodetwo_9_w[15] & indexbitff[8])), ((x_prenodeone_9_w[14] & (~ indexbitff[8])) | (x_prenodetwo_9_w[14] & indexbitff[8])), ((x_prenodeone_9_w[13] & (~ indexbitff[8])) | (x_prenodetwo_9_w[13] & indexbitff[8])), ((x_prenodeone_9_w[12] & (~ indexbitff[8])) | (x_prenodetwo_9_w[12] & indexbitff[8])), ((x_prenodeone_9_w[11] & (~ indexbitff[8])) | (x_prenodetwo_9_w[11] & indexbitff[8])), ((x_prenodeone_9_w[10] & (~ indexbitff[8]
)) | (x_prenodetwo_9_w[10] & indexbitff[8])), ((x_prenodeone_9_w[9] & (~ indexbitff[8])) | (x_prenodetwo_9_w[9] & indexbitff[8])), ((x_prenodeone_9_w[8] & (~ indexbitff[8])) | (x_prenodetwo_9_w[8] & indexbitff[8])), ((x_prenodeone_9_w[7] & (~ indexbitff[8])) | (x_prenodetwo_9_w[7] & indexbitff[8])), ((x_prenodeone_9_w[6] & (~ indexbitff[8])) | (x_prenodetwo_9_w[6] & indexbitff[8])), ((x_prenodeone_9_w[5] & (~ indexbitff[8])) | (x_prenodetwo_9_w[5] & indexbitff[8])), ((x_prenodeone_9_w[4] & (~ indexbitff[8])) | (x_prenodetwo_9_w[4] & indexbitff[8])), ((x_prenodeone_9_w[3] & (~ indexbitff[8])) | (x_prenodetwo_9_w[3] & indexbitff[8])), ((x_prenodeone_9_w[2] & (~ indexbitff[8])) | (x_prenodetwo_9_w[2] & indexbitff[8])), ((x_prenodeone_9_w[1] & (~ indexbitff[8])) | (x_prenodetwo_9_w[1] & indexbitff[8])), ((x_prenodeone_9_w[0] & (~ indexbitff[8])) | (x_prenodetwo_9_w[0] & indexbitff[8]))},
		x_prenodeone_10_w = {{10{(~ y_pipeff_9[33])}}, (~ y_pipeff_9[32]), (~ y_pipeff_9[31]), (~ y_pipeff_9[30]), (~ y_pipeff_9[29]), (~ y_pipeff_9[28]), (~ y_pipeff_9[27]), (~ y_pipeff_9[26]), (~ y_pipeff_9[25]), (~ y_pipeff_9[24]), (~ y_pipeff_9[23]), (~ y_pipeff_9[22]), (~ y_pipeff_9[21]), (~ y_pipeff_9[20]), (~ y_pipeff_9[19]), (~ y_pipeff_9[18]), (~ y_pipeff_9[17]), (~ y_pipeff_9[16]), (~ y_pipeff_9[15]), (~ y_pipeff_9[14]), (~ y_pipeff_9[13]), (~ y_pipeff_9[12]), (~ y_pipeff_9[11]), (~ y_pipeff_9[10]), (~ y_pipeff_9[9])},
		x_prenodeone_11_w = {{11{(~ y_pipeff_10[33])}}, (~ y_pipeff_10[32]), (~ y_pipeff_10[31]), (~ y_pipeff_10[30]), (~ y_pipeff_10[29]), (~ y_pipeff_10[28]), (~ y_pipeff_10[27]), (~ y_pipeff_10[26]), (~ y_pipeff_10[25]), (~ y_pipeff_10[24]), (~ y_pipeff_10[23]), (~ y_pipeff_10[22]), (~ y_pipeff_10[21]), (~ y_pipeff_10[20]), (~ y_pipeff_10[19]), (~ y_pipeff_10[18]), (~ y_pipeff_10[17]), (~ y_pipeff_10[16]), (~ y_pipeff_10[15]), (~ y_pipeff_10[14]), (~ y_pipeff_10[13]), (~ y_pipeff_10[12]), (~ y_pipeff_10[11]), (~ y_pipeff_10[10])},
		x_prenodeone_12_w = {{12{(~ y_pipeff_11[33])}}, (~ y_pipeff_11[32]), (~ y_pipeff_11[31]), (~ y_pipeff_11[30]), (~ y_pipeff_11[29]), (~ y_pipeff_11[28]), (~ y_pipeff_11[27]), (~ y_pipeff_11[26]), (~ y_pipeff_11[25]), (~ y_pipeff_11[24]), (~ y_pipeff_11[23]), (~ y_pipeff_11[22]), (~ y_pipeff_11[21]), (~ y_pipeff_11[20]), (~ y_pipeff_11[19]), (~ y_pipeff_11[18]), (~ y_pipeff_11[17]), (~ y_pipeff_11[16]), (~ y_pipeff_11[15]), (~ y_pipeff_11[14]), (~ y_pipeff_11[13]), (~ y_pipeff_11[12]), (~ y_pipeff_11[11])},
		x_prenodeone_13_w = {{13{(~ y_pipeff_12[33])}}, (~ y_pipeff_12[32]), (~ y_pipeff_12[31]), (~ y_pipeff_12[30]), (~ y_pipeff_12[29]), (~ y_pipeff_12[28]), (~ y_pipeff_12[27]), (~ y_pipeff_12[26]), (~ y_pipeff_12[25]), (~ y_pipeff_12[24]), (~ y_pipeff_12[23]), (~ y_pipeff_12[22]), (~ y_pipeff_12[21]), (~ y_pipeff_12[20]), (~ y_pipeff_12[19]), (~ y_pipeff_12[18]), (~ y_pipeff_12[17]), (~ y_pipeff_12[16]), (~ y_pipeff_12[15]), (~ y_pipeff_12[14]), (~ y_pipeff_12[13]), (~ y_pipeff_12[12])},
		x_prenodeone_2_w = {{2{(~ y_pipeff_1[33])}}, (~ y_pipeff_1[32]), (~ y_pipeff_1[31]), (~ y_pipeff_1[30]), (~ y_pipeff_1[29]), (~ y_pipeff_1[28]), (~ y_pipeff_1[27]), (~ y_pipeff_1[26]), (~ y_pipeff_1[25]), (~ y_pipeff_1[24]), (~ y_pipeff_1[23]), (~ y_pipeff_1[22]), (~ y_pipeff_1[21]), (~ y_pipeff_1[20]), (~ y_pipeff_1[19]), (~ y_pipeff_1[18]), (~ y_pipeff_1[17]), (~ y_pipeff_1[16]), (~ y_pipeff_1[15]), (~ y_pipeff_1[14]), (~ y_pipeff_1[13]), (~ y_pipeff_1[12]), (~ y_pipeff_1[11]), (~ y_pipeff_1[10]), (~ y_pipeff_1[9]), (~ y_pipeff_1[8]), (~ y_pipeff_1[7]), (~ y_pipeff_1[6]), (~ y_pipeff_1[5]), (~ y_pipeff_1[4]), (~ y_pipeff_1[3]), (~ y_pipeff_1[2]), (~ y_pipeff_1[1])},
		x_prenodeone_3_w = {{3{(~ y_pipeff_2[33])}}, (~ y_pipeff_2[32]), (~ y_pipeff_2[31]), (~ y_pipeff_2[30]), (~ y_pipeff_2[29]), (~ y_pipeff_2[28]), (~ y_pipeff_2[27]), (~ y_pipeff_2[26]), (~ y_pipeff_2[25]), (~ y_pipeff_2[24]), (~ y_pipeff_2[23]), (~ y_pipeff_2[22]), (~ y_pipeff_2[21]), (~ y_pipeff_2[20]), (~ y_pipeff_2[19]), (~ y_pipeff_2[18]), (~ y_pipeff_2[17]), (~ y_pipeff_2[16]), (~ y_pipeff_2[15]), (~ y_pipeff_2[14]), (~ y_pipeff_2[13]), (~ y_pipeff_2[12]), (~ y_pipeff_2[11]), (~ y_pipeff_2[10]), (~ y_pipeff_2[9]), (~ y_pipeff_2[8]), (~ y_pipeff_2[7]), (~ y_pipeff_2[6]), (~ y_pipeff_2[5]), (~ y_pipeff_2[4]), (~ y_pipeff_2[3]), (~ y_pipeff_2[2])},
		x_prenodeone_4_w = {{4{(~ y_pipeff_3[33])}}, (~ y_pipeff_3[32]), (~ y_pipeff_3[31]), (~ y_pipeff_3[30]), (~ y_pipeff_3[29]), (~ y_pipeff_3[28]), (~ y_pipeff_3[27]), (~ y_pipeff_3[26]), (~ y_pipeff_3[25]), (~ y_pipeff_3[24]), (~ y_pipeff_3[23]), (~ y_pipeff_3[22]), (~ y_pipeff_3[21]), (~ y_pipeff_3[20]), (~ y_pipeff_3[19]), (~ y_pipeff_3[18]), (~ y_pipeff_3[17]), (~ y_pipeff_3[16]), (~ y_pipeff_3[15]), (~ y_pipeff_3[14]), (~ y_pipeff_3[13]), (~ y_pipeff_3[12]), (~ y_pipeff_3[11]), (~ y_pipeff_3[10]), (~ y_pipeff_3[9]), (~ y_pipeff_3[8]), (~ y_pipeff_3[7]), (~ y_pipeff_3[6]), (~ y_pipeff_3[5]), (~ y_pipeff_3[4]), (~ y_pipeff_3[3])},
		x_prenodeone_5_w = {{5{(~ y_pipeff_4[33])}}, (~ y_pipeff_4[32]), (~ y_pipeff_4[31]), (~ y_pipeff_4[30]), (~ y_pipeff_4[29]), (~ y_pipeff_4[28]), (~ y_pipeff_4[27]), (~ y_pipeff_4[26]), (~ y_pipeff_4[25]), (~ y_pipeff_4[24]), (~ y_pipeff_4[23]), (~ y_pipeff_4[22]), (~ y_pipeff_4[21]), (~ y_pipeff_4[20]), (~ y_pipeff_4[19]), (~ y_pipeff_4[18]), (~ y_pipeff_4[17]), (~ y_pipeff_4[16]), (~ y_pipeff_4[15]), (~ y_pipeff_4[14]), (~ y_pipeff_4[13]), (~ y_pipeff_4[12]), (~ y_pipeff_4[11]), (~ y_pipeff_4[10]), (~ y_pipeff_4[9]), (~ y_pipeff_4[8]), (~ y_pipeff_4[7]), (~ y_pipeff_4[6]), (~ y_pipeff_4[5]), (~ y_pipeff_4[4])},
		x_prenodeone_6_w = {{6{(~ y_pipeff_5[33])}}, (~ y_pipeff_5[32]), (~ y_pipeff_5[31]), (~ y_pipeff_5[30]), (~ y_pipeff_5[29]), (~ y_pipeff_5[28]), (~ y_pipeff_5[27]), (~ y_pipeff_5[26]), (~ y_pipeff_5[25]), (~ y_pipeff_5[24]), (~ y_pipeff_5[23]), (~ y_pipeff_5[22]), (~ y_pipeff_5[21]), (~ y_pipeff_5[20]), (~ y_pipeff_5[19]), (~ y_pipeff_5[18]), (~ y_pipeff_5[17]), (~ y_pipeff_5[16]), (~ y_pipeff_5[15]), (~ y_pipeff_5[14]), (~ y_pipeff_5[13]), (~ y_pipeff_5[12]), (~ y_pipeff_5[11]), (~ y_pipeff_5[10]), (~ y_pipeff_5[9]), (~ y_pipeff_5[8]), (~ y_pipeff_5[7]), (~ y_pipeff_5[6]), (~ y_pipeff_5[5])},
		x_prenodeone_7_w = {{7{(~ y_pipeff_6[33])}}, (~ y_pipeff_6[32]), (~ y_pipeff_6[31]), (~ y_pipeff_6[30]), (~ y_pipeff_6[29]), (~ y_pipeff_6[28]), (~ y_pipeff_6[27]), (~ y_pipeff_6[26]), (~ y_pipeff_6[25]), (~ y_pipeff_6[24]), (~ y_pipeff_6[23]), (~ y_pipeff_6[22]), (~ y_pipeff_6[21]), (~ y_pipeff_6[20]), (~ y_pipeff_6[19]), (~ y_pipeff_6[18]), (~ y_pipeff_6[17]), (~ y_pipeff_6[16]), (~ y_pipeff_6[15]), (~ y_pipeff_6[14]), (~ y_pipeff_6[13]), (~ y_pipeff_6[12]), (~ y_pipeff_6[11]), (~ y_pipeff_6[10]), (~ y_pipeff_6[9]), (~ y_pipeff_6[8]), (~ y_pipeff_6[7]), (~ y_pipeff_6[6])},
		x_prenodeone_8_w = {{8{(~ y_pipeff_7[33])}}, (~ y_pipeff_7[32]), (~ y_pipeff_7[31]), (~ y_pipeff_7[30]), (~ y_pipeff_7[29]), (~ y_pipeff_7[28]), (~ y_pipeff_7[27]), (~ y_pipeff_7[26]), (~ y_pipeff_7[25]), (~ y_pipeff_7[24]), (~ y_pipeff_7[23]), (~ y_pipeff_7[22]), (~ y_pipeff_7[21]), (~ y_pipeff_7[20]), (~ y_pipeff_7[19]), (~ y_pipeff_7[18]), (~ y_pipeff_7[17]), (~ y_pipeff_7[16]), (~ y_pipeff_7[15]), (~ y_pipeff_7[14]), (~ y_pipeff_7[13]), (~ y_pipeff_7[12]), (~ y_pipeff_7[11]), (~ y_pipeff_7[10]), (~ y_pipeff_7[9]), (~ y_pipeff_7[8]), (~ y_pipeff_7[7])},
		x_prenodeone_9_w = {{9{(~ y_pipeff_8[33])}}, (~ y_pipeff_8[32]), (~ y_pipeff_8[31]), (~ y_pipeff_8[30]), (~ y_pipeff_8[29]), (~ y_pipeff_8[28]), (~ y_pipeff_8[27]), (~ y_pipeff_8[26]), (~ y_pipeff_8[25]), (~ y_pipeff_8[24]), (~ y_pipeff_8[23]), (~ y_pipeff_8[22]), (~ y_pipeff_8[21]), (~ y_pipeff_8[20]), (~ y_pipeff_8[19]), (~ y_pipeff_8[18]), (~ y_pipeff_8[17]), (~ y_pipeff_8[16]), (~ y_pipeff_8[15]), (~ y_pipeff_8[14]), (~ y_pipeff_8[13]), (~ y_pipeff_8[12]), (~ y_pipeff_8[11]), (~ y_pipeff_8[10]), (~ y_pipeff_8[9]), (~ y_pipeff_8[8])},
		x_prenodetwo_10_w = {{12{(~ y_pipeff_9[33])}}, (~ y_pipeff_9[32]), (~ y_pipeff_9[31]), (~ y_pipeff_9[30]), (~ y_pipeff_9[29]), (~ y_pipeff_9[28]), (~ y_pipeff_9[27]), (~ y_pipeff_9[26]), (~ y_pipeff_9[25]), (~ y_pipeff_9[24]), (~ y_pipeff_9[23]), (~ y_pipeff_9[22]), (~ y_pipeff_9[21]), (~ y_pipeff_9[20]), (~ y_pipeff_9[19]), (~ y_pipeff_9[18]), (~ y_pipeff_9[17]), (~ y_pipeff_9[16]), (~ y_pipeff_9[15]), (~ y_pipeff_9[14]), (~ y_pipeff_9[13]), (~ y_pipeff_9[12]), (~ y_pipeff_9[11])},
		x_prenodetwo_11_w = {{13{(~ y_pipeff_10[33])}}, (~ y_pipeff_10[32]), (~ y_pipeff_10[31]), (~ y_pipeff_10[30]), (~ y_pipeff_10[29]), (~ y_pipeff_10[28]), (~ y_pipeff_10[27]), (~ y_pipeff_10[26]), (~ y_pipeff_10[25]), (~ y_pipeff_10[24]), (~ y_pipeff_10[23]), (~ y_pipeff_10[22]), (~ y_pipeff_10[21]), (~ y_pipeff_10[20]), (~ y_pipeff_10[19]), (~ y_pipeff_10[18]), (~ y_pipeff_10[17]), (~ y_pipeff_10[16]), (~ y_pipeff_10[15]), (~ y_pipeff_10[14]), (~ y_pipeff_10[13]), (~ y_pipeff_10[12])},
		x_prenodetwo_12_w = {{14{(~ y_pipeff_11[33])}}, (~ y_pipeff_11[32]), (~ y_pipeff_11[31]), (~ y_pipeff_11[30]), (~ y_pipeff_11[29]), (~ y_pipeff_11[28]), (~ y_pipeff_11[27]), (~ y_pipeff_11[26]), (~ y_pipeff_11[25]), (~ y_pipeff_11[24]), (~ y_pipeff_11[23]), (~ y_pipeff_11[22]), (~ y_pipeff_11[21]), (~ y_pipeff_11[20]), (~ y_pipeff_11[19]), (~ y_pipeff_11[18]), (~ y_pipeff_11[17]), (~ y_pipeff_11[16]), (~ y_pipeff_11[15]), (~ y_pipeff_11[14]), (~ y_pipeff_11[13])},
		x_prenodetwo_13_w = {{15{(~ y_pipeff_12[33])}}, (~ y_pipeff_12[32]), (~ y_pipeff_12[31]), (~ y_pipeff_12[30]), (~ y_pipeff_12[29]), (~ y_pipeff_12[28]), (~ y_pipeff_12[27]), (~ y_pipeff_12[26]), (~ y_pipeff_12[25]), (~ y_pipeff_12[24]), (~ y_pipeff_12[23]), (~ y_pipeff_12[22]), (~ y_pipeff_12[21]), (~ y_pipeff_12[20]), (~ y_pipeff_12[19]), (~ y_pipeff_12[18]), (~ y_pipeff_12[17]), (~ y_pipeff_12[16]), (~ y_pipeff_12[15]), (~ y_pipeff_12[14])},
		x_prenodetwo_2_w = {{4{(~ y_pipeff_1[33])}}, (~ y_pipeff_1[32]), (~ y_pipeff_1[31]), (~ y_pipeff_1[30]), (~ y_pipeff_1[29]), (~ y_pipeff_1[28]), (~ y_pipeff_1[27]), (~ y_pipeff_1[26]), (~ y_pipeff_1[25]), (~ y_pipeff_1[24]), (~ y_pipeff_1[23]), (~ y_pipeff_1[22]), (~ y_pipeff_1[21]), (~ y_pipeff_1[20]), (~ y_pipeff_1[19]), (~ y_pipeff_1[18]), (~ y_pipeff_1[17]), (~ y_pipeff_1[16]), (~ y_pipeff_1[15]), (~ y_pipeff_1[14]), (~ y_pipeff_1[13]), (~ y_pipeff_1[12]), (~ y_pipeff_1[11]), (~ y_pipeff_1[10]), (~ y_pipeff_1[9]), (~ y_pipeff_1[8]), (~ y_pipeff_1[7]), (~ y_pipeff_1[6]), (~ y_pipeff_1[5]), (~ y_pipeff_1[4]), (~ y_pipeff_1[3])},
		x_prenodetwo_3_w = {{5{(~ y_pipeff_2[33])}}, (~ y_pipeff_2[32]), (~ y_pipeff_2[31]), (~ y_pipeff_2[30]), (~ y_pipeff_2[29]), (~ y_pipeff_2[28]), (~ y_pipeff_2[27]), (~ y_pipeff_2[26]), (~ y_pipeff_2[25]), (~ y_pipeff_2[24]), (~ y_pipeff_2[23]), (~ y_pipeff_2[22]), (~ y_pipeff_2[21]), (~ y_pipeff_2[20]), (~ y_pipeff_2[19]), (~ y_pipeff_2[18]), (~ y_pipeff_2[17]), (~ y_pipeff_2[16]), (~ y_pipeff_2[15]), (~ y_pipeff_2[14]), (~ y_pipeff_2[13]), (~ y_pipeff_2[12]), (~ y_pipeff_2[11]), (~ y_pipeff_2[10]), (~ y_pipeff_2[9]), (~ y_pipeff_2[8]), (~ y_pipeff_2[7]), (~ y_pipeff_2[6]), (~ y_pipeff_2[5]), (~ y_pipeff_2[4])},
		x_prenodetwo_4_w = {{6{(~ y_pipeff_3[33])}}, (~ y_pipeff_3[32]), (~ y_pipeff_3[31]), (~ y_pipeff_3[30]), (~ y_pipeff_3[29]), (~ y_pipeff_3[28]), (~ y_pipeff_3[27]), (~ y_pipeff_3[26]), (~ y_pipeff_3[25]), (~ y_pipeff_3[24]), (~ y_pipeff_3[23]), (~ y_pipeff_3[22]), (~ y_pipeff_3[21]), (~ y_pipeff_3[20]), (~ y_pipeff_3[19]), (~ y_pipeff_3[18]), (~ y_pipeff_3[17]), (~ y_pipeff_3[16]), (~ y_pipeff_3[15]), (~ y_pipeff_3[14]), (~ y_pipeff_3[13]), (~ y_pipeff_3[12]), (~ y_pipeff_3[11]), (~ y_pipeff_3[10]), (~ y_pipeff_3[9]), (~ y_pipeff_3[8]), (~ y_pipeff_3[7]), (~ y_pipeff_3[6]), (~ y_pipeff_3[5])},
		x_prenodetwo_5_w = {{7{(~ y_pipeff_4[33])}}, (~ y_pipeff_4[32]), (~ y_pipeff_4[31]), (~ y_pipeff_4[30]), (~ y_pipeff_4[29]), (~ y_pipeff_4[28]), (~ y_pipeff_4[27]), (~ y_pipeff_4[26]), (~ y_pipeff_4[25]), (~ y_pipeff_4[24]), (~ y_pipeff_4[23]), (~ y_pipeff_4[22]), (~ y_pipeff_4[21]), (~ y_pipeff_4[20]), (~ y_pipeff_4[19]), (~ y_pipeff_4[18]), (~ y_pipeff_4[17]), (~ y_pipeff_4[16]), (~ y_pipeff_4[15]), (~ y_pipeff_4[14]), (~ y_pipeff_4[13]), (~ y_pipeff_4[12]), (~ y_pipeff_4[11]), (~ y_pipeff_4[10]), (~ y_pipeff_4[9]), (~ y_pipeff_4[8]), (~ y_pipeff_4[7]), (~ y_pipeff_4[6])},
		x_prenodetwo_6_w = {{8{(~ y_pipeff_5[33])}}, (~ y_pipeff_5[32]), (~ y_pipeff_5[31]), (~ y_pipeff_5[30]), (~ y_pipeff_5[29]), (~ y_pipeff_5[28]), (~ y_pipeff_5[27]), (~ y_pipeff_5[26]), (~ y_pipeff_5[25]), (~ y_pipeff_5[24]), (~ y_pipeff_5[23]), (~ y_pipeff_5[22]), (~ y_pipeff_5[21]), (~ y_pipeff_5[20]), (~ y_pipeff_5[19]), (~ y_pipeff_5[18]), (~ y_pipeff_5[17]), (~ y_pipeff_5[16]), (~ y_pipeff_5[15]), (~ y_pipeff_5[14]), (~ y_pipeff_5[13]), (~ y_pipeff_5[12]), (~ y_pipeff_5[11]), (~ y_pipeff_5[10]), (~ y_pipeff_5[9]), (~ y_pipeff_5[8]), (~ y_pipeff_5[7])},
		x_prenodetwo_7_w = {{9{(~ y_pipeff_6[33])}}, (~ y_pipeff_6[32]), (~ y_pipeff_6[31]), (~ y_pipeff_6[30]), (~ y_pipeff_6[29]), (~ y_pipeff_6[28]), (~ y_pipeff_6[27]), (~ y_pipeff_6[26]), (~ y_pipeff_6[25]), (~ y_pipeff_6[24]), (~ y_pipeff_6[23]), (~ y_pipeff_6[22]), (~ y_pipeff_6[21]), (~ y_pipeff_6[20]), (~ y_pipeff_6[19]), (~ y_pipeff_6[18]), (~ y_pipeff_6[17]), (~ y_pipeff_6[16]), (~ y_pipeff_6[15]), (~ y_pipeff_6[14]), (~ y_pipeff_6[13]), (~ y_pipeff_6[12]), (~ y_pipeff_6[11]), (~ y_pipeff_6[10]), (~ y_pipeff_6[9]), (~ y_pipeff_6[8])},
		x_prenodetwo_8_w = {{10{(~ y_pipeff_7[33])}}, (~ y_pipeff_7[32]), (~ y_pipeff_7[31]), (~ y_pipeff_7[30]), (~ y_pipeff_7[29]), (~ y_pipeff_7[28]), (~ y_pipeff_7[27]), (~ y_pipeff_7[26]), (~ y_pipeff_7[25]), (~ y_pipeff_7[24]), (~ y_pipeff_7[23]), (~ y_pipeff_7[22]), (~ y_pipeff_7[21]), (~ y_pipeff_7[20]), (~ y_pipeff_7[19]), (~ y_pipeff_7[18]), (~ y_pipeff_7[17]), (~ y_pipeff_7[16]), (~ y_pipeff_7[15]), (~ y_pipeff_7[14]), (~ y_pipeff_7[13]), (~ y_pipeff_7[12]), (~ y_pipeff_7[11]), (~ y_pipeff_7[10]), (~ y_pipeff_7[9])},
		x_prenodetwo_9_w = {{11{(~ y_pipeff_8[33])}}, (~ y_pipeff_8[32]), (~ y_pipeff_8[31]), (~ y_pipeff_8[30]), (~ y_pipeff_8[29]), (~ y_pipeff_8[28]), (~ y_pipeff_8[27]), (~ y_pipeff_8[26]), (~ y_pipeff_8[25]), (~ y_pipeff_8[24]), (~ y_pipeff_8[23]), (~ y_pipeff_8[22]), (~ y_pipeff_8[21]), (~ y_pipeff_8[20]), (~ y_pipeff_8[19]), (~ y_pipeff_8[18]), (~ y_pipeff_8[17]), (~ y_pipeff_8[16]), (~ y_pipeff_8[15]), (~ y_pipeff_8[14]), (~ y_pipeff_8[13]), (~ y_pipeff_8[12]), (~ y_pipeff_8[11]), (~ y_pipeff_8[10])},
		x_start_node_w = wire_cxs_value,
		x_subnode_10_w = {(x_prenode_10_w[33] ^ z_pipeff_9[33]), (x_prenode_10_w[32] ^ z_pipeff_9[33]), (x_prenode_10_w[31] ^ z_pipeff_9[33]), (x_prenode_10_w[30] ^ z_pipeff_9[33]), (x_prenode_10_w[29] ^ z_pipeff_9[33]), (x_prenode_10_w[28] ^ z_pipeff_9[33]), (x_prenode_10_w[27] ^ z_pipeff_9[33]), (x_prenode_10_w[26] ^ z_pipeff_9[33]), (x_prenode_10_w[25] ^ z_pipeff_9[33]), (x_prenode_10_w[24] ^ z_pipeff_9[33]), (x_prenode_10_w[23] ^ z_pipeff_9[33]), (x_prenode_10_w[22] ^ z_pipeff_9[33]), (x_prenode_10_w[21] ^ z_pipeff_9[33]), (x_prenode_10_w[20] ^ z_pipeff_9[33]), (x_prenode_10_w[19] ^ z_pipeff_9[33]), (x_prenode_10_w[18] ^ z_pipeff_9[33]), (x_prenode_10_w[17] ^ z_pipeff_9[33]), (x_prenode_10_w[16] ^ z_pipeff_9[33]), (x_prenode_10_w[15] ^ z_pipeff_9[33]), (x_prenode_10_w[14] ^ z_pipeff_9[33]), (x_prenode_10_w[13] ^ z_pipeff_9[33]), (x_prenode_10_w[12] ^ z_pipeff_9[33]), (x_prenode_10_w[11] ^ z_pipeff_9[33]), (x_prenode_10_w[10] ^ z_pipeff_9[33]), (x_prenode_10_w[9] ^ z_pipeff_9[33]), (x_prenode_10_w[8] ^ z_pipeff_9[33]), (x_prenode_10_w[7] ^ z_pipeff_9[33]), (x_prenode_10_w[6] ^ z_pipeff_9[33]), (x_prenode_10_w[5] ^ z_pipeff_9[33]), (x_prenode_10_w[4] ^ z_pipeff_9[33]), (x_prenode_10_w[3] ^ z_pipeff_9[33]), (x_prenode_10_w[2] ^ z_pipeff_9[33]), (x_prenode_10_w[1] ^ z_pipeff_9[33]), (x_prenode_10_w[0] ^ z_pipeff_9[33])},
		x_subnode_11_w = {(x_prenode_11_w[33] ^ z_pipeff_10[33]), (x_prenode_11_w[32] ^ z_pipeff_10[33]), (x_prenode_11_w[31] ^ z_pipeff_10[33]), (x_prenode_11_w[30] ^ z_pipeff_10[33]), (x_prenode_11_w[29] ^ z_pipeff_10[33]), (x_prenode_11_w[28] ^ z_pipeff_10[33]), (x_prenode_11_w[27] ^ z_pipeff_10[33]), (x_prenode_11_w[26] ^ z_pipeff_10[33]), (x_prenode_11_w[25] ^ z_pipeff_10[33]), (x_prenode_11_w[24] ^ z_pipeff_10[33]), (x_prenode_11_w[23] ^ z_pipeff_10[33]), (x_prenode_11_w[22] ^ z_pipeff_10[33]), (x_prenode_11_w[21] ^ z_pipeff_10[33]), (x_prenode_11_w[20] ^ z_pipeff_10[33]), (x_prenode_11_w[19] ^ z_pipeff_10[33]), (x_prenode_11_w[18] ^ z_pipeff_10[33]), (x_prenode_11_w[17] ^ z_pipeff_10[33]), (x_prenode_11_w[16] ^ z_pipeff_10[33]), (x_prenode_11_w[15] ^ z_pipeff_10[33]), (x_prenode_11_w[14] ^ z_pipeff_10[33]), (x_prenode_11_w[13] ^ z_pipeff_10[33]), (x_prenode_11_w[12] ^ z_pipeff_10[33]), (x_prenode_11_w[11] ^ z_pipeff_10[33]), (x_prenode_11_w[10] ^ z_pipeff_10[33]), (x_prenode_11_w[9] ^ z_pipeff_10[33]), (x_prenode_11_w[8] ^ z_pipeff_10[33]), (x_prenode_11_w[7] ^ z_pipeff_10[33]), (x_prenode_11_w[6] ^ z_pipeff_10[33]), (x_prenode_11_w[5] ^ z_pipeff_10[33]), (x_prenode_11_w[4] ^ z_pipeff_10[33]), (x_prenode_11_w[3] ^ z_pipeff_10[33]), (x_prenode_11_w[2] ^ z_pipeff_10[33]), (x_prenode_11_w[1] ^ z_pipeff_10[33]), (x_prenode_11_w[0] ^ z_pipeff_10[33])},
		x_subnode_12_w = {(x_prenode_12_w[33] ^ z_pipeff_11[33]), (x_prenode_12_w[32] ^ z_pipeff_11[33]), (x_prenode_12_w[31] ^ z_pipeff_11[33]), (x_prenode_12_w[30] ^ z_pipeff_11[33]), (x_prenode_12_w[29] ^ z_pipeff_11[33]), (x_prenode_12_w[28] ^ z_pipeff_11[33]), (x_prenode_12_w[27] ^ z_pipeff_11[33]), (x_prenode_12_w[26] ^ z_pipeff_11[33]), (x_prenode_12_w[25] ^ z_pipeff_11[33]), (x_prenode_12_w[24] ^ z_pipeff_11[33]), (x_prenode_12_w[23] ^ z_pipeff_11[33]), (x_prenode_12_w[22] ^ z_pipeff_11[33]), (x_prenode_12_w[21] ^ z_pipeff_11[33]), (x_prenode_12_w[20] ^ z_pipeff_11[33]), (x_prenode_12_w[19] ^ z_pipeff_11[33]), (x_prenode_12_w[18] ^ z_pipeff_11[33]), (x_prenode_12_w[17] ^ z_pipeff_11[33]), (x_prenode_12_w[16] ^ z_pipeff_11[33]), (x_prenode_12_w[15] ^ z_pipeff_11[33]), (x_prenode_12_w[14] ^ z_pipeff_11[33]), (x_prenode_12_w[13] ^ z_pipeff_11[33]), (x_prenode_12_w[12] ^ z_pipeff_11[33]), (x_prenode_12_w[11] ^ z_pipeff_11[33]), (x_prenode_12_w[10] ^ z_pipeff_11[33]), (x_prenode_12_w[9] ^ z_pipeff_11[33]), (x_prenode_12_w[8] ^ z_pipeff_11[33]), (x_prenode_12_w[7] ^ z_pipeff_11[33]), (x_prenode_12_w[6] ^ z_pipeff_11[33]), (x_prenode_12_w[5] ^ z_pipeff_11[33]), (x_prenode_12_w[4] ^ z_pipeff_11[33]), (x_prenode_12_w[3] ^ z_pipeff_11[33]), (x_prenode_12_w[2] ^ z_pipeff_11[33]), (x_prenode_12_w[1] ^ z_pipeff_11[33]), (x_prenode_12_w[0] ^ z_pipeff_11[33])},
		x_subnode_13_w = {(x_prenode_13_w[33] ^ z_pipeff_12[33]), (x_prenode_13_w[32] ^ z_pipeff_12[33]), (x_prenode_13_w[31] ^ z_pipeff_12[33]), (x_prenode_13_w[30] ^ z_pipeff_12[33]), (x_prenode_13_w[29] ^ z_pipeff_12[33]), (x_prenode_13_w[28] ^ z_pipeff_12[33]), (x_prenode_13_w[27] ^ z_pipeff_12[33]), (x_prenode_13_w[26] ^ z_pipeff_12[33]), (x_prenode_13_w[25] ^ z_pipeff_12[33]), (x_prenode_13_w[24] ^ z_pipeff_12[33]), (x_prenode_13_w[23] ^ z_pipeff_12[33]), (x_prenode_13_w[22] ^ z_pipeff_12[33]), (x_prenode_13_w[21] ^ z_pipeff_12[33]), (x_prenode_13_w[20] ^ z_pipeff_12[33]), (x_prenode_13_w[19] ^ z_pipeff_12[33]), (x_prenode_13_w[18] ^ z_pipeff_12[33]), (x_prenode_13_w[17] ^ z_pipeff_12[33]), (x_prenode_13_w[16] ^ z_pipeff_12[33]), (x_prenode_13_w[15] ^ z_pipeff_12[33]), (x_prenode_13_w[14] ^ z_pipeff_12[33]), (x_prenode_13_w[13] ^ z_pipeff_12[33]), (x_prenode_13_w[12] ^ z_pipeff_12[33]), (x_prenode_13_w[11] ^ z_pipeff_12[33]), (x_prenode_13_w[10] ^ z_pipeff_12[33]), (x_prenode_13_w[9] ^ z_pipeff_12[33]), (x_prenode_13_w[8] ^ z_pipeff_12[33]), (x_prenode_13_w[7] ^ z_pipeff_12[33]), (x_prenode_13_w[6] ^ z_pipeff_12[33]), (x_prenode_13_w[5] ^ z_pipeff_12[33]), (x_prenode_13_w[4] ^ z_pipeff_12[33]), (x_prenode_13_w[3] ^ z_pipeff_12[33]), (x_prenode_13_w[2] ^ z_pipeff_12[33]), (x_prenode_13_w[1] ^ z_pipeff_12[33]), (x_prenode_13_w[0] ^ z_pipeff_12[33])},
		x_subnode_2_w = {(x_prenode_2_w[33] ^ z_pipeff_1[33]), (x_prenode_2_w[32] ^ z_pipeff_1[33]), (x_prenode_2_w[31] ^ z_pipeff_1[33]), (x_prenode_2_w[30] ^ z_pipeff_1[33]), (x_prenode_2_w[29] ^ z_pipeff_1[33]), (x_prenode_2_w[28] ^ z_pipeff_1[33]), (x_prenode_2_w[27] ^ z_pipeff_1[33]), (x_prenode_2_w[26] ^ z_pipeff_1[33]), (x_prenode_2_w[25] ^ z_pipeff_1[33]), (x_prenode_2_w[24] ^ z_pipeff_1[33]), (x_prenode_2_w[23] ^ z_pipeff_1[33]), (x_prenode_2_w[22] ^ z_pipeff_1[33]), (x_prenode_2_w[21] ^ z_pipeff_1[33]), (x_prenode_2_w[20] ^ z_pipeff_1[33]), (x_prenode_2_w[19] ^ z_pipeff_1[33]), (x_prenode_2_w[18] ^ z_pipeff_1[33]), (x_prenode_2_w[17] ^ z_pipeff_1[33]), (x_prenode_2_w[16] ^ z_pipeff_1[33]), (x_prenode_2_w[15] ^ z_pipeff_1[33]), (x_prenode_2_w[14] ^ z_pipeff_1[33]), (x_prenode_2_w[13] ^ z_pipeff_1[33]), (x_prenode_2_w[12] ^ z_pipeff_1[33]), (x_prenode_2_w[11] ^ z_pipeff_1[33]), (x_prenode_2_w[10] ^ z_pipeff_1[33]), (x_prenode_2_w[9] ^ z_pipeff_1[33]), (x_prenode_2_w[8] ^ z_pipeff_1[33]), (x_prenode_2_w[7] ^ z_pipeff_1[33]), (x_prenode_2_w[6] ^ z_pipeff_1[33]), (x_prenode_2_w[5] ^ z_pipeff_1[33]), (x_prenode_2_w[4] ^ z_pipeff_1[33]), (x_prenode_2_w[3] ^ z_pipeff_1[33]), (x_prenode_2_w[2] ^ z_pipeff_1[33]), (x_prenode_2_w[1] ^ z_pipeff_1[33]), (x_prenode_2_w[0] ^ z_pipeff_1[33])},
		x_subnode_3_w = {(x_prenode_3_w[33] ^ z_pipeff_2[33]), (x_prenode_3_w[32] ^ z_pipeff_2[33]), (x_prenode_3_w[31] ^ z_pipeff_2[33]), (x_prenode_3_w[30] ^ z_pipeff_2[33]), (x_prenode_3_w[29] ^ z_pipeff_2[33]), (x_prenode_3_w[28] ^ z_pipeff_2[33]), (x_prenode_3_w[27] ^ z_pipeff_2[33]), (x_prenode_3_w[26] ^ z_pipeff_2[33]), (x_prenode_3_w[25] ^ z_pipeff_2[33]), (x_prenode_3_w[24] ^ z_pipeff_2[33]), (x_prenode_3_w[23] ^ z_pipeff_2[33]), (x_prenode_3_w[22] ^ z_pipeff_2[33]), (x_prenode_3_w[21] ^ z_pipeff_2[33]), (x_prenode_3_w[20] ^ z_pipeff_2[33]), (x_prenode_3_w[19] ^ z_pipeff_2[33]), (x_prenode_3_w[18] ^ z_pipeff_2[33]), (x_prenode_3_w[17] ^ z_pipeff_2[33]), (x_prenode_3_w[16] ^ z_pipeff_2[33]), (x_prenode_3_w[15] ^ z_pipeff_2[33]), (x_prenode_3_w[14] ^ z_pipeff_2[33]), (x_prenode_3_w[13] ^ z_pipeff_2[33]), (x_prenode_3_w[12] ^ z_pipeff_2[33]), (x_prenode_3_w[11] ^ z_pipeff_2[33]), (x_prenode_3_w[10] ^ z_pipeff_2[33]), (x_prenode_3_w[9] ^ z_pipeff_2[33]), (x_prenode_3_w[8] ^ z_pipeff_2[33]), (x_prenode_3_w[7] ^ z_pipeff_2[33]), (x_prenode_3_w[6] ^ z_pipeff_2[33]), (x_prenode_3_w[5] ^ z_pipeff_2[33]), (x_prenode_3_w[4] ^ z_pipeff_2[33]), (x_prenode_3_w[3] ^ z_pipeff_2[33]), (x_prenode_3_w[2] ^ z_pipeff_2[33]), (x_prenode_3_w[1] ^ z_pipeff_2[33]), (x_prenode_3_w[0] ^ z_pipeff_2[33])},
		x_subnode_4_w = {(x_prenode_4_w[33] ^ z_pipeff_3[33]), (x_prenode_4_w[32] ^ z_pipeff_3[33]), (x_prenode_4_w[31] ^ z_pipeff_3[33]), (x_prenode_4_w[30] ^ z_pipeff_3[33]), (x_prenode_4_w[29] ^ z_pipeff_3[33]), (x_prenode_4_w[28] ^ z_pipeff_3[33]), (x_prenode_4_w[27] ^ z_pipeff_3[33]), (x_prenode_4_w[26] ^ z_pipeff_3[33]), (x_prenode_4_w[25] ^ z_pipeff_3[33]), (x_prenode_4_w[24] ^ z_pipeff_3[33]), (x_prenode_4_w[23] ^ z_pipeff_3[33]), (x_prenode_4_w[22] ^ z_pipeff_3[33]), (x_prenode_4_w[21] ^ z_pipeff_3[33]), (x_prenode_4_w[20] ^ z_pipeff_3[33]), (x_prenode_4_w[19] ^ z_pipeff_3[33]), (x_prenode_4_w[18] ^ z_pipeff_3[33]), (x_prenode_4_w[17] ^ z_pipeff_3[33]), (x_prenode_4_w[16] ^ z_pipeff_3[33]), (x_prenode_4_w[15] ^ z_pipeff_3[33]), (x_prenode_4_w[14] ^ z_pipeff_3[33]), (x_prenode_4_w[13] ^ z_pipeff_3[33]), (x_prenode_4_w[12] ^ z_pipeff_3[33]), (x_prenode_4_w[11] ^ z_pipeff_3[33]), (x_prenode_4_w[10] ^ z_pipeff_3[33]), (x_prenode_4_w[9] ^ z_pipeff_3[33]), (x_prenode_4_w[8] ^ z_pipeff_3[33]), (x_prenode_4_w[7] ^ z_pipeff_3[33]), (x_prenode_4_w[6] ^ z_pipeff_3[33]), (x_prenode_4_w[5] ^ z_pipeff_3[33]), (x_prenode_4_w[4] ^ z_pipeff_3[33]), (x_prenode_4_w[3] ^ z_pipeff_3[33]), (x_prenode_4_w[2] ^ z_pipeff_3[33]), (x_prenode_4_w[1] ^ z_pipeff_3[33]), (x_prenode_4_w[0] ^ z_pipeff_3[33])},
		x_subnode_5_w = {(x_prenode_5_w[33] ^ z_pipeff_4[33]), (x_prenode_5_w[32] ^ z_pipeff_4[33]), (x_prenode_5_w[31] ^ z_pipeff_4[33]), (x_prenode_5_w[30] ^ z_pipeff_4[33]), (x_prenode_5_w[29] ^ z_pipeff_4[33]), (x_prenode_5_w[28] ^ z_pipeff_4[33]), (x_prenode_5_w[27] ^ z_pipeff_4[33]), (x_prenode_5_w[26] ^ z_pipeff_4[33]), (x_prenode_5_w[25] ^ z_pipeff_4[33]), (x_prenode_5_w[24] ^ z_pipeff_4[33]), (x_prenode_5_w[23] ^ z_pipeff_4[33]), (x_prenode_5_w[22] ^ z_pipeff_4[33]), (x_prenode_5_w[21] ^ z_pipeff_4[33]), (x_prenode_5_w[20] ^ z_pipeff_4[33]), (x_prenode_5_w[19] ^ z_pipeff_4[33]), (x_prenode_5_w[18] ^ z_pipeff_4[33]), (x_prenode_5_w[17] ^ z_pipeff_4[33]), (x_prenode_5_w[16] ^ z_pipeff_4[33]), (x_prenode_5_w[15] ^ z_pipeff_4[33]), (x_prenode_5_w[14] ^ z_pipeff_4[33]), (x_prenode_5_w[13] ^ z_pipeff_4[33]), (x_prenode_5_w[12] ^ z_pipeff_4[33]), (x_prenode_5_w[11] ^ z_pipeff_4[33]), (x_prenode_5_w[10] ^ z_pipeff_4[33]), (x_prenode_5_w[9] ^ z_pipeff_4[33]), (x_prenode_5_w[8] ^ z_pipeff_4[33]), (x_prenode_5_w[7] ^ z_pipeff_4[33]), (x_prenode_5_w[6] ^ z_pipeff_4[33]), (x_prenode_5_w[5] ^ z_pipeff_4[33]), (x_prenode_5_w[4] ^ z_pipeff_4[33]), (x_prenode_5_w[3] ^ z_pipeff_4[33]), (x_prenode_5_w[2] ^ z_pipeff_4[33]), (x_prenode_5_w[1] ^ z_pipeff_4[33]), (x_prenode_5_w[0] ^ z_pipeff_4[33])},
		x_subnode_6_w = {(x_prenode_6_w[33] ^ z_pipeff_5[33]), (x_prenode_6_w[32] ^ z_pipeff_5[33]), (x_prenode_6_w[31] ^ z_pipeff_5[33]), (x_prenode_6_w[30] ^ z_pipeff_5[33]), (x_prenode_6_w[29] ^ z_pipeff_5[33]), (x_prenode_6_w[28] ^ z_pipeff_5[33]), (x_prenode_6_w[27] ^ z_pipeff_5[33]), (x_prenode_6_w[26] ^ z_pipeff_5[33]), (x_prenode_6_w[25] ^ z_pipeff_5[33]), (x_prenode_6_w[24] ^ z_pipeff_5[33]), (x_prenode_6_w[23] ^ z_pipeff_5[33]), (x_prenode_6_w[22] ^ z_pipeff_5[33]), (x_prenode_6_w[21] ^ z_pipeff_5[33]), (x_prenode_6_w[20] ^ z_pipeff_5[33]), (x_prenode_6_w[19] ^ z_pipeff_5[33]), (x_prenode_6_w[18] ^ z_pipeff_5[33]), (x_prenode_6_w[17] ^ z_pipeff_5[33]), (x_prenode_6_w[16] ^ z_pipeff_5[33]), (x_prenode_6_w[15] ^ z_pipeff_5[33]), (x_prenode_6_w[14] ^ z_pipeff_5[33]), (x_prenode_6_w[13] ^ z_pipeff_5[33]), (x_prenode_6_w[12] ^ z_pipeff_5[33]), (x_prenode_6_w[11] ^ z_pipeff_5[33]), (x_prenode_6_w[10] ^ z_pipeff_5[33]), (x_prenode_6_w[9] ^ z_pipeff_5[33]), (x_prenode_6_w[8] ^ z_pipeff_5[33]), (x_prenode_6_w[7] ^ z_pipeff_5[33]), (x_prenode_6_w[6] ^ z_pipeff_5[33]), (x_prenode_6_w[5] ^ z_pipeff_5[33]), (x_prenode_6_w[4] ^ z_pipeff_5[33]), (x_prenode_6_w[3] ^ z_pipeff_5[33]), (x_prenode_6_w[2] ^ z_pipeff_5[33]), (x_prenode_6_w[1] ^ z_pipeff_5[33]), (x_prenode_6_w[0] ^ z_pipeff_5[33])},
		x_subnode_7_w = {(x_prenode_7_w[33] ^ z_pipeff_6[33]), (x_prenode_7_w[32] ^ z_pipeff_6[33]), (x_prenode_7_w[31] ^ z_pipeff_6[33]), (x_prenode_7_w[30] ^ z_pipeff_6[33]), (x_prenode_7_w[29] ^ z_pipeff_6[33]), (x_prenode_7_w[28] ^ z_pipeff_6[33]), (x_prenode_7_w[27] ^ z_pipeff_6[33]), (x_prenode_7_w[26] ^ z_pipeff_6[33]), (x_prenode_7_w[25] ^ z_pipeff_6[33]), (x_prenode_7_w[24] ^ z_pipeff_6[33]), (x_prenode_7_w[23] ^ z_pipeff_6[33]), (x_prenode_7_w[22] ^ z_pipeff_6[33]), (x_prenode_7_w[21] ^ z_pipeff_6[33]), (x_prenode_7_w[20] ^ z_pipeff_6[33]), (x_prenode_7_w[19] ^ z_pipeff_6[33]), (x_prenode_7_w[18] ^ z_pipeff_6[33]), (x_prenode_7_w[17] ^ z_pipeff_6[33]), (x_prenode_7_w[16] ^ z_pipeff_6[33]), (x_prenode_7_w[15] ^ z_pipeff_6[33]), (x_prenode_7_w[14] ^ z_pipeff_6[33]), (x_prenode_7_w[13] ^ z_pipeff_6[33]), (x_prenode_7_w[12] ^ z_pipeff_6[33]), (x_prenode_7_w[11] ^ z_pipeff_6[33]), (x_prenode_7_w[10] ^ z_pipeff_6[33]), (x_prenode_7_w[9] ^ z_pipeff_6[33]), (x_prenode_7_w[8] ^ z_pipeff_6[33]), (x_prenode_7_w[7] ^ z_pipeff_6[33]), (x_prenode_7_w[6] ^ z_pipeff_6[33]), (x_prenode_7_w[5] ^ z_pipeff_6[33]), (x_prenode_7_w[4] ^ z_pipeff_6[33]), (x_prenode_7_w[3] ^ z_pipeff_6[33]), (x_prenode_7_w[2] ^ z_pipeff_6[33]), (x_prenode_7_w[1] ^ z_pipeff_6[33]), (x_prenode_7_w[0] ^ z_pipeff_6[33])},
		x_subnode_8_w = {(x_prenode_8_w[33] ^ z_pipeff_7[33]), (x_prenode_8_w[32] ^ z_pipeff_7[33]), (x_prenode_8_w[31] ^ z_pipeff_7[33]), (x_prenode_8_w[30] ^ z_pipeff_7[33]), (x_prenode_8_w[29] ^ z_pipeff_7[33]), (x_prenode_8_w[28] ^ z_pipeff_7[33]), (x_prenode_8_w[27] ^ z_pipeff_7[33]), (x_prenode_8_w[26] ^ z_pipeff_7[33]), (x_prenode_8_w[25] ^ z_pipeff_7[33]), (x_prenode_8_w[24] ^ z_pipeff_7[33]), (x_prenode_8_w[23] ^ z_pipeff_7[33]), (x_prenode_8_w[22] ^ z_pipeff_7[33]), (x_prenode_8_w[21] ^ z_pipeff_7[33]), (x_prenode_8_w[20] ^ z_pipeff_7[33]), (x_prenode_8_w[19] ^ z_pipeff_7[33]), (x_prenode_8_w[18] ^ z_pipeff_7[33]), (x_prenode_8_w[17] ^ z_pipeff_7[33]), (x_prenode_8_w[16] ^ z_pipeff_7[33]), (x_prenode_8_w[15] ^ z_pipeff_7[33]), (x_prenode_8_w[14] ^ z_pipeff_7[33]), (x_prenode_8_w[13] ^ z_pipeff_7[33]), (x_prenode_8_w[12] ^ z_pipeff_7[33]), (x_prenode_8_w[11] ^ z_pipeff_7[33]), (x_prenode_8_w[10] ^ z_pipeff_7[33]), (x_prenode_8_w[9] ^ z_pipeff_7[33]), (x_prenode_8_w[8] ^ z_pipeff_7[33]), (x_prenode_8_w[7] ^ z_pipeff_7[33]), (x_prenode_8_w[6] ^ z_pipeff_7[33]), (x_prenode_8_w[5] ^ z_pipeff_7[33]), (x_prenode_8_w[4] ^ z_pipeff_7[33]), (x_prenode_8_w[3] ^ z_pipeff_7[33]), (x_prenode_8_w[2] ^ z_pipeff_7[33]), (x_prenode_8_w[1] ^ z_pipeff_7[33]), (x_prenode_8_w[0] ^ z_pipeff_7[33])},
		x_subnode_9_w = {(x_prenode_9_w[33] ^ z_pipeff_8[33]), (x_prenode_9_w[32] ^ z_pipeff_8[33]), (x_prenode_9_w[31] ^ z_pipeff_8[33]), (x_prenode_9_w[30] ^ z_pipeff_8[33]), (x_prenode_9_w[29] ^ z_pipeff_8[33]), (x_prenode_9_w[28] ^ z_pipeff_8[33]), (x_prenode_9_w[27] ^ z_pipeff_8[33]), (x_prenode_9_w[26] ^ z_pipeff_8[33]), (x_prenode_9_w[25] ^ z_pipeff_8[33]), (x_prenode_9_w[24] ^ z_pipeff_8[33]), (x_prenode_9_w[23] ^ z_pipeff_8[33]), (x_prenode_9_w[22] ^ z_pipeff_8[33]), (x_prenode_9_w[21] ^ z_pipeff_8[33]), (x_prenode_9_w[20] ^ z_pipeff_8[33]), (x_prenode_9_w[19] ^ z_pipeff_8[33]), (x_prenode_9_w[18] ^ z_pipeff_8[33]), (x_prenode_9_w[17] ^ z_pipeff_8[33]), (x_prenode_9_w[16] ^ z_pipeff_8[33]), (x_prenode_9_w[15] ^ z_pipeff_8[33]), (x_prenode_9_w[14] ^ z_pipeff_8[33]), (x_prenode_9_w[13] ^ z_pipeff_8[33]), (x_prenode_9_w[12] ^ z_pipeff_8[33]), (x_prenode_9_w[11] ^ z_pipeff_8[33]), (x_prenode_9_w[10] ^ z_pipeff_8[33]), (x_prenode_9_w[9] ^ z_pipeff_8[33]), (x_prenode_9_w[8] ^ z_pipeff_8[33]), (x_prenode_9_w[7] ^ z_pipeff_8[33]), (x_prenode_9_w[6] ^ z_pipeff_8[33]), (x_prenode_9_w[5] ^ z_pipeff_8[33]), (x_prenode_9_w[4] ^ z_pipeff_8[33]), (x_prenode_9_w[3] ^ z_pipeff_8[33]), (x_prenode_9_w[2] ^ z_pipeff_8[33]), (x_prenode_9_w[1] ^ z_pipeff_8[33]), (x_prenode_9_w[0] ^ z_pipeff_8[33])},
		y_pipenode_10_w = wire_y_pipenode_10_add_result,
		y_pipenode_11_w = wire_y_pipenode_11_add_result,
		y_pipenode_12_w = wire_y_pipenode_12_add_result,
		y_pipenode_13_w = wire_y_pipenode_13_add_result,
		y_pipenode_2_w = wire_y_pipenode_2_add_result,
		y_pipenode_3_w = wire_y_pipenode_3_add_result,
		y_pipenode_4_w = wire_y_pipenode_4_add_result,
		y_pipenode_5_w = wire_y_pipenode_5_add_result,
		y_pipenode_6_w = wire_y_pipenode_6_add_result,
		y_pipenode_7_w = wire_y_pipenode_7_add_result,
		y_pipenode_8_w = wire_y_pipenode_8_add_result,
		y_pipenode_9_w = wire_y_pipenode_9_add_result,
		y_prenode_10_w = {((y_prenodeone_10_w[33] & (~ indexbitff[9])) | (y_prenodetwo_10_w[33] & indexbitff[9])), ((y_prenodeone_10_w[32] & (~ indexbitff[9])) | (y_prenodetwo_10_w[32] & indexbitff[9])), ((y_prenodeone_10_w[31] & (~ indexbitff[9])) | (y_prenodetwo_10_w[31] & indexbitff[9])), ((y_prenodeone_10_w[30] & (~ indexbitff[9])) | (y_prenodetwo_10_w[30] & indexbitff[9])), ((y_prenodeone_10_w[29] & (~ indexbitff[9])) | (y_prenodetwo_10_w[29] & indexbitff[9])), ((y_prenodeone_10_w[28] & (~ indexbitff[9])) | (y_prenodetwo_10_w[28] & indexbitff[9])), ((y_prenodeone_10_w[27] & (~ indexbitff[9])) | (y_prenodetwo_10_w[27] & indexbitff[9])), ((y_prenodeone_10_w[26] & (~ indexbitff[9])) | (y_prenodetwo_10_w[26] & indexbitff[9])), ((y_prenodeone_10_w[25] & (~ indexbitff[9])) | (y_prenodetwo_10_w[25] & indexbitff[9])), ((y_prenodeone_10_w[24] & (~ indexbitff[9])) | (y_prenodetwo_10_w[24] & indexbitff[9])), ((y_prenodeone_10_w[23] & (~ indexbitff[9])) | (y_prenodetwo_10_w[23] & indexbitff[9])), ((y_prenodeone_10_w[22] & (~ indexbitff[9])) | (y_prenodetwo_10_w[22] & indexbitff[9])), ((y_prenodeone_10_w[21] & (~ indexbitff[9])) | (y_prenodetwo_10_w[21] & indexbitff[9])), ((y_prenodeone_10_w[20] & (~ indexbitff[9])) | (y_prenodetwo_10_w[20] & indexbitff[9])), ((y_prenodeone_10_w[19] & (~ indexbitff[9])) | (y_prenodetwo_10_w[19] & indexbitff[9])), ((y_prenodeone_10_w[18] & (~ indexbitff[9])) | (y_prenodetwo_10_w[18] & indexbitff[9])), ((y_prenodeone_10_w[17] & (~ indexbitff[9])) | (y_prenodetwo_10_w[17] & indexbitff[9])), ((y_prenodeone_10_w[16] & (~ indexbitff[9])) | (y_prenodetwo_10_w[16] & indexbitff[9])), ((y_prenodeone_10_w[15] & (~ indexbitff[9])) | (y_prenodetwo_10_w[15] & indexbitff[9])), ((y_prenodeone_10_w[14] & (~ indexbitff[9])) | (y_prenodetwo_10_w[14] & indexbitff[9])), ((y_prenodeone_10_w[13] & (~ indexbitff[9])) | (y_prenodetwo_10_w[13] & indexbitff[9])), ((y_prenodeone_10_w[12] & (~ indexbitff[9])) | (y_prenodetwo_10_w[12] & indexbitff[9])), ((y_prenodeone_10_w[11] & (~ indexbitff[9])) | (y_prenodetwo_10_w[11] 
& indexbitff[9])), ((y_prenodeone_10_w[10] & (~ indexbitff[9])) | (y_prenodetwo_10_w[10] & indexbitff[9])), ((y_prenodeone_10_w[9] & (~ indexbitff[9])) | (y_prenodetwo_10_w[9] & indexbitff[9])), ((y_prenodeone_10_w[8] & (~ indexbitff[9])) | (y_prenodetwo_10_w[8] & indexbitff[9])), ((y_prenodeone_10_w[7] & (~ indexbitff[9])) | (y_prenodetwo_10_w[7] & indexbitff[9])), ((y_prenodeone_10_w[6] & (~ indexbitff[9])) | (y_prenodetwo_10_w[6] & indexbitff[9])), ((y_prenodeone_10_w[5] & (~ indexbitff[9])) | (y_prenodetwo_10_w[5] & indexbitff[9])), ((y_prenodeone_10_w[4] & (~ indexbitff[9])) | (y_prenodetwo_10_w[4] & indexbitff[9])), ((y_prenodeone_10_w[3] & (~ indexbitff[9])) | (y_prenodetwo_10_w[3] & indexbitff[9])), ((y_prenodeone_10_w[2] & (~ indexbitff[9])) | (y_prenodetwo_10_w[2] & indexbitff[9])), ((y_prenodeone_10_w[1] & (~ indexbitff[9])) | (y_prenodetwo_10_w[1] & indexbitff[9])), ((y_prenodeone_10_w[0] & (~ indexbitff[9])) | (y_prenodetwo_10_w[0] & indexbitff[9]))},
		y_prenode_11_w = {((y_prenodeone_11_w[33] & (~ indexbitff[10])) | (y_prenodetwo_11_w[33] & indexbitff[10])), ((y_prenodeone_11_w[32] & (~ indexbitff[10])) | (y_prenodetwo_11_w[32] & indexbitff[10])), ((y_prenodeone_11_w[31] & (~ indexbitff[10])) | (y_prenodetwo_11_w[31] & indexbitff[10])), ((y_prenodeone_11_w[30] & (~ indexbitff[10])) | (y_prenodetwo_11_w[30] & indexbitff[10])), ((y_prenodeone_11_w[29] & (~ indexbitff[10])) | (y_prenodetwo_11_w[29] & indexbitff[10])), ((y_prenodeone_11_w[28] & (~ indexbitff[10])) | (y_prenodetwo_11_w[28] & indexbitff[10])), ((y_prenodeone_11_w[27] & (~ indexbitff[10])) | (y_prenodetwo_11_w[27] & indexbitff[10])), ((y_prenodeone_11_w[26] & (~ indexbitff[10])) | (y_prenodetwo_11_w[26] & indexbitff[10])), ((y_prenodeone_11_w[25] & (~ indexbitff[10])) | (y_prenodetwo_11_w[25] & indexbitff[10])), ((y_prenodeone_11_w[24] & (~ indexbitff[10])) | (y_prenodetwo_11_w[24] & indexbitff[10])), ((y_prenodeone_11_w[23] & (~ indexbitff[10])) | (y_prenodetwo_11_w[23] & indexbitff[10])), ((y_prenodeone_11_w[22] & (~ indexbitff[10])) | (y_prenodetwo_11_w[22] & indexbitff[10])), ((y_prenodeone_11_w[21] & (~ indexbitff[10])) | (y_prenodetwo_11_w[21] & indexbitff[10])), ((y_prenodeone_11_w[20] & (~ indexbitff[10])) | (y_prenodetwo_11_w[20] & indexbitff[10])), ((y_prenodeone_11_w[19] & (~ indexbitff[10])) | (y_prenodetwo_11_w[19] & indexbitff[10])), ((y_prenodeone_11_w[18] & (~ indexbitff[10])) | (y_prenodetwo_11_w[18] & indexbitff[10])), ((y_prenodeone_11_w[17] & (~ indexbitff[10])) | (y_prenodetwo_11_w[17] & indexbitff[10])), ((y_prenodeone_11_w[16] & (~ indexbitff[10])) | (y_prenodetwo_11_w[16] & indexbitff[10])), ((y_prenodeone_11_w[15] & (~ indexbitff[10])) | (y_prenodetwo_11_w[15] & indexbitff[10])), ((y_prenodeone_11_w[14] & (~ indexbitff[10])) | (y_prenodetwo_11_w[14] & indexbitff[10])), ((y_prenodeone_11_w[13] & (~ indexbitff[10])) | (y_prenodetwo_11_w[13] & indexbitff[10])), ((y_prenodeone_11_w[12] & (~ indexbitff[10])) | (y_prenodetwo_11_w[12] & indexbitff[10])), ((y_prenodeone_11_w[11] & 
(~ indexbitff[10])) | (y_prenodetwo_11_w[11] & indexbitff[10])), ((y_prenodeone_11_w[10] & (~ indexbitff[10])) | (y_prenodetwo_11_w[10] & indexbitff[10])), ((y_prenodeone_11_w[9] & (~ indexbitff[10])) | (y_prenodetwo_11_w[9] & indexbitff[10])), ((y_prenodeone_11_w[8] & (~ indexbitff[10])) | (y_prenodetwo_11_w[8] & indexbitff[10])), ((y_prenodeone_11_w[7] & (~ indexbitff[10])) | (y_prenodetwo_11_w[7] & indexbitff[10])), ((y_prenodeone_11_w[6] & (~ indexbitff[10])) | (y_prenodetwo_11_w[6] & indexbitff[10])), ((y_prenodeone_11_w[5] & (~ indexbitff[10])) | (y_prenodetwo_11_w[5] & indexbitff[10])), ((y_prenodeone_11_w[4] & (~ indexbitff[10])) | (y_prenodetwo_11_w[4] & indexbitff[10])), ((y_prenodeone_11_w[3] & (~ indexbitff[10])) | (y_prenodetwo_11_w[3] & indexbitff[10])), ((y_prenodeone_11_w[2] & (~ indexbitff[10])) | (y_prenodetwo_11_w[2] & indexbitff[10])), ((y_prenodeone_11_w[1] & (~ indexbitff[10])) | (y_prenodetwo_11_w[1] & indexbitff[10])), ((y_prenodeone_11_w[0] & (~ indexbitff[10])) | (y_prenodetwo_11_w[0] & indexbitff[10]))},
		y_prenode_12_w = {((y_prenodeone_12_w[33] & (~ indexbitff[11])) | (y_prenodetwo_12_w[33] & indexbitff[11])), ((y_prenodeone_12_w[32] & (~ indexbitff[11])) | (y_prenodetwo_12_w[32] & indexbitff[11])), ((y_prenodeone_12_w[31] & (~ indexbitff[11])) | (y_prenodetwo_12_w[31] & indexbitff[11])), ((y_prenodeone_12_w[30] & (~ indexbitff[11])) | (y_prenodetwo_12_w[30] & indexbitff[11])), ((y_prenodeone_12_w[29] & (~ indexbitff[11])) | (y_prenodetwo_12_w[29] & indexbitff[11])), ((y_prenodeone_12_w[28] & (~ indexbitff[11])) | (y_prenodetwo_12_w[28] & indexbitff[11])), ((y_prenodeone_12_w[27] & (~ indexbitff[11])) | (y_prenodetwo_12_w[27] & indexbitff[11])), ((y_prenodeone_12_w[26] & (~ indexbitff[11])) | (y_prenodetwo_12_w[26] & indexbitff[11])), ((y_prenodeone_12_w[25] & (~ indexbitff[11])) | (y_prenodetwo_12_w[25] & indexbitff[11])), ((y_prenodeone_12_w[24] & (~ indexbitff[11])) | (y_prenodetwo_12_w[24] & indexbitff[11])), ((y_prenodeone_12_w[23] & (~ indexbitff[11])) | (y_prenodetwo_12_w[23] & indexbitff[11])), ((y_prenodeone_12_w[22] & (~ indexbitff[11])) | (y_prenodetwo_12_w[22] & indexbitff[11])), ((y_prenodeone_12_w[21] & (~ indexbitff[11])) | (y_prenodetwo_12_w[21] & indexbitff[11])), ((y_prenodeone_12_w[20] & (~ indexbitff[11])) | (y_prenodetwo_12_w[20] & indexbitff[11])), ((y_prenodeone_12_w[19] & (~ indexbitff[11])) | (y_prenodetwo_12_w[19] & indexbitff[11])), ((y_prenodeone_12_w[18] & (~ indexbitff[11])) | (y_prenodetwo_12_w[18] & indexbitff[11])), ((y_prenodeone_12_w[17] & (~ indexbitff[11])) | (y_prenodetwo_12_w[17] & indexbitff[11])), ((y_prenodeone_12_w[16] & (~ indexbitff[11])) | (y_prenodetwo_12_w[16] & indexbitff[11])), ((y_prenodeone_12_w[15] & (~ indexbitff[11])) | (y_prenodetwo_12_w[15] & indexbitff[11])), ((y_prenodeone_12_w[14] & (~ indexbitff[11])) | (y_prenodetwo_12_w[14] & indexbitff[11])), ((y_prenodeone_12_w[13] & (~ indexbitff[11])) | (y_prenodetwo_12_w[13] & indexbitff[11])), ((y_prenodeone_12_w[12] & (~ indexbitff[11])) | (y_prenodetwo_12_w[12] & indexbitff[11])), ((y_prenodeone_12_w[11] & 
(~ indexbitff[11])) | (y_prenodetwo_12_w[11] & indexbitff[11])), ((y_prenodeone_12_w[10] & (~ indexbitff[11])) | (y_prenodetwo_12_w[10] & indexbitff[11])), ((y_prenodeone_12_w[9] & (~ indexbitff[11])) | (y_prenodetwo_12_w[9] & indexbitff[11])), ((y_prenodeone_12_w[8] & (~ indexbitff[11])) | (y_prenodetwo_12_w[8] & indexbitff[11])), ((y_prenodeone_12_w[7] & (~ indexbitff[11])) | (y_prenodetwo_12_w[7] & indexbitff[11])), ((y_prenodeone_12_w[6] & (~ indexbitff[11])) | (y_prenodetwo_12_w[6] & indexbitff[11])), ((y_prenodeone_12_w[5] & (~ indexbitff[11])) | (y_prenodetwo_12_w[5] & indexbitff[11])), ((y_prenodeone_12_w[4] & (~ indexbitff[11])) | (y_prenodetwo_12_w[4] & indexbitff[11])), ((y_prenodeone_12_w[3] & (~ indexbitff[11])) | (y_prenodetwo_12_w[3] & indexbitff[11])), ((y_prenodeone_12_w[2] & (~ indexbitff[11])) | (y_prenodetwo_12_w[2] & indexbitff[11])), ((y_prenodeone_12_w[1] & (~ indexbitff[11])) | (y_prenodetwo_12_w[1] & indexbitff[11])), ((y_prenodeone_12_w[0] & (~ indexbitff[11])) | (y_prenodetwo_12_w[0] & indexbitff[11]))},
		y_prenode_13_w = {((y_prenodeone_13_w[33] & (~ indexbitff[12])) | (y_prenodetwo_13_w[33] & indexbitff[12])), ((y_prenodeone_13_w[32] & (~ indexbitff[12])) | (y_prenodetwo_13_w[32] & indexbitff[12])), ((y_prenodeone_13_w[31] & (~ indexbitff[12])) | (y_prenodetwo_13_w[31] & indexbitff[12])), ((y_prenodeone_13_w[30] & (~ indexbitff[12])) | (y_prenodetwo_13_w[30] & indexbitff[12])), ((y_prenodeone_13_w[29] & (~ indexbitff[12])) | (y_prenodetwo_13_w[29] & indexbitff[12])), ((y_prenodeone_13_w[28] & (~ indexbitff[12])) | (y_prenodetwo_13_w[28] & indexbitff[12])), ((y_prenodeone_13_w[27] & (~ indexbitff[12])) | (y_prenodetwo_13_w[27] & indexbitff[12])), ((y_prenodeone_13_w[26] & (~ indexbitff[12])) | (y_prenodetwo_13_w[26] & indexbitff[12])), ((y_prenodeone_13_w[25] & (~ indexbitff[12])) | (y_prenodetwo_13_w[25] & indexbitff[12])), ((y_prenodeone_13_w[24] & (~ indexbitff[12])) | (y_prenodetwo_13_w[24] & indexbitff[12])), ((y_prenodeone_13_w[23] & (~ indexbitff[12])) | (y_prenodetwo_13_w[23] & indexbitff[12])), ((y_prenodeone_13_w[22] & (~ indexbitff[12])) | (y_prenodetwo_13_w[22] & indexbitff[12])), ((y_prenodeone_13_w[21] & (~ indexbitff[12])) | (y_prenodetwo_13_w[21] & indexbitff[12])), ((y_prenodeone_13_w[20] & (~ indexbitff[12])) | (y_prenodetwo_13_w[20] & indexbitff[12])), ((y_prenodeone_13_w[19] & (~ indexbitff[12])) | (y_prenodetwo_13_w[19] & indexbitff[12])), ((y_prenodeone_13_w[18] & (~ indexbitff[12])) | (y_prenodetwo_13_w[18] & indexbitff[12])), ((y_prenodeone_13_w[17] & (~ indexbitff[12])) | (y_prenodetwo_13_w[17] & indexbitff[12])), ((y_prenodeone_13_w[16] & (~ indexbitff[12])) | (y_prenodetwo_13_w[16] & indexbitff[12])), ((y_prenodeone_13_w[15] & (~ indexbitff[12])) | (y_prenodetwo_13_w[15] & indexbitff[12])), ((y_prenodeone_13_w[14] & (~ indexbitff[12])) | (y_prenodetwo_13_w[14] & indexbitff[12])), ((y_prenodeone_13_w[13] & (~ indexbitff[12])) | (y_prenodetwo_13_w[13] & indexbitff[12])), ((y_prenodeone_13_w[12] & (~ indexbitff[12])) | (y_prenodetwo_13_w[12] & indexbitff[12])), ((y_prenodeone_13_w[11] & 
(~ indexbitff[12])) | (y_prenodetwo_13_w[11] & indexbitff[12])), ((y_prenodeone_13_w[10] & (~ indexbitff[12])) | (y_prenodetwo_13_w[10] & indexbitff[12])), ((y_prenodeone_13_w[9] & (~ indexbitff[12])) | (y_prenodetwo_13_w[9] & indexbitff[12])), ((y_prenodeone_13_w[8] & (~ indexbitff[12])) | (y_prenodetwo_13_w[8] & indexbitff[12])), ((y_prenodeone_13_w[7] & (~ indexbitff[12])) | (y_prenodetwo_13_w[7] & indexbitff[12])), ((y_prenodeone_13_w[6] & (~ indexbitff[12])) | (y_prenodetwo_13_w[6] & indexbitff[12])), ((y_prenodeone_13_w[5] & (~ indexbitff[12])) | (y_prenodetwo_13_w[5] & indexbitff[12])), ((y_prenodeone_13_w[4] & (~ indexbitff[12])) | (y_prenodetwo_13_w[4] & indexbitff[12])), ((y_prenodeone_13_w[3] & (~ indexbitff[12])) | (y_prenodetwo_13_w[3] & indexbitff[12])), ((y_prenodeone_13_w[2] & (~ indexbitff[12])) | (y_prenodetwo_13_w[2] & indexbitff[12])), ((y_prenodeone_13_w[1] & (~ indexbitff[12])) | (y_prenodetwo_13_w[1] & indexbitff[12])), ((y_prenodeone_13_w[0] & (~ indexbitff[12])) | (y_prenodetwo_13_w[0] & indexbitff[12]))},
		y_prenode_2_w = {((y_prenodeone_2_w[33] & (~ indexbitff[1])) | (y_prenodetwo_2_w[33] & indexbitff[1])), ((y_prenodeone_2_w[32] & (~ indexbitff[1])) | (y_prenodetwo_2_w[32] & indexbitff[1])), ((y_prenodeone_2_w[31] & (~ indexbitff[1])) | (y_prenodetwo_2_w[31] & indexbitff[1])), ((y_prenodeone_2_w[30] & (~ indexbitff[1])) | (y_prenodetwo_2_w[30] & indexbitff[1])), ((y_prenodeone_2_w[29] & (~ indexbitff[1])) | (y_prenodetwo_2_w[29] & indexbitff[1])), ((y_prenodeone_2_w[28] & (~ indexbitff[1])) | (y_prenodetwo_2_w[28] & indexbitff[1])), ((y_prenodeone_2_w[27] & (~ indexbitff[1])) | (y_prenodetwo_2_w[27] & indexbitff[1])), ((y_prenodeone_2_w[26] & (~ indexbitff[1])) | (y_prenodetwo_2_w[26] & indexbitff[1])), ((y_prenodeone_2_w[25] & (~ indexbitff[1])) | (y_prenodetwo_2_w[25] & indexbitff[1])), ((y_prenodeone_2_w[24] & (~ indexbitff[1])) | (y_prenodetwo_2_w[24] & indexbitff[1])), ((y_prenodeone_2_w[23] & (~ indexbitff[1])) | (y_prenodetwo_2_w[23] & indexbitff[1])), ((y_prenodeone_2_w[22] & (~ indexbitff[1])) | (y_prenodetwo_2_w[22] & indexbitff[1])), ((y_prenodeone_2_w[21] & (~ indexbitff[1])) | (y_prenodetwo_2_w[21] & indexbitff[1])), ((y_prenodeone_2_w[20] & (~ indexbitff[1])) | (y_prenodetwo_2_w[20] & indexbitff[1])), ((y_prenodeone_2_w[19] & (~ indexbitff[1])) | (y_prenodetwo_2_w[19] & indexbitff[1])), ((y_prenodeone_2_w[18] & (~ indexbitff[1])) | (y_prenodetwo_2_w[18] & indexbitff[1])), ((y_prenodeone_2_w[17] & (~ indexbitff[1])) | (y_prenodetwo_2_w[17] & indexbitff[1])), ((y_prenodeone_2_w[16] & (~ indexbitff[1])) | (y_prenodetwo_2_w[16] & indexbitff[1])), ((y_prenodeone_2_w[15] & (~ indexbitff[1])) | (y_prenodetwo_2_w[15] & indexbitff[1])), ((y_prenodeone_2_w[14] & (~ indexbitff[1])) | (y_prenodetwo_2_w[14] & indexbitff[1])), ((y_prenodeone_2_w[13] & (~ indexbitff[1])) | (y_prenodetwo_2_w[13] & indexbitff[1])), ((y_prenodeone_2_w[12] & (~ indexbitff[1])) | (y_prenodetwo_2_w[12] & indexbitff[1])), ((y_prenodeone_2_w[11] & (~ indexbitff[1])) | (y_prenodetwo_2_w[11] & indexbitff[1])), ((y_prenodeone_2_w[10] & (~ indexbitff[1]
)) | (y_prenodetwo_2_w[10] & indexbitff[1])), ((y_prenodeone_2_w[9] & (~ indexbitff[1])) | (y_prenodetwo_2_w[9] & indexbitff[1])), ((y_prenodeone_2_w[8] & (~ indexbitff[1])) | (y_prenodetwo_2_w[8] & indexbitff[1])), ((y_prenodeone_2_w[7] & (~ indexbitff[1])) | (y_prenodetwo_2_w[7] & indexbitff[1])), ((y_prenodeone_2_w[6] & (~ indexbitff[1])) | (y_prenodetwo_2_w[6] & indexbitff[1])), ((y_prenodeone_2_w[5] & (~ indexbitff[1])) | (y_prenodetwo_2_w[5] & indexbitff[1])), ((y_prenodeone_2_w[4] & (~ indexbitff[1])) | (y_prenodetwo_2_w[4] & indexbitff[1])), ((y_prenodeone_2_w[3] & (~ indexbitff[1])) | (y_prenodetwo_2_w[3] & indexbitff[1])), ((y_prenodeone_2_w[2] & (~ indexbitff[1])) | (y_prenodetwo_2_w[2] & indexbitff[1])), ((y_prenodeone_2_w[1] & (~ indexbitff[1])) | (y_prenodetwo_2_w[1] & indexbitff[1])), ((y_prenodeone_2_w[0] & (~ indexbitff[1])) | (y_prenodetwo_2_w[0] & indexbitff[1]))},
		y_prenode_3_w = {((y_prenodeone_3_w[33] & (~ indexbitff[2])) | (y_prenodetwo_3_w[33] & indexbitff[2])), ((y_prenodeone_3_w[32] & (~ indexbitff[2])) | (y_prenodetwo_3_w[32] & indexbitff[2])), ((y_prenodeone_3_w[31] & (~ indexbitff[2])) | (y_prenodetwo_3_w[31] & indexbitff[2])), ((y_prenodeone_3_w[30] & (~ indexbitff[2])) | (y_prenodetwo_3_w[30] & indexbitff[2])), ((y_prenodeone_3_w[29] & (~ indexbitff[2])) | (y_prenodetwo_3_w[29] & indexbitff[2])), ((y_prenodeone_3_w[28] & (~ indexbitff[2])) | (y_prenodetwo_3_w[28] & indexbitff[2])), ((y_prenodeone_3_w[27] & (~ indexbitff[2])) | (y_prenodetwo_3_w[27] & indexbitff[2])), ((y_prenodeone_3_w[26] & (~ indexbitff[2])) | (y_prenodetwo_3_w[26] & indexbitff[2])), ((y_prenodeone_3_w[25] & (~ indexbitff[2])) | (y_prenodetwo_3_w[25] & indexbitff[2])), ((y_prenodeone_3_w[24] & (~ indexbitff[2])) | (y_prenodetwo_3_w[24] & indexbitff[2])), ((y_prenodeone_3_w[23] & (~ indexbitff[2])) | (y_prenodetwo_3_w[23] & indexbitff[2])), ((y_prenodeone_3_w[22] & (~ indexbitff[2])) | (y_prenodetwo_3_w[22] & indexbitff[2])), ((y_prenodeone_3_w[21] & (~ indexbitff[2])) | (y_prenodetwo_3_w[21] & indexbitff[2])), ((y_prenodeone_3_w[20] & (~ indexbitff[2])) | (y_prenodetwo_3_w[20] & indexbitff[2])), ((y_prenodeone_3_w[19] & (~ indexbitff[2])) | (y_prenodetwo_3_w[19] & indexbitff[2])), ((y_prenodeone_3_w[18] & (~ indexbitff[2])) | (y_prenodetwo_3_w[18] & indexbitff[2])), ((y_prenodeone_3_w[17] & (~ indexbitff[2])) | (y_prenodetwo_3_w[17] & indexbitff[2])), ((y_prenodeone_3_w[16] & (~ indexbitff[2])) | (y_prenodetwo_3_w[16] & indexbitff[2])), ((y_prenodeone_3_w[15] & (~ indexbitff[2])) | (y_prenodetwo_3_w[15] & indexbitff[2])), ((y_prenodeone_3_w[14] & (~ indexbitff[2])) | (y_prenodetwo_3_w[14] & indexbitff[2])), ((y_prenodeone_3_w[13] & (~ indexbitff[2])) | (y_prenodetwo_3_w[13] & indexbitff[2])), ((y_prenodeone_3_w[12] & (~ indexbitff[2])) | (y_prenodetwo_3_w[12] & indexbitff[2])), ((y_prenodeone_3_w[11] & (~ indexbitff[2])) | (y_prenodetwo_3_w[11] & indexbitff[2])), ((y_prenodeone_3_w[10] & (~ indexbitff[2]
)) | (y_prenodetwo_3_w[10] & indexbitff[2])), ((y_prenodeone_3_w[9] & (~ indexbitff[2])) | (y_prenodetwo_3_w[9] & indexbitff[2])), ((y_prenodeone_3_w[8] & (~ indexbitff[2])) | (y_prenodetwo_3_w[8] & indexbitff[2])), ((y_prenodeone_3_w[7] & (~ indexbitff[2])) | (y_prenodetwo_3_w[7] & indexbitff[2])), ((y_prenodeone_3_w[6] & (~ indexbitff[2])) | (y_prenodetwo_3_w[6] & indexbitff[2])), ((y_prenodeone_3_w[5] & (~ indexbitff[2])) | (y_prenodetwo_3_w[5] & indexbitff[2])), ((y_prenodeone_3_w[4] & (~ indexbitff[2])) | (y_prenodetwo_3_w[4] & indexbitff[2])), ((y_prenodeone_3_w[3] & (~ indexbitff[2])) | (y_prenodetwo_3_w[3] & indexbitff[2])), ((y_prenodeone_3_w[2] & (~ indexbitff[2])) | (y_prenodetwo_3_w[2] & indexbitff[2])), ((y_prenodeone_3_w[1] & (~ indexbitff[2])) | (y_prenodetwo_3_w[1] & indexbitff[2])), ((y_prenodeone_3_w[0] & (~ indexbitff[2])) | (y_prenodetwo_3_w[0] & indexbitff[2]))},
		y_prenode_4_w = {((y_prenodeone_4_w[33] & (~ indexbitff[3])) | (y_prenodetwo_4_w[33] & indexbitff[3])), ((y_prenodeone_4_w[32] & (~ indexbitff[3])) | (y_prenodetwo_4_w[32] & indexbitff[3])), ((y_prenodeone_4_w[31] & (~ indexbitff[3])) | (y_prenodetwo_4_w[31] & indexbitff[3])), ((y_prenodeone_4_w[30] & (~ indexbitff[3])) | (y_prenodetwo_4_w[30] & indexbitff[3])), ((y_prenodeone_4_w[29] & (~ indexbitff[3])) | (y_prenodetwo_4_w[29] & indexbitff[3])), ((y_prenodeone_4_w[28] & (~ indexbitff[3])) | (y_prenodetwo_4_w[28] & indexbitff[3])), ((y_prenodeone_4_w[27] & (~ indexbitff[3])) | (y_prenodetwo_4_w[27] & indexbitff[3])), ((y_prenodeone_4_w[26] & (~ indexbitff[3])) | (y_prenodetwo_4_w[26] & indexbitff[3])), ((y_prenodeone_4_w[25] & (~ indexbitff[3])) | (y_prenodetwo_4_w[25] & indexbitff[3])), ((y_prenodeone_4_w[24] & (~ indexbitff[3])) | (y_prenodetwo_4_w[24] & indexbitff[3])), ((y_prenodeone_4_w[23] & (~ indexbitff[3])) | (y_prenodetwo_4_w[23] & indexbitff[3])), ((y_prenodeone_4_w[22] & (~ indexbitff[3])) | (y_prenodetwo_4_w[22] & indexbitff[3])), ((y_prenodeone_4_w[21] & (~ indexbitff[3])) | (y_prenodetwo_4_w[21] & indexbitff[3])), ((y_prenodeone_4_w[20] & (~ indexbitff[3])) | (y_prenodetwo_4_w[20] & indexbitff[3])), ((y_prenodeone_4_w[19] & (~ indexbitff[3])) | (y_prenodetwo_4_w[19] & indexbitff[3])), ((y_prenodeone_4_w[18] & (~ indexbitff[3])) | (y_prenodetwo_4_w[18] & indexbitff[3])), ((y_prenodeone_4_w[17] & (~ indexbitff[3])) | (y_prenodetwo_4_w[17] & indexbitff[3])), ((y_prenodeone_4_w[16] & (~ indexbitff[3])) | (y_prenodetwo_4_w[16] & indexbitff[3])), ((y_prenodeone_4_w[15] & (~ indexbitff[3])) | (y_prenodetwo_4_w[15] & indexbitff[3])), ((y_prenodeone_4_w[14] & (~ indexbitff[3])) | (y_prenodetwo_4_w[14] & indexbitff[3])), ((y_prenodeone_4_w[13] & (~ indexbitff[3])) | (y_prenodetwo_4_w[13] & indexbitff[3])), ((y_prenodeone_4_w[12] & (~ indexbitff[3])) | (y_prenodetwo_4_w[12] & indexbitff[3])), ((y_prenodeone_4_w[11] & (~ indexbitff[3])) | (y_prenodetwo_4_w[11] & indexbitff[3])), ((y_prenodeone_4_w[10] & (~ indexbitff[3]
)) | (y_prenodetwo_4_w[10] & indexbitff[3])), ((y_prenodeone_4_w[9] & (~ indexbitff[3])) | (y_prenodetwo_4_w[9] & indexbitff[3])), ((y_prenodeone_4_w[8] & (~ indexbitff[3])) | (y_prenodetwo_4_w[8] & indexbitff[3])), ((y_prenodeone_4_w[7] & (~ indexbitff[3])) | (y_prenodetwo_4_w[7] & indexbitff[3])), ((y_prenodeone_4_w[6] & (~ indexbitff[3])) | (y_prenodetwo_4_w[6] & indexbitff[3])), ((y_prenodeone_4_w[5] & (~ indexbitff[3])) | (y_prenodetwo_4_w[5] & indexbitff[3])), ((y_prenodeone_4_w[4] & (~ indexbitff[3])) | (y_prenodetwo_4_w[4] & indexbitff[3])), ((y_prenodeone_4_w[3] & (~ indexbitff[3])) | (y_prenodetwo_4_w[3] & indexbitff[3])), ((y_prenodeone_4_w[2] & (~ indexbitff[3])) | (y_prenodetwo_4_w[2] & indexbitff[3])), ((y_prenodeone_4_w[1] & (~ indexbitff[3])) | (y_prenodetwo_4_w[1] & indexbitff[3])), ((y_prenodeone_4_w[0] & (~ indexbitff[3])) | (y_prenodetwo_4_w[0] & indexbitff[3]))},
		y_prenode_5_w = {((y_prenodeone_5_w[33] & (~ indexbitff[4])) | (y_prenodetwo_5_w[33] & indexbitff[4])), ((y_prenodeone_5_w[32] & (~ indexbitff[4])) | (y_prenodetwo_5_w[32] & indexbitff[4])), ((y_prenodeone_5_w[31] & (~ indexbitff[4])) | (y_prenodetwo_5_w[31] & indexbitff[4])), ((y_prenodeone_5_w[30] & (~ indexbitff[4])) | (y_prenodetwo_5_w[30] & indexbitff[4])), ((y_prenodeone_5_w[29] & (~ indexbitff[4])) | (y_prenodetwo_5_w[29] & indexbitff[4])), ((y_prenodeone_5_w[28] & (~ indexbitff[4])) | (y_prenodetwo_5_w[28] & indexbitff[4])), ((y_prenodeone_5_w[27] & (~ indexbitff[4])) | (y_prenodetwo_5_w[27] & indexbitff[4])), ((y_prenodeone_5_w[26] & (~ indexbitff[4])) | (y_prenodetwo_5_w[26] & indexbitff[4])), ((y_prenodeone_5_w[25] & (~ indexbitff[4])) | (y_prenodetwo_5_w[25] & indexbitff[4])), ((y_prenodeone_5_w[24] & (~ indexbitff[4])) | (y_prenodetwo_5_w[24] & indexbitff[4])), ((y_prenodeone_5_w[23] & (~ indexbitff[4])) | (y_prenodetwo_5_w[23] & indexbitff[4])), ((y_prenodeone_5_w[22] & (~ indexbitff[4])) | (y_prenodetwo_5_w[22] & indexbitff[4])), ((y_prenodeone_5_w[21] & (~ indexbitff[4])) | (y_prenodetwo_5_w[21] & indexbitff[4])), ((y_prenodeone_5_w[20] & (~ indexbitff[4])) | (y_prenodetwo_5_w[20] & indexbitff[4])), ((y_prenodeone_5_w[19] & (~ indexbitff[4])) | (y_prenodetwo_5_w[19] & indexbitff[4])), ((y_prenodeone_5_w[18] & (~ indexbitff[4])) | (y_prenodetwo_5_w[18] & indexbitff[4])), ((y_prenodeone_5_w[17] & (~ indexbitff[4])) | (y_prenodetwo_5_w[17] & indexbitff[4])), ((y_prenodeone_5_w[16] & (~ indexbitff[4])) | (y_prenodetwo_5_w[16] & indexbitff[4])), ((y_prenodeone_5_w[15] & (~ indexbitff[4])) | (y_prenodetwo_5_w[15] & indexbitff[4])), ((y_prenodeone_5_w[14] & (~ indexbitff[4])) | (y_prenodetwo_5_w[14] & indexbitff[4])), ((y_prenodeone_5_w[13] & (~ indexbitff[4])) | (y_prenodetwo_5_w[13] & indexbitff[4])), ((y_prenodeone_5_w[12] & (~ indexbitff[4])) | (y_prenodetwo_5_w[12] & indexbitff[4])), ((y_prenodeone_5_w[11] & (~ indexbitff[4])) | (y_prenodetwo_5_w[11] & indexbitff[4])), ((y_prenodeone_5_w[10] & (~ indexbitff[4]
)) | (y_prenodetwo_5_w[10] & indexbitff[4])), ((y_prenodeone_5_w[9] & (~ indexbitff[4])) | (y_prenodetwo_5_w[9] & indexbitff[4])), ((y_prenodeone_5_w[8] & (~ indexbitff[4])) | (y_prenodetwo_5_w[8] & indexbitff[4])), ((y_prenodeone_5_w[7] & (~ indexbitff[4])) | (y_prenodetwo_5_w[7] & indexbitff[4])), ((y_prenodeone_5_w[6] & (~ indexbitff[4])) | (y_prenodetwo_5_w[6] & indexbitff[4])), ((y_prenodeone_5_w[5] & (~ indexbitff[4])) | (y_prenodetwo_5_w[5] & indexbitff[4])), ((y_prenodeone_5_w[4] & (~ indexbitff[4])) | (y_prenodetwo_5_w[4] & indexbitff[4])), ((y_prenodeone_5_w[3] & (~ indexbitff[4])) | (y_prenodetwo_5_w[3] & indexbitff[4])), ((y_prenodeone_5_w[2] & (~ indexbitff[4])) | (y_prenodetwo_5_w[2] & indexbitff[4])), ((y_prenodeone_5_w[1] & (~ indexbitff[4])) | (y_prenodetwo_5_w[1] & indexbitff[4])), ((y_prenodeone_5_w[0] & (~ indexbitff[4])) | (y_prenodetwo_5_w[0] & indexbitff[4]))},
		y_prenode_6_w = {((y_prenodeone_6_w[33] & (~ indexbitff[5])) | (y_prenodetwo_6_w[33] & indexbitff[5])), ((y_prenodeone_6_w[32] & (~ indexbitff[5])) | (y_prenodetwo_6_w[32] & indexbitff[5])), ((y_prenodeone_6_w[31] & (~ indexbitff[5])) | (y_prenodetwo_6_w[31] & indexbitff[5])), ((y_prenodeone_6_w[30] & (~ indexbitff[5])) | (y_prenodetwo_6_w[30] & indexbitff[5])), ((y_prenodeone_6_w[29] & (~ indexbitff[5])) | (y_prenodetwo_6_w[29] & indexbitff[5])), ((y_prenodeone_6_w[28] & (~ indexbitff[5])) | (y_prenodetwo_6_w[28] & indexbitff[5])), ((y_prenodeone_6_w[27] & (~ indexbitff[5])) | (y_prenodetwo_6_w[27] & indexbitff[5])), ((y_prenodeone_6_w[26] & (~ indexbitff[5])) | (y_prenodetwo_6_w[26] & indexbitff[5])), ((y_prenodeone_6_w[25] & (~ indexbitff[5])) | (y_prenodetwo_6_w[25] & indexbitff[5])), ((y_prenodeone_6_w[24] & (~ indexbitff[5])) | (y_prenodetwo_6_w[24] & indexbitff[5])), ((y_prenodeone_6_w[23] & (~ indexbitff[5])) | (y_prenodetwo_6_w[23] & indexbitff[5])), ((y_prenodeone_6_w[22] & (~ indexbitff[5])) | (y_prenodetwo_6_w[22] & indexbitff[5])), ((y_prenodeone_6_w[21] & (~ indexbitff[5])) | (y_prenodetwo_6_w[21] & indexbitff[5])), ((y_prenodeone_6_w[20] & (~ indexbitff[5])) | (y_prenodetwo_6_w[20] & indexbitff[5])), ((y_prenodeone_6_w[19] & (~ indexbitff[5])) | (y_prenodetwo_6_w[19] & indexbitff[5])), ((y_prenodeone_6_w[18] & (~ indexbitff[5])) | (y_prenodetwo_6_w[18] & indexbitff[5])), ((y_prenodeone_6_w[17] & (~ indexbitff[5])) | (y_prenodetwo_6_w[17] & indexbitff[5])), ((y_prenodeone_6_w[16] & (~ indexbitff[5])) | (y_prenodetwo_6_w[16] & indexbitff[5])), ((y_prenodeone_6_w[15] & (~ indexbitff[5])) | (y_prenodetwo_6_w[15] & indexbitff[5])), ((y_prenodeone_6_w[14] & (~ indexbitff[5])) | (y_prenodetwo_6_w[14] & indexbitff[5])), ((y_prenodeone_6_w[13] & (~ indexbitff[5])) | (y_prenodetwo_6_w[13] & indexbitff[5])), ((y_prenodeone_6_w[12] & (~ indexbitff[5])) | (y_prenodetwo_6_w[12] & indexbitff[5])), ((y_prenodeone_6_w[11] & (~ indexbitff[5])) | (y_prenodetwo_6_w[11] & indexbitff[5])), ((y_prenodeone_6_w[10] & (~ indexbitff[5]
)) | (y_prenodetwo_6_w[10] & indexbitff[5])), ((y_prenodeone_6_w[9] & (~ indexbitff[5])) | (y_prenodetwo_6_w[9] & indexbitff[5])), ((y_prenodeone_6_w[8] & (~ indexbitff[5])) | (y_prenodetwo_6_w[8] & indexbitff[5])), ((y_prenodeone_6_w[7] & (~ indexbitff[5])) | (y_prenodetwo_6_w[7] & indexbitff[5])), ((y_prenodeone_6_w[6] & (~ indexbitff[5])) | (y_prenodetwo_6_w[6] & indexbitff[5])), ((y_prenodeone_6_w[5] & (~ indexbitff[5])) | (y_prenodetwo_6_w[5] & indexbitff[5])), ((y_prenodeone_6_w[4] & (~ indexbitff[5])) | (y_prenodetwo_6_w[4] & indexbitff[5])), ((y_prenodeone_6_w[3] & (~ indexbitff[5])) | (y_prenodetwo_6_w[3] & indexbitff[5])), ((y_prenodeone_6_w[2] & (~ indexbitff[5])) | (y_prenodetwo_6_w[2] & indexbitff[5])), ((y_prenodeone_6_w[1] & (~ indexbitff[5])) | (y_prenodetwo_6_w[1] & indexbitff[5])), ((y_prenodeone_6_w[0] & (~ indexbitff[5])) | (y_prenodetwo_6_w[0] & indexbitff[5]))},
		y_prenode_7_w = {((y_prenodeone_7_w[33] & (~ indexbitff[6])) | (y_prenodetwo_7_w[33] & indexbitff[6])), ((y_prenodeone_7_w[32] & (~ indexbitff[6])) | (y_prenodetwo_7_w[32] & indexbitff[6])), ((y_prenodeone_7_w[31] & (~ indexbitff[6])) | (y_prenodetwo_7_w[31] & indexbitff[6])), ((y_prenodeone_7_w[30] & (~ indexbitff[6])) | (y_prenodetwo_7_w[30] & indexbitff[6])), ((y_prenodeone_7_w[29] & (~ indexbitff[6])) | (y_prenodetwo_7_w[29] & indexbitff[6])), ((y_prenodeone_7_w[28] & (~ indexbitff[6])) | (y_prenodetwo_7_w[28] & indexbitff[6])), ((y_prenodeone_7_w[27] & (~ indexbitff[6])) | (y_prenodetwo_7_w[27] & indexbitff[6])), ((y_prenodeone_7_w[26] & (~ indexbitff[6])) | (y_prenodetwo_7_w[26] & indexbitff[6])), ((y_prenodeone_7_w[25] & (~ indexbitff[6])) | (y_prenodetwo_7_w[25] & indexbitff[6])), ((y_prenodeone_7_w[24] & (~ indexbitff[6])) | (y_prenodetwo_7_w[24] & indexbitff[6])), ((y_prenodeone_7_w[23] & (~ indexbitff[6])) | (y_prenodetwo_7_w[23] & indexbitff[6])), ((y_prenodeone_7_w[22] & (~ indexbitff[6])) | (y_prenodetwo_7_w[22] & indexbitff[6])), ((y_prenodeone_7_w[21] & (~ indexbitff[6])) | (y_prenodetwo_7_w[21] & indexbitff[6])), ((y_prenodeone_7_w[20] & (~ indexbitff[6])) | (y_prenodetwo_7_w[20] & indexbitff[6])), ((y_prenodeone_7_w[19] & (~ indexbitff[6])) | (y_prenodetwo_7_w[19] & indexbitff[6])), ((y_prenodeone_7_w[18] & (~ indexbitff[6])) | (y_prenodetwo_7_w[18] & indexbitff[6])), ((y_prenodeone_7_w[17] & (~ indexbitff[6])) | (y_prenodetwo_7_w[17] & indexbitff[6])), ((y_prenodeone_7_w[16] & (~ indexbitff[6])) | (y_prenodetwo_7_w[16] & indexbitff[6])), ((y_prenodeone_7_w[15] & (~ indexbitff[6])) | (y_prenodetwo_7_w[15] & indexbitff[6])), ((y_prenodeone_7_w[14] & (~ indexbitff[6])) | (y_prenodetwo_7_w[14] & indexbitff[6])), ((y_prenodeone_7_w[13] & (~ indexbitff[6])) | (y_prenodetwo_7_w[13] & indexbitff[6])), ((y_prenodeone_7_w[12] & (~ indexbitff[6])) | (y_prenodetwo_7_w[12] & indexbitff[6])), ((y_prenodeone_7_w[11] & (~ indexbitff[6])) | (y_prenodetwo_7_w[11] & indexbitff[6])), ((y_prenodeone_7_w[10] & (~ indexbitff[6]
)) | (y_prenodetwo_7_w[10] & indexbitff[6])), ((y_prenodeone_7_w[9] & (~ indexbitff[6])) | (y_prenodetwo_7_w[9] & indexbitff[6])), ((y_prenodeone_7_w[8] & (~ indexbitff[6])) | (y_prenodetwo_7_w[8] & indexbitff[6])), ((y_prenodeone_7_w[7] & (~ indexbitff[6])) | (y_prenodetwo_7_w[7] & indexbitff[6])), ((y_prenodeone_7_w[6] & (~ indexbitff[6])) | (y_prenodetwo_7_w[6] & indexbitff[6])), ((y_prenodeone_7_w[5] & (~ indexbitff[6])) | (y_prenodetwo_7_w[5] & indexbitff[6])), ((y_prenodeone_7_w[4] & (~ indexbitff[6])) | (y_prenodetwo_7_w[4] & indexbitff[6])), ((y_prenodeone_7_w[3] & (~ indexbitff[6])) | (y_prenodetwo_7_w[3] & indexbitff[6])), ((y_prenodeone_7_w[2] & (~ indexbitff[6])) | (y_prenodetwo_7_w[2] & indexbitff[6])), ((y_prenodeone_7_w[1] & (~ indexbitff[6])) | (y_prenodetwo_7_w[1] & indexbitff[6])), ((y_prenodeone_7_w[0] & (~ indexbitff[6])) | (y_prenodetwo_7_w[0] & indexbitff[6]))},
		y_prenode_8_w = {((y_prenodeone_8_w[33] & (~ indexbitff[7])) | (y_prenodetwo_8_w[33] & indexbitff[7])), ((y_prenodeone_8_w[32] & (~ indexbitff[7])) | (y_prenodetwo_8_w[32] & indexbitff[7])), ((y_prenodeone_8_w[31] & (~ indexbitff[7])) | (y_prenodetwo_8_w[31] & indexbitff[7])), ((y_prenodeone_8_w[30] & (~ indexbitff[7])) | (y_prenodetwo_8_w[30] & indexbitff[7])), ((y_prenodeone_8_w[29] & (~ indexbitff[7])) | (y_prenodetwo_8_w[29] & indexbitff[7])), ((y_prenodeone_8_w[28] & (~ indexbitff[7])) | (y_prenodetwo_8_w[28] & indexbitff[7])), ((y_prenodeone_8_w[27] & (~ indexbitff[7])) | (y_prenodetwo_8_w[27] & indexbitff[7])), ((y_prenodeone_8_w[26] & (~ indexbitff[7])) | (y_prenodetwo_8_w[26] & indexbitff[7])), ((y_prenodeone_8_w[25] & (~ indexbitff[7])) | (y_prenodetwo_8_w[25] & indexbitff[7])), ((y_prenodeone_8_w[24] & (~ indexbitff[7])) | (y_prenodetwo_8_w[24] & indexbitff[7])), ((y_prenodeone_8_w[23] & (~ indexbitff[7])) | (y_prenodetwo_8_w[23] & indexbitff[7])), ((y_prenodeone_8_w[22] & (~ indexbitff[7])) | (y_prenodetwo_8_w[22] & indexbitff[7])), ((y_prenodeone_8_w[21] & (~ indexbitff[7])) | (y_prenodetwo_8_w[21] & indexbitff[7])), ((y_prenodeone_8_w[20] & (~ indexbitff[7])) | (y_prenodetwo_8_w[20] & indexbitff[7])), ((y_prenodeone_8_w[19] & (~ indexbitff[7])) | (y_prenodetwo_8_w[19] & indexbitff[7])), ((y_prenodeone_8_w[18] & (~ indexbitff[7])) | (y_prenodetwo_8_w[18] & indexbitff[7])), ((y_prenodeone_8_w[17] & (~ indexbitff[7])) | (y_prenodetwo_8_w[17] & indexbitff[7])), ((y_prenodeone_8_w[16] & (~ indexbitff[7])) | (y_prenodetwo_8_w[16] & indexbitff[7])), ((y_prenodeone_8_w[15] & (~ indexbitff[7])) | (y_prenodetwo_8_w[15] & indexbitff[7])), ((y_prenodeone_8_w[14] & (~ indexbitff[7])) | (y_prenodetwo_8_w[14] & indexbitff[7])), ((y_prenodeone_8_w[13] & (~ indexbitff[7])) | (y_prenodetwo_8_w[13] & indexbitff[7])), ((y_prenodeone_8_w[12] & (~ indexbitff[7])) | (y_prenodetwo_8_w[12] & indexbitff[7])), ((y_prenodeone_8_w[11] & (~ indexbitff[7])) | (y_prenodetwo_8_w[11] & indexbitff[7])), ((y_prenodeone_8_w[10] & (~ indexbitff[7]
)) | (y_prenodetwo_8_w[10] & indexbitff[7])), ((y_prenodeone_8_w[9] & (~ indexbitff[7])) | (y_prenodetwo_8_w[9] & indexbitff[7])), ((y_prenodeone_8_w[8] & (~ indexbitff[7])) | (y_prenodetwo_8_w[8] & indexbitff[7])), ((y_prenodeone_8_w[7] & (~ indexbitff[7])) | (y_prenodetwo_8_w[7] & indexbitff[7])), ((y_prenodeone_8_w[6] & (~ indexbitff[7])) | (y_prenodetwo_8_w[6] & indexbitff[7])), ((y_prenodeone_8_w[5] & (~ indexbitff[7])) | (y_prenodetwo_8_w[5] & indexbitff[7])), ((y_prenodeone_8_w[4] & (~ indexbitff[7])) | (y_prenodetwo_8_w[4] & indexbitff[7])), ((y_prenodeone_8_w[3] & (~ indexbitff[7])) | (y_prenodetwo_8_w[3] & indexbitff[7])), ((y_prenodeone_8_w[2] & (~ indexbitff[7])) | (y_prenodetwo_8_w[2] & indexbitff[7])), ((y_prenodeone_8_w[1] & (~ indexbitff[7])) | (y_prenodetwo_8_w[1] & indexbitff[7])), ((y_prenodeone_8_w[0] & (~ indexbitff[7])) | (y_prenodetwo_8_w[0] & indexbitff[7]))},
		y_prenode_9_w = {((y_prenodeone_9_w[33] & (~ indexbitff[8])) | (y_prenodetwo_9_w[33] & indexbitff[8])), ((y_prenodeone_9_w[32] & (~ indexbitff[8])) | (y_prenodetwo_9_w[32] & indexbitff[8])), ((y_prenodeone_9_w[31] & (~ indexbitff[8])) | (y_prenodetwo_9_w[31] & indexbitff[8])), ((y_prenodeone_9_w[30] & (~ indexbitff[8])) | (y_prenodetwo_9_w[30] & indexbitff[8])), ((y_prenodeone_9_w[29] & (~ indexbitff[8])) | (y_prenodetwo_9_w[29] & indexbitff[8])), ((y_prenodeone_9_w[28] & (~ indexbitff[8])) | (y_prenodetwo_9_w[28] & indexbitff[8])), ((y_prenodeone_9_w[27] & (~ indexbitff[8])) | (y_prenodetwo_9_w[27] & indexbitff[8])), ((y_prenodeone_9_w[26] & (~ indexbitff[8])) | (y_prenodetwo_9_w[26] & indexbitff[8])), ((y_prenodeone_9_w[25] & (~ indexbitff[8])) | (y_prenodetwo_9_w[25] & indexbitff[8])), ((y_prenodeone_9_w[24] & (~ indexbitff[8])) | (y_prenodetwo_9_w[24] & indexbitff[8])), ((y_prenodeone_9_w[23] & (~ indexbitff[8])) | (y_prenodetwo_9_w[23] & indexbitff[8])), ((y_prenodeone_9_w[22] & (~ indexbitff[8])) | (y_prenodetwo_9_w[22] & indexbitff[8])), ((y_prenodeone_9_w[21] & (~ indexbitff[8])) | (y_prenodetwo_9_w[21] & indexbitff[8])), ((y_prenodeone_9_w[20] & (~ indexbitff[8])) | (y_prenodetwo_9_w[20] & indexbitff[8])), ((y_prenodeone_9_w[19] & (~ indexbitff[8])) | (y_prenodetwo_9_w[19] & indexbitff[8])), ((y_prenodeone_9_w[18] & (~ indexbitff[8])) | (y_prenodetwo_9_w[18] & indexbitff[8])), ((y_prenodeone_9_w[17] & (~ indexbitff[8])) | (y_prenodetwo_9_w[17] & indexbitff[8])), ((y_prenodeone_9_w[16] & (~ indexbitff[8])) | (y_prenodetwo_9_w[16] & indexbitff[8])), ((y_prenodeone_9_w[15] & (~ indexbitff[8])) | (y_prenodetwo_9_w[15] & indexbitff[8])), ((y_prenodeone_9_w[14] & (~ indexbitff[8])) | (y_prenodetwo_9_w[14] & indexbitff[8])), ((y_prenodeone_9_w[13] & (~ indexbitff[8])) | (y_prenodetwo_9_w[13] & indexbitff[8])), ((y_prenodeone_9_w[12] & (~ indexbitff[8])) | (y_prenodetwo_9_w[12] & indexbitff[8])), ((y_prenodeone_9_w[11] & (~ indexbitff[8])) | (y_prenodetwo_9_w[11] & indexbitff[8])), ((y_prenodeone_9_w[10] & (~ indexbitff[8]
)) | (y_prenodetwo_9_w[10] & indexbitff[8])), ((y_prenodeone_9_w[9] & (~ indexbitff[8])) | (y_prenodetwo_9_w[9] & indexbitff[8])), ((y_prenodeone_9_w[8] & (~ indexbitff[8])) | (y_prenodetwo_9_w[8] & indexbitff[8])), ((y_prenodeone_9_w[7] & (~ indexbitff[8])) | (y_prenodetwo_9_w[7] & indexbitff[8])), ((y_prenodeone_9_w[6] & (~ indexbitff[8])) | (y_prenodetwo_9_w[6] & indexbitff[8])), ((y_prenodeone_9_w[5] & (~ indexbitff[8])) | (y_prenodetwo_9_w[5] & indexbitff[8])), ((y_prenodeone_9_w[4] & (~ indexbitff[8])) | (y_prenodetwo_9_w[4] & indexbitff[8])), ((y_prenodeone_9_w[3] & (~ indexbitff[8])) | (y_prenodetwo_9_w[3] & indexbitff[8])), ((y_prenodeone_9_w[2] & (~ indexbitff[8])) | (y_prenodetwo_9_w[2] & indexbitff[8])), ((y_prenodeone_9_w[1] & (~ indexbitff[8])) | (y_prenodetwo_9_w[1] & indexbitff[8])), ((y_prenodeone_9_w[0] & (~ indexbitff[8])) | (y_prenodetwo_9_w[0] & indexbitff[8]))},
		y_prenodeone_10_w = {{9{x_pipeff_9[33]}}, x_pipeff_9[33:9]},
		y_prenodeone_11_w = {{10{x_pipeff_10[33]}}, x_pipeff_10[33:10]},
		y_prenodeone_12_w = {{11{x_pipeff_11[33]}}, x_pipeff_11[33:11]},
		y_prenodeone_13_w = {{12{x_pipeff_12[33]}}, x_pipeff_12[33:12]},
		y_prenodeone_2_w = {x_pipeff_1[33], x_pipeff_1[33:1]},
		y_prenodeone_3_w = {{2{x_pipeff_2[33]}}, x_pipeff_2[33:2]},
		y_prenodeone_4_w = {{3{x_pipeff_3[33]}}, x_pipeff_3[33:3]},
		y_prenodeone_5_w = {{4{x_pipeff_4[33]}}, x_pipeff_4[33:4]},
		y_prenodeone_6_w = {{5{x_pipeff_5[33]}}, x_pipeff_5[33:5]},
		y_prenodeone_7_w = {{6{x_pipeff_6[33]}}, x_pipeff_6[33:6]},
		y_prenodeone_8_w = {{7{x_pipeff_7[33]}}, x_pipeff_7[33:7]},
		y_prenodeone_9_w = {{8{x_pipeff_8[33]}}, x_pipeff_8[33:8]},
		y_prenodetwo_10_w = {{11{x_pipeff_9[33]}}, x_pipeff_9[33:11]},
		y_prenodetwo_11_w = {{12{x_pipeff_10[33]}}, x_pipeff_10[33:12]},
		y_prenodetwo_12_w = {{13{x_pipeff_11[33]}}, x_pipeff_11[33:13]},
		y_prenodetwo_13_w = {{14{x_pipeff_12[33]}}, x_pipeff_12[33:14]},
		y_prenodetwo_2_w = {{3{x_pipeff_1[33]}}, x_pipeff_1[33:3]},
		y_prenodetwo_3_w = {{4{x_pipeff_2[33]}}, x_pipeff_2[33:4]},
		y_prenodetwo_4_w = {{5{x_pipeff_3[33]}}, x_pipeff_3[33:5]},
		y_prenodetwo_5_w = {{6{x_pipeff_4[33]}}, x_pipeff_4[33:6]},
		y_prenodetwo_6_w = {{7{x_pipeff_5[33]}}, x_pipeff_5[33:7]},
		y_prenodetwo_7_w = {{8{x_pipeff_6[33]}}, x_pipeff_6[33:8]},
		y_prenodetwo_8_w = {{9{x_pipeff_7[33]}}, x_pipeff_7[33:9]},
		y_prenodetwo_9_w = {{10{x_pipeff_8[33]}}, x_pipeff_8[33:10]},
		y_subnode_10_w = {(y_prenode_10_w[33] ^ z_pipeff_9[33]), (y_prenode_10_w[32] ^ z_pipeff_9[33]), (y_prenode_10_w[31] ^ z_pipeff_9[33]), (y_prenode_10_w[30] ^ z_pipeff_9[33]), (y_prenode_10_w[29] ^ z_pipeff_9[33]), (y_prenode_10_w[28] ^ z_pipeff_9[33]), (y_prenode_10_w[27] ^ z_pipeff_9[33]), (y_prenode_10_w[26] ^ z_pipeff_9[33]), (y_prenode_10_w[25] ^ z_pipeff_9[33]), (y_prenode_10_w[24] ^ z_pipeff_9[33]), (y_prenode_10_w[23] ^ z_pipeff_9[33]), (y_prenode_10_w[22] ^ z_pipeff_9[33]), (y_prenode_10_w[21] ^ z_pipeff_9[33]), (y_prenode_10_w[20] ^ z_pipeff_9[33]), (y_prenode_10_w[19] ^ z_pipeff_9[33]), (y_prenode_10_w[18] ^ z_pipeff_9[33]), (y_prenode_10_w[17] ^ z_pipeff_9[33]), (y_prenode_10_w[16] ^ z_pipeff_9[33]), (y_prenode_10_w[15] ^ z_pipeff_9[33]), (y_prenode_10_w[14] ^ z_pipeff_9[33]), (y_prenode_10_w[13] ^ z_pipeff_9[33]), (y_prenode_10_w[12] ^ z_pipeff_9[33]), (y_prenode_10_w[11] ^ z_pipeff_9[33]), (y_prenode_10_w[10] ^ z_pipeff_9[33]), (y_prenode_10_w[9] ^ z_pipeff_9[33]), (y_prenode_10_w[8] ^ z_pipeff_9[33]), (y_prenode_10_w[7] ^ z_pipeff_9[33]), (y_prenode_10_w[6] ^ z_pipeff_9[33]), (y_prenode_10_w[5] ^ z_pipeff_9[33]), (y_prenode_10_w[4] ^ z_pipeff_9[33]), (y_prenode_10_w[3] ^ z_pipeff_9[33]), (y_prenode_10_w[2] ^ z_pipeff_9[33]), (y_prenode_10_w[1] ^ z_pipeff_9[33]), (y_prenode_10_w[0] ^ z_pipeff_9[33])},
		y_subnode_11_w = {(y_prenode_11_w[33] ^ z_pipeff_10[33]), (y_prenode_11_w[32] ^ z_pipeff_10[33]), (y_prenode_11_w[31] ^ z_pipeff_10[33]), (y_prenode_11_w[30] ^ z_pipeff_10[33]), (y_prenode_11_w[29] ^ z_pipeff_10[33]), (y_prenode_11_w[28] ^ z_pipeff_10[33]), (y_prenode_11_w[27] ^ z_pipeff_10[33]), (y_prenode_11_w[26] ^ z_pipeff_10[33]), (y_prenode_11_w[25] ^ z_pipeff_10[33]), (y_prenode_11_w[24] ^ z_pipeff_10[33]), (y_prenode_11_w[23] ^ z_pipeff_10[33]), (y_prenode_11_w[22] ^ z_pipeff_10[33]), (y_prenode_11_w[21] ^ z_pipeff_10[33]), (y_prenode_11_w[20] ^ z_pipeff_10[33]), (y_prenode_11_w[19] ^ z_pipeff_10[33]), (y_prenode_11_w[18] ^ z_pipeff_10[33]), (y_prenode_11_w[17] ^ z_pipeff_10[33]), (y_prenode_11_w[16] ^ z_pipeff_10[33]), (y_prenode_11_w[15] ^ z_pipeff_10[33]), (y_prenode_11_w[14] ^ z_pipeff_10[33]), (y_prenode_11_w[13] ^ z_pipeff_10[33]), (y_prenode_11_w[12] ^ z_pipeff_10[33]), (y_prenode_11_w[11] ^ z_pipeff_10[33]), (y_prenode_11_w[10] ^ z_pipeff_10[33]), (y_prenode_11_w[9] ^ z_pipeff_10[33]), (y_prenode_11_w[8] ^ z_pipeff_10[33]), (y_prenode_11_w[7] ^ z_pipeff_10[33]), (y_prenode_11_w[6] ^ z_pipeff_10[33]), (y_prenode_11_w[5] ^ z_pipeff_10[33]), (y_prenode_11_w[4] ^ z_pipeff_10[33]), (y_prenode_11_w[3] ^ z_pipeff_10[33]), (y_prenode_11_w[2] ^ z_pipeff_10[33]), (y_prenode_11_w[1] ^ z_pipeff_10[33]), (y_prenode_11_w[0] ^ z_pipeff_10[33])},
		y_subnode_12_w = {(y_prenode_12_w[33] ^ z_pipeff_11[33]), (y_prenode_12_w[32] ^ z_pipeff_11[33]), (y_prenode_12_w[31] ^ z_pipeff_11[33]), (y_prenode_12_w[30] ^ z_pipeff_11[33]), (y_prenode_12_w[29] ^ z_pipeff_11[33]), (y_prenode_12_w[28] ^ z_pipeff_11[33]), (y_prenode_12_w[27] ^ z_pipeff_11[33]), (y_prenode_12_w[26] ^ z_pipeff_11[33]), (y_prenode_12_w[25] ^ z_pipeff_11[33]), (y_prenode_12_w[24] ^ z_pipeff_11[33]), (y_prenode_12_w[23] ^ z_pipeff_11[33]), (y_prenode_12_w[22] ^ z_pipeff_11[33]), (y_prenode_12_w[21] ^ z_pipeff_11[33]), (y_prenode_12_w[20] ^ z_pipeff_11[33]), (y_prenode_12_w[19] ^ z_pipeff_11[33]), (y_prenode_12_w[18] ^ z_pipeff_11[33]), (y_prenode_12_w[17] ^ z_pipeff_11[33]), (y_prenode_12_w[16] ^ z_pipeff_11[33]), (y_prenode_12_w[15] ^ z_pipeff_11[33]), (y_prenode_12_w[14] ^ z_pipeff_11[33]), (y_prenode_12_w[13] ^ z_pipeff_11[33]), (y_prenode_12_w[12] ^ z_pipeff_11[33]), (y_prenode_12_w[11] ^ z_pipeff_11[33]), (y_prenode_12_w[10] ^ z_pipeff_11[33]), (y_prenode_12_w[9] ^ z_pipeff_11[33]), (y_prenode_12_w[8] ^ z_pipeff_11[33]), (y_prenode_12_w[7] ^ z_pipeff_11[33]), (y_prenode_12_w[6] ^ z_pipeff_11[33]), (y_prenode_12_w[5] ^ z_pipeff_11[33]), (y_prenode_12_w[4] ^ z_pipeff_11[33]), (y_prenode_12_w[3] ^ z_pipeff_11[33]), (y_prenode_12_w[2] ^ z_pipeff_11[33]), (y_prenode_12_w[1] ^ z_pipeff_11[33]), (y_prenode_12_w[0] ^ z_pipeff_11[33])},
		y_subnode_13_w = {(y_prenode_13_w[33] ^ z_pipeff_12[33]), (y_prenode_13_w[32] ^ z_pipeff_12[33]), (y_prenode_13_w[31] ^ z_pipeff_12[33]), (y_prenode_13_w[30] ^ z_pipeff_12[33]), (y_prenode_13_w[29] ^ z_pipeff_12[33]), (y_prenode_13_w[28] ^ z_pipeff_12[33]), (y_prenode_13_w[27] ^ z_pipeff_12[33]), (y_prenode_13_w[26] ^ z_pipeff_12[33]), (y_prenode_13_w[25] ^ z_pipeff_12[33]), (y_prenode_13_w[24] ^ z_pipeff_12[33]), (y_prenode_13_w[23] ^ z_pipeff_12[33]), (y_prenode_13_w[22] ^ z_pipeff_12[33]), (y_prenode_13_w[21] ^ z_pipeff_12[33]), (y_prenode_13_w[20] ^ z_pipeff_12[33]), (y_prenode_13_w[19] ^ z_pipeff_12[33]), (y_prenode_13_w[18] ^ z_pipeff_12[33]), (y_prenode_13_w[17] ^ z_pipeff_12[33]), (y_prenode_13_w[16] ^ z_pipeff_12[33]), (y_prenode_13_w[15] ^ z_pipeff_12[33]), (y_prenode_13_w[14] ^ z_pipeff_12[33]), (y_prenode_13_w[13] ^ z_pipeff_12[33]), (y_prenode_13_w[12] ^ z_pipeff_12[33]), (y_prenode_13_w[11] ^ z_pipeff_12[33]), (y_prenode_13_w[10] ^ z_pipeff_12[33]), (y_prenode_13_w[9] ^ z_pipeff_12[33]), (y_prenode_13_w[8] ^ z_pipeff_12[33]), (y_prenode_13_w[7] ^ z_pipeff_12[33]), (y_prenode_13_w[6] ^ z_pipeff_12[33]), (y_prenode_13_w[5] ^ z_pipeff_12[33]), (y_prenode_13_w[4] ^ z_pipeff_12[33]), (y_prenode_13_w[3] ^ z_pipeff_12[33]), (y_prenode_13_w[2] ^ z_pipeff_12[33]), (y_prenode_13_w[1] ^ z_pipeff_12[33]), (y_prenode_13_w[0] ^ z_pipeff_12[33])},
		y_subnode_1_w = {(x_pipeff_0[33] & (~ indexbitff[0])), (x_pipeff_0[32] & (~ indexbitff[0])), ((x_pipeff_0[31] & (~ indexbitff[0])) | (x_pipeff_0[33] & indexbitff[0])), ((x_pipeff_0[30] & (~ indexbitff[0])) | (x_pipeff_0[32] & indexbitff[0])), ((x_pipeff_0[29] & (~ indexbitff[0])) | (x_pipeff_0[31] & indexbitff[0])), ((x_pipeff_0[28] & (~ indexbitff[0])) | (x_pipeff_0[30] & indexbitff[0])), ((x_pipeff_0[27] & (~ indexbitff[0])) | (x_pipeff_0[29] & indexbitff[0])), ((x_pipeff_0[26] & (~ indexbitff[0])) | (x_pipeff_0[28] & indexbitff[0])), ((x_pipeff_0[25] & (~ indexbitff[0])) | (x_pipeff_0[27] & indexbitff[0])), ((x_pipeff_0[24] & (~ indexbitff[0])) | (x_pipeff_0[26] & indexbitff[0])), ((x_pipeff_0[23] & (~ indexbitff[0])) | (x_pipeff_0[25] & indexbitff[0])), ((x_pipeff_0[22] & (~ indexbitff[0])) | (x_pipeff_0[24] & indexbitff[0])), ((x_pipeff_0[21] & (~ indexbitff[0])) | (x_pipeff_0[23] & indexbitff[0])), ((x_pipeff_0[20] & (~ indexbitff[0])) | (x_pipeff_0[22] & indexbitff[0])), ((x_pipeff_0[19] & (~ indexbitff[0])) | (x_pipeff_0[21] & indexbitff[0])), ((x_pipeff_0[18] & (~ indexbitff[0])) | (x_pipeff_0[20] & indexbitff[0])), ((x_pipeff_0[17] & (~ indexbitff[0])) | (x_pipeff_0[19] & indexbitff[0])), ((x_pipeff_0[16] & (~ indexbitff[0])) | (x_pipeff_0[18] & indexbitff[0])), ((x_pipeff_0[15] & (~ indexbitff[0])) | (x_pipeff_0[17] & indexbitff[0])), ((x_pipeff_0[14] & (~ indexbitff[0])) | (x_pipeff_0[16] & indexbitff[0])), ((x_pipeff_0[13] & (~ indexbitff[0])) | (x_pipeff_0[15] & indexbitff[0])), ((x_pipeff_0[12] & (~ indexbitff[0])) | (x_pipeff_0[14] & indexbitff[0])), ((x_pipeff_0[11] & (~ indexbitff[0])) | (x_pipeff_0[13] & indexbitff[0])), ((x_pipeff_0[10] & (~ indexbitff[0])) | (x_pipeff_0[12] & indexbitff[0])), ((x_pipeff_0[9] & (~ indexbitff[0])) | (x_pipeff_0[11] & indexbitff[0])), ((x_pipeff_0[8] & (~ indexbitff[0])) | (x_pipeff_0[10] & indexbitff[0])), ((x_pipeff_0[7] & (~ indexbitff[0])) | (x_pipeff_0[9] & indexbitff[0])), ((x_pipeff_0[6] & (~ indexbitff[0])) | (x_pipeff_0[8] & indexbitff[0])), ((x_pipeff_0[5]
 & (~ indexbitff[0])) | (x_pipeff_0[7] & indexbitff[0])), ((x_pipeff_0[4] & (~ indexbitff[0])) | (x_pipeff_0[6] & indexbitff[0])), ((x_pipeff_0[3] & (~ indexbitff[0])) | (x_pipeff_0[5] & indexbitff[0])), ((x_pipeff_0[2] & (~ indexbitff[0])) | (x_pipeff_0[4] & indexbitff[0])), ((x_pipeff_0[1] & (~ indexbitff[0])) | (x_pipeff_0[3] & indexbitff[0])), ((x_pipeff_0[0] & (~ indexbitff[0])) | (x_pipeff_0[2] & indexbitff[0]))},
		y_subnode_2_w = {(y_prenode_2_w[33] ^ z_pipeff_1[33]), (y_prenode_2_w[32] ^ z_pipeff_1[33]), (y_prenode_2_w[31] ^ z_pipeff_1[33]), (y_prenode_2_w[30] ^ z_pipeff_1[33]), (y_prenode_2_w[29] ^ z_pipeff_1[33]), (y_prenode_2_w[28] ^ z_pipeff_1[33]), (y_prenode_2_w[27] ^ z_pipeff_1[33]), (y_prenode_2_w[26] ^ z_pipeff_1[33]), (y_prenode_2_w[25] ^ z_pipeff_1[33]), (y_prenode_2_w[24] ^ z_pipeff_1[33]), (y_prenode_2_w[23] ^ z_pipeff_1[33]), (y_prenode_2_w[22] ^ z_pipeff_1[33]), (y_prenode_2_w[21] ^ z_pipeff_1[33]), (y_prenode_2_w[20] ^ z_pipeff_1[33]), (y_prenode_2_w[19] ^ z_pipeff_1[33]), (y_prenode_2_w[18] ^ z_pipeff_1[33]), (y_prenode_2_w[17] ^ z_pipeff_1[33]), (y_prenode_2_w[16] ^ z_pipeff_1[33]), (y_prenode_2_w[15] ^ z_pipeff_1[33]), (y_prenode_2_w[14] ^ z_pipeff_1[33]), (y_prenode_2_w[13] ^ z_pipeff_1[33]), (y_prenode_2_w[12] ^ z_pipeff_1[33]), (y_prenode_2_w[11] ^ z_pipeff_1[33]), (y_prenode_2_w[10] ^ z_pipeff_1[33]), (y_prenode_2_w[9] ^ z_pipeff_1[33]), (y_prenode_2_w[8] ^ z_pipeff_1[33]), (y_prenode_2_w[7] ^ z_pipeff_1[33]), (y_prenode_2_w[6] ^ z_pipeff_1[33]), (y_prenode_2_w[5] ^ z_pipeff_1[33]), (y_prenode_2_w[4] ^ z_pipeff_1[33]), (y_prenode_2_w[3] ^ z_pipeff_1[33]), (y_prenode_2_w[2] ^ z_pipeff_1[33]), (y_prenode_2_w[1] ^ z_pipeff_1[33]), (y_prenode_2_w[0] ^ z_pipeff_1[33])},
		y_subnode_3_w = {(y_prenode_3_w[33] ^ z_pipeff_2[33]), (y_prenode_3_w[32] ^ z_pipeff_2[33]), (y_prenode_3_w[31] ^ z_pipeff_2[33]), (y_prenode_3_w[30] ^ z_pipeff_2[33]), (y_prenode_3_w[29] ^ z_pipeff_2[33]), (y_prenode_3_w[28] ^ z_pipeff_2[33]), (y_prenode_3_w[27] ^ z_pipeff_2[33]), (y_prenode_3_w[26] ^ z_pipeff_2[33]), (y_prenode_3_w[25] ^ z_pipeff_2[33]), (y_prenode_3_w[24] ^ z_pipeff_2[33]), (y_prenode_3_w[23] ^ z_pipeff_2[33]), (y_prenode_3_w[22] ^ z_pipeff_2[33]), (y_prenode_3_w[21] ^ z_pipeff_2[33]), (y_prenode_3_w[20] ^ z_pipeff_2[33]), (y_prenode_3_w[19] ^ z_pipeff_2[33]), (y_prenode_3_w[18] ^ z_pipeff_2[33]), (y_prenode_3_w[17] ^ z_pipeff_2[33]), (y_prenode_3_w[16] ^ z_pipeff_2[33]), (y_prenode_3_w[15] ^ z_pipeff_2[33]), (y_prenode_3_w[14] ^ z_pipeff_2[33]), (y_prenode_3_w[13] ^ z_pipeff_2[33]), (y_prenode_3_w[12] ^ z_pipeff_2[33]), (y_prenode_3_w[11] ^ z_pipeff_2[33]), (y_prenode_3_w[10] ^ z_pipeff_2[33]), (y_prenode_3_w[9] ^ z_pipeff_2[33]), (y_prenode_3_w[8] ^ z_pipeff_2[33]), (y_prenode_3_w[7] ^ z_pipeff_2[33]), (y_prenode_3_w[6] ^ z_pipeff_2[33]), (y_prenode_3_w[5] ^ z_pipeff_2[33]), (y_prenode_3_w[4] ^ z_pipeff_2[33]), (y_prenode_3_w[3] ^ z_pipeff_2[33]), (y_prenode_3_w[2] ^ z_pipeff_2[33]), (y_prenode_3_w[1] ^ z_pipeff_2[33]), (y_prenode_3_w[0] ^ z_pipeff_2[33])},
		y_subnode_4_w = {(y_prenode_4_w[33] ^ z_pipeff_3[33]), (y_prenode_4_w[32] ^ z_pipeff_3[33]), (y_prenode_4_w[31] ^ z_pipeff_3[33]), (y_prenode_4_w[30] ^ z_pipeff_3[33]), (y_prenode_4_w[29] ^ z_pipeff_3[33]), (y_prenode_4_w[28] ^ z_pipeff_3[33]), (y_prenode_4_w[27] ^ z_pipeff_3[33]), (y_prenode_4_w[26] ^ z_pipeff_3[33]), (y_prenode_4_w[25] ^ z_pipeff_3[33]), (y_prenode_4_w[24] ^ z_pipeff_3[33]), (y_prenode_4_w[23] ^ z_pipeff_3[33]), (y_prenode_4_w[22] ^ z_pipeff_3[33]), (y_prenode_4_w[21] ^ z_pipeff_3[33]), (y_prenode_4_w[20] ^ z_pipeff_3[33]), (y_prenode_4_w[19] ^ z_pipeff_3[33]), (y_prenode_4_w[18] ^ z_pipeff_3[33]), (y_prenode_4_w[17] ^ z_pipeff_3[33]), (y_prenode_4_w[16] ^ z_pipeff_3[33]), (y_prenode_4_w[15] ^ z_pipeff_3[33]), (y_prenode_4_w[14] ^ z_pipeff_3[33]), (y_prenode_4_w[13] ^ z_pipeff_3[33]), (y_prenode_4_w[12] ^ z_pipeff_3[33]), (y_prenode_4_w[11] ^ z_pipeff_3[33]), (y_prenode_4_w[10] ^ z_pipeff_3[33]), (y_prenode_4_w[9] ^ z_pipeff_3[33]), (y_prenode_4_w[8] ^ z_pipeff_3[33]), (y_prenode_4_w[7] ^ z_pipeff_3[33]), (y_prenode_4_w[6] ^ z_pipeff_3[33]), (y_prenode_4_w[5] ^ z_pipeff_3[33]), (y_prenode_4_w[4] ^ z_pipeff_3[33]), (y_prenode_4_w[3] ^ z_pipeff_3[33]), (y_prenode_4_w[2] ^ z_pipeff_3[33]), (y_prenode_4_w[1] ^ z_pipeff_3[33]), (y_prenode_4_w[0] ^ z_pipeff_3[33])},
		y_subnode_5_w = {(y_prenode_5_w[33] ^ z_pipeff_4[33]), (y_prenode_5_w[32] ^ z_pipeff_4[33]), (y_prenode_5_w[31] ^ z_pipeff_4[33]), (y_prenode_5_w[30] ^ z_pipeff_4[33]), (y_prenode_5_w[29] ^ z_pipeff_4[33]), (y_prenode_5_w[28] ^ z_pipeff_4[33]), (y_prenode_5_w[27] ^ z_pipeff_4[33]), (y_prenode_5_w[26] ^ z_pipeff_4[33]), (y_prenode_5_w[25] ^ z_pipeff_4[33]), (y_prenode_5_w[24] ^ z_pipeff_4[33]), (y_prenode_5_w[23] ^ z_pipeff_4[33]), (y_prenode_5_w[22] ^ z_pipeff_4[33]), (y_prenode_5_w[21] ^ z_pipeff_4[33]), (y_prenode_5_w[20] ^ z_pipeff_4[33]), (y_prenode_5_w[19] ^ z_pipeff_4[33]), (y_prenode_5_w[18] ^ z_pipeff_4[33]), (y_prenode_5_w[17] ^ z_pipeff_4[33]), (y_prenode_5_w[16] ^ z_pipeff_4[33]), (y_prenode_5_w[15] ^ z_pipeff_4[33]), (y_prenode_5_w[14] ^ z_pipeff_4[33]), (y_prenode_5_w[13] ^ z_pipeff_4[33]), (y_prenode_5_w[12] ^ z_pipeff_4[33]), (y_prenode_5_w[11] ^ z_pipeff_4[33]), (y_prenode_5_w[10] ^ z_pipeff_4[33]), (y_prenode_5_w[9] ^ z_pipeff_4[33]), (y_prenode_5_w[8] ^ z_pipeff_4[33]), (y_prenode_5_w[7] ^ z_pipeff_4[33]), (y_prenode_5_w[6] ^ z_pipeff_4[33]), (y_prenode_5_w[5] ^ z_pipeff_4[33]), (y_prenode_5_w[4] ^ z_pipeff_4[33]), (y_prenode_5_w[3] ^ z_pipeff_4[33]), (y_prenode_5_w[2] ^ z_pipeff_4[33]), (y_prenode_5_w[1] ^ z_pipeff_4[33]), (y_prenode_5_w[0] ^ z_pipeff_4[33])},
		y_subnode_6_w = {(y_prenode_6_w[33] ^ z_pipeff_5[33]), (y_prenode_6_w[32] ^ z_pipeff_5[33]), (y_prenode_6_w[31] ^ z_pipeff_5[33]), (y_prenode_6_w[30] ^ z_pipeff_5[33]), (y_prenode_6_w[29] ^ z_pipeff_5[33]), (y_prenode_6_w[28] ^ z_pipeff_5[33]), (y_prenode_6_w[27] ^ z_pipeff_5[33]), (y_prenode_6_w[26] ^ z_pipeff_5[33]), (y_prenode_6_w[25] ^ z_pipeff_5[33]), (y_prenode_6_w[24] ^ z_pipeff_5[33]), (y_prenode_6_w[23] ^ z_pipeff_5[33]), (y_prenode_6_w[22] ^ z_pipeff_5[33]), (y_prenode_6_w[21] ^ z_pipeff_5[33]), (y_prenode_6_w[20] ^ z_pipeff_5[33]), (y_prenode_6_w[19] ^ z_pipeff_5[33]), (y_prenode_6_w[18] ^ z_pipeff_5[33]), (y_prenode_6_w[17] ^ z_pipeff_5[33]), (y_prenode_6_w[16] ^ z_pipeff_5[33]), (y_prenode_6_w[15] ^ z_pipeff_5[33]), (y_prenode_6_w[14] ^ z_pipeff_5[33]), (y_prenode_6_w[13] ^ z_pipeff_5[33]), (y_prenode_6_w[12] ^ z_pipeff_5[33]), (y_prenode_6_w[11] ^ z_pipeff_5[33]), (y_prenode_6_w[10] ^ z_pipeff_5[33]), (y_prenode_6_w[9] ^ z_pipeff_5[33]), (y_prenode_6_w[8] ^ z_pipeff_5[33]), (y_prenode_6_w[7] ^ z_pipeff_5[33]), (y_prenode_6_w[6] ^ z_pipeff_5[33]), (y_prenode_6_w[5] ^ z_pipeff_5[33]), (y_prenode_6_w[4] ^ z_pipeff_5[33]), (y_prenode_6_w[3] ^ z_pipeff_5[33]), (y_prenode_6_w[2] ^ z_pipeff_5[33]), (y_prenode_6_w[1] ^ z_pipeff_5[33]), (y_prenode_6_w[0] ^ z_pipeff_5[33])},
		y_subnode_7_w = {(y_prenode_7_w[33] ^ z_pipeff_6[33]), (y_prenode_7_w[32] ^ z_pipeff_6[33]), (y_prenode_7_w[31] ^ z_pipeff_6[33]), (y_prenode_7_w[30] ^ z_pipeff_6[33]), (y_prenode_7_w[29] ^ z_pipeff_6[33]), (y_prenode_7_w[28] ^ z_pipeff_6[33]), (y_prenode_7_w[27] ^ z_pipeff_6[33]), (y_prenode_7_w[26] ^ z_pipeff_6[33]), (y_prenode_7_w[25] ^ z_pipeff_6[33]), (y_prenode_7_w[24] ^ z_pipeff_6[33]), (y_prenode_7_w[23] ^ z_pipeff_6[33]), (y_prenode_7_w[22] ^ z_pipeff_6[33]), (y_prenode_7_w[21] ^ z_pipeff_6[33]), (y_prenode_7_w[20] ^ z_pipeff_6[33]), (y_prenode_7_w[19] ^ z_pipeff_6[33]), (y_prenode_7_w[18] ^ z_pipeff_6[33]), (y_prenode_7_w[17] ^ z_pipeff_6[33]), (y_prenode_7_w[16] ^ z_pipeff_6[33]), (y_prenode_7_w[15] ^ z_pipeff_6[33]), (y_prenode_7_w[14] ^ z_pipeff_6[33]), (y_prenode_7_w[13] ^ z_pipeff_6[33]), (y_prenode_7_w[12] ^ z_pipeff_6[33]), (y_prenode_7_w[11] ^ z_pipeff_6[33]), (y_prenode_7_w[10] ^ z_pipeff_6[33]), (y_prenode_7_w[9] ^ z_pipeff_6[33]), (y_prenode_7_w[8] ^ z_pipeff_6[33]), (y_prenode_7_w[7] ^ z_pipeff_6[33]), (y_prenode_7_w[6] ^ z_pipeff_6[33]), (y_prenode_7_w[5] ^ z_pipeff_6[33]), (y_prenode_7_w[4] ^ z_pipeff_6[33]), (y_prenode_7_w[3] ^ z_pipeff_6[33]), (y_prenode_7_w[2] ^ z_pipeff_6[33]), (y_prenode_7_w[1] ^ z_pipeff_6[33]), (y_prenode_7_w[0] ^ z_pipeff_6[33])},
		y_subnode_8_w = {(y_prenode_8_w[33] ^ z_pipeff_7[33]), (y_prenode_8_w[32] ^ z_pipeff_7[33]), (y_prenode_8_w[31] ^ z_pipeff_7[33]), (y_prenode_8_w[30] ^ z_pipeff_7[33]), (y_prenode_8_w[29] ^ z_pipeff_7[33]), (y_prenode_8_w[28] ^ z_pipeff_7[33]), (y_prenode_8_w[27] ^ z_pipeff_7[33]), (y_prenode_8_w[26] ^ z_pipeff_7[33]), (y_prenode_8_w[25] ^ z_pipeff_7[33]), (y_prenode_8_w[24] ^ z_pipeff_7[33]), (y_prenode_8_w[23] ^ z_pipeff_7[33]), (y_prenode_8_w[22] ^ z_pipeff_7[33]), (y_prenode_8_w[21] ^ z_pipeff_7[33]), (y_prenode_8_w[20] ^ z_pipeff_7[33]), (y_prenode_8_w[19] ^ z_pipeff_7[33]), (y_prenode_8_w[18] ^ z_pipeff_7[33]), (y_prenode_8_w[17] ^ z_pipeff_7[33]), (y_prenode_8_w[16] ^ z_pipeff_7[33]), (y_prenode_8_w[15] ^ z_pipeff_7[33]), (y_prenode_8_w[14] ^ z_pipeff_7[33]), (y_prenode_8_w[13] ^ z_pipeff_7[33]), (y_prenode_8_w[12] ^ z_pipeff_7[33]), (y_prenode_8_w[11] ^ z_pipeff_7[33]), (y_prenode_8_w[10] ^ z_pipeff_7[33]), (y_prenode_8_w[9] ^ z_pipeff_7[33]), (y_prenode_8_w[8] ^ z_pipeff_7[33]), (y_prenode_8_w[7] ^ z_pipeff_7[33]), (y_prenode_8_w[6] ^ z_pipeff_7[33]), (y_prenode_8_w[5] ^ z_pipeff_7[33]), (y_prenode_8_w[4] ^ z_pipeff_7[33]), (y_prenode_8_w[3] ^ z_pipeff_7[33]), (y_prenode_8_w[2] ^ z_pipeff_7[33]), (y_prenode_8_w[1] ^ z_pipeff_7[33]), (y_prenode_8_w[0] ^ z_pipeff_7[33])},
		y_subnode_9_w = {(y_prenode_9_w[33] ^ z_pipeff_8[33]), (y_prenode_9_w[32] ^ z_pipeff_8[33]), (y_prenode_9_w[31] ^ z_pipeff_8[33]), (y_prenode_9_w[30] ^ z_pipeff_8[33]), (y_prenode_9_w[29] ^ z_pipeff_8[33]), (y_prenode_9_w[28] ^ z_pipeff_8[33]), (y_prenode_9_w[27] ^ z_pipeff_8[33]), (y_prenode_9_w[26] ^ z_pipeff_8[33]), (y_prenode_9_w[25] ^ z_pipeff_8[33]), (y_prenode_9_w[24] ^ z_pipeff_8[33]), (y_prenode_9_w[23] ^ z_pipeff_8[33]), (y_prenode_9_w[22] ^ z_pipeff_8[33]), (y_prenode_9_w[21] ^ z_pipeff_8[33]), (y_prenode_9_w[20] ^ z_pipeff_8[33]), (y_prenode_9_w[19] ^ z_pipeff_8[33]), (y_prenode_9_w[18] ^ z_pipeff_8[33]), (y_prenode_9_w[17] ^ z_pipeff_8[33]), (y_prenode_9_w[16] ^ z_pipeff_8[33]), (y_prenode_9_w[15] ^ z_pipeff_8[33]), (y_prenode_9_w[14] ^ z_pipeff_8[33]), (y_prenode_9_w[13] ^ z_pipeff_8[33]), (y_prenode_9_w[12] ^ z_pipeff_8[33]), (y_prenode_9_w[11] ^ z_pipeff_8[33]), (y_prenode_9_w[10] ^ z_pipeff_8[33]), (y_prenode_9_w[9] ^ z_pipeff_8[33]), (y_prenode_9_w[8] ^ z_pipeff_8[33]), (y_prenode_9_w[7] ^ z_pipeff_8[33]), (y_prenode_9_w[6] ^ z_pipeff_8[33]), (y_prenode_9_w[5] ^ z_pipeff_8[33]), (y_prenode_9_w[4] ^ z_pipeff_8[33]), (y_prenode_9_w[3] ^ z_pipeff_8[33]), (y_prenode_9_w[2] ^ z_pipeff_8[33]), (y_prenode_9_w[1] ^ z_pipeff_8[33]), (y_prenode_9_w[0] ^ z_pipeff_8[33])},
		z_pipenode_10_w = wire_z_pipenode_10_add_result,
		z_pipenode_11_w = wire_z_pipenode_11_add_result,
		z_pipenode_12_w = wire_z_pipenode_12_add_result,
		z_pipenode_13_w = wire_z_pipenode_13_add_result,
		z_pipenode_2_w = wire_z_pipenode_2_add_result,
		z_pipenode_3_w = wire_z_pipenode_3_add_result,
		z_pipenode_4_w = wire_z_pipenode_4_add_result,
		z_pipenode_5_w = wire_z_pipenode_5_add_result,
		z_pipenode_6_w = wire_z_pipenode_6_add_result,
		z_pipenode_7_w = wire_z_pipenode_7_add_result,
		z_pipenode_8_w = wire_z_pipenode_8_add_result,
		z_pipenode_9_w = wire_z_pipenode_9_add_result,
		z_subnode_10_w = {((~ atannode_9_w[33]) ^ z_pipeff_9[33]), ((~ atannode_9_w[32]) ^ z_pipeff_9[33]), ((~ atannode_9_w[31]) ^ z_pipeff_9[33]), ((~ atannode_9_w[30]) ^ z_pipeff_9[33]), ((~ atannode_9_w[29]) ^ z_pipeff_9[33]), ((~ atannode_9_w[28]) ^ z_pipeff_9[33]), ((~ atannode_9_w[27]) ^ z_pipeff_9[33]), ((~ atannode_9_w[26]) ^ z_pipeff_9[33]), ((~ atannode_9_w[25]) ^ z_pipeff_9[33]), ((~ atannode_9_w[24]) ^ z_pipeff_9[33]), ((~ atannode_9_w[23]) ^ z_pipeff_9[33]), ((~ atannode_9_w[22]) ^ z_pipeff_9[33]), ((~ atannode_9_w[21]) ^ z_pipeff_9[33]), ((~ atannode_9_w[20]) ^ z_pipeff_9[33]), ((~ atannode_9_w[19]) ^ z_pipeff_9[33]), ((~ atannode_9_w[18]) ^ z_pipeff_9[33]), ((~ atannode_9_w[17]) ^ z_pipeff_9[33]), ((~ atannode_9_w[16]) ^ z_pipeff_9[33]), ((~ atannode_9_w[15]) ^ z_pipeff_9[33]), ((~ atannode_9_w[14]) ^ z_pipeff_9[33]), ((~ atannode_9_w[13]) ^ z_pipeff_9[33]), ((~ atannode_9_w[12]) ^ z_pipeff_9[33]), ((~ atannode_9_w[11]) ^ z_pipeff_9[33]), ((~ atannode_9_w[10]) ^ z_pipeff_9[33]), ((~ atannode_9_w[9]) ^ z_pipeff_9[33]), ((~ atannode_9_w[8]) ^ z_pipeff_9[33]), ((~ atannode_9_w[7]) ^ z_pipeff_9[33]), ((~ atannode_9_w[6]) ^ z_pipeff_9[33]), ((~ atannode_9_w[5]) ^ z_pipeff_9[33]), ((~ atannode_9_w[4]) ^ z_pipeff_9[33]), ((~ atannode_9_w[3]) ^ z_pipeff_9[33]), ((~ atannode_9_w[2]) ^ z_pipeff_9[33]), ((~ atannode_9_w[1]) ^ z_pipeff_9[33]), ((~ atannode_9_w[0]) ^ z_pipeff_9[33])},
		z_subnode_11_w = {((~ atannode_10_w[33]) ^ z_pipeff_10[33]), ((~ atannode_10_w[32]) ^ z_pipeff_10[33]), ((~ atannode_10_w[31]) ^ z_pipeff_10[33]), ((~ atannode_10_w[30]) ^ z_pipeff_10[33]), ((~ atannode_10_w[29]) ^ z_pipeff_10[33]), ((~ atannode_10_w[28]) ^ z_pipeff_10[33]), ((~ atannode_10_w[27]) ^ z_pipeff_10[33]), ((~ atannode_10_w[26]) ^ z_pipeff_10[33]), ((~ atannode_10_w[25]) ^ z_pipeff_10[33]), ((~ atannode_10_w[24]) ^ z_pipeff_10[33]), ((~ atannode_10_w[23]) ^ z_pipeff_10[33]), ((~ atannode_10_w[22]) ^ z_pipeff_10[33]), ((~ atannode_10_w[21]) ^ z_pipeff_10[33]), ((~ atannode_10_w[20]) ^ z_pipeff_10[33]), ((~ atannode_10_w[19]) ^ z_pipeff_10[33]), ((~ atannode_10_w[18]) ^ z_pipeff_10[33]), ((~ atannode_10_w[17]) ^ z_pipeff_10[33]), ((~ atannode_10_w[16]) ^ z_pipeff_10[33]), ((~ atannode_10_w[15]) ^ z_pipeff_10[33]), ((~ atannode_10_w[14]) ^ z_pipeff_10[33]), ((~ atannode_10_w[13]) ^ z_pipeff_10[33]), ((~ atannode_10_w[12]) ^ z_pipeff_10[33]), ((~ atannode_10_w[11]) ^ z_pipeff_10[33]), ((~ atannode_10_w[10]) ^ z_pipeff_10[33]), ((~ atannode_10_w[9]) ^ z_pipeff_10[33]), ((~ atannode_10_w[8]) ^ z_pipeff_10[33]), ((~ atannode_10_w[7]) ^ z_pipeff_10[33]), ((~ atannode_10_w[6]) ^ z_pipeff_10[33]), ((~ atannode_10_w[5]) ^ z_pipeff_10[33]), ((~ atannode_10_w[4]) ^ z_pipeff_10[33]), ((~ atannode_10_w[3]) ^ z_pipeff_10[33]), ((~ atannode_10_w[2]) ^ z_pipeff_10[33]), ((~ atannode_10_w[1]) ^ z_pipeff_10[33]), ((~ atannode_10_w[0]) ^ z_pipeff_10[33])},
		z_subnode_12_w = {((~ atannode_11_w[33]) ^ z_pipeff_11[33]), ((~ atannode_11_w[32]) ^ z_pipeff_11[33]), ((~ atannode_11_w[31]) ^ z_pipeff_11[33]), ((~ atannode_11_w[30]) ^ z_pipeff_11[33]), ((~ atannode_11_w[29]) ^ z_pipeff_11[33]), ((~ atannode_11_w[28]) ^ z_pipeff_11[33]), ((~ atannode_11_w[27]) ^ z_pipeff_11[33]), ((~ atannode_11_w[26]) ^ z_pipeff_11[33]), ((~ atannode_11_w[25]) ^ z_pipeff_11[33]), ((~ atannode_11_w[24]) ^ z_pipeff_11[33]), ((~ atannode_11_w[23]) ^ z_pipeff_11[33]), ((~ atannode_11_w[22]) ^ z_pipeff_11[33]), ((~ atannode_11_w[21]) ^ z_pipeff_11[33]), ((~ atannode_11_w[20]) ^ z_pipeff_11[33]), ((~ atannode_11_w[19]) ^ z_pipeff_11[33]), ((~ atannode_11_w[18]) ^ z_pipeff_11[33]), ((~ atannode_11_w[17]) ^ z_pipeff_11[33]), ((~ atannode_11_w[16]) ^ z_pipeff_11[33]), ((~ atannode_11_w[15]) ^ z_pipeff_11[33]), ((~ atannode_11_w[14]) ^ z_pipeff_11[33]), ((~ atannode_11_w[13]) ^ z_pipeff_11[33]), ((~ atannode_11_w[12]) ^ z_pipeff_11[33]), ((~ atannode_11_w[11]) ^ z_pipeff_11[33]), ((~ atannode_11_w[10]) ^ z_pipeff_11[33]), ((~ atannode_11_w[9]) ^ z_pipeff_11[33]), ((~ atannode_11_w[8]) ^ z_pipeff_11[33]), ((~ atannode_11_w[7]) ^ z_pipeff_11[33]), ((~ atannode_11_w[6]) ^ z_pipeff_11[33]), ((~ atannode_11_w[5]) ^ z_pipeff_11[33]), ((~ atannode_11_w[4]) ^ z_pipeff_11[33]), ((~ atannode_11_w[3]) ^ z_pipeff_11[33]), ((~ atannode_11_w[2]) ^ z_pipeff_11[33]), ((~ atannode_11_w[1]) ^ z_pipeff_11[33]), ((~ atannode_11_w[0]) ^ z_pipeff_11[33])},
		z_subnode_13_w = {((~ atannode_12_w[33]) ^ z_pipeff_12[33]), ((~ atannode_12_w[32]) ^ z_pipeff_12[33]), ((~ atannode_12_w[31]) ^ z_pipeff_12[33]), ((~ atannode_12_w[30]) ^ z_pipeff_12[33]), ((~ atannode_12_w[29]) ^ z_pipeff_12[33]), ((~ atannode_12_w[28]) ^ z_pipeff_12[33]), ((~ atannode_12_w[27]) ^ z_pipeff_12[33]), ((~ atannode_12_w[26]) ^ z_pipeff_12[33]), ((~ atannode_12_w[25]) ^ z_pipeff_12[33]), ((~ atannode_12_w[24]) ^ z_pipeff_12[33]), ((~ atannode_12_w[23]) ^ z_pipeff_12[33]), ((~ atannode_12_w[22]) ^ z_pipeff_12[33]), ((~ atannode_12_w[21]) ^ z_pipeff_12[33]), ((~ atannode_12_w[20]) ^ z_pipeff_12[33]), ((~ atannode_12_w[19]) ^ z_pipeff_12[33]), ((~ atannode_12_w[18]) ^ z_pipeff_12[33]), ((~ atannode_12_w[17]) ^ z_pipeff_12[33]), ((~ atannode_12_w[16]) ^ z_pipeff_12[33]), ((~ atannode_12_w[15]) ^ z_pipeff_12[33]), ((~ atannode_12_w[14]) ^ z_pipeff_12[33]), ((~ atannode_12_w[13]) ^ z_pipeff_12[33]), ((~ atannode_12_w[12]) ^ z_pipeff_12[33]), ((~ atannode_12_w[11]) ^ z_pipeff_12[33]), ((~ atannode_12_w[10]) ^ z_pipeff_12[33]), ((~ atannode_12_w[9]) ^ z_pipeff_12[33]), ((~ atannode_12_w[8]) ^ z_pipeff_12[33]), ((~ atannode_12_w[7]) ^ z_pipeff_12[33]), ((~ atannode_12_w[6]) ^ z_pipeff_12[33]), ((~ atannode_12_w[5]) ^ z_pipeff_12[33]), ((~ atannode_12_w[4]) ^ z_pipeff_12[33]), ((~ atannode_12_w[3]) ^ z_pipeff_12[33]), ((~ atannode_12_w[2]) ^ z_pipeff_12[33]), ((~ atannode_12_w[1]) ^ z_pipeff_12[33]), ((~ atannode_12_w[0]) ^ z_pipeff_12[33])},
		z_subnode_2_w = {((~ atannode_1_w[33]) ^ z_pipeff_1[33]), ((~ atannode_1_w[32]) ^ z_pipeff_1[33]), ((~ atannode_1_w[31]) ^ z_pipeff_1[33]), ((~ atannode_1_w[30]) ^ z_pipeff_1[33]), ((~ atannode_1_w[29]) ^ z_pipeff_1[33]), ((~ atannode_1_w[28]) ^ z_pipeff_1[33]), ((~ atannode_1_w[27]) ^ z_pipeff_1[33]), ((~ atannode_1_w[26]) ^ z_pipeff_1[33]), ((~ atannode_1_w[25]) ^ z_pipeff_1[33]), ((~ atannode_1_w[24]) ^ z_pipeff_1[33]), ((~ atannode_1_w[23]) ^ z_pipeff_1[33]), ((~ atannode_1_w[22]) ^ z_pipeff_1[33]), ((~ atannode_1_w[21]) ^ z_pipeff_1[33]), ((~ atannode_1_w[20]) ^ z_pipeff_1[33]), ((~ atannode_1_w[19]) ^ z_pipeff_1[33]), ((~ atannode_1_w[18]) ^ z_pipeff_1[33]), ((~ atannode_1_w[17]) ^ z_pipeff_1[33]), ((~ atannode_1_w[16]) ^ z_pipeff_1[33]), ((~ atannode_1_w[15]) ^ z_pipeff_1[33]), ((~ atannode_1_w[14]) ^ z_pipeff_1[33]), ((~ atannode_1_w[13]) ^ z_pipeff_1[33]), ((~ atannode_1_w[12]) ^ z_pipeff_1[33]), ((~ atannode_1_w[11]) ^ z_pipeff_1[33]), ((~ atannode_1_w[10]) ^ z_pipeff_1[33]), ((~ atannode_1_w[9]) ^ z_pipeff_1[33]), ((~ atannode_1_w[8]) ^ z_pipeff_1[33]), ((~ atannode_1_w[7]) ^ z_pipeff_1[33]), ((~ atannode_1_w[6]) ^ z_pipeff_1[33]), ((~ atannode_1_w[5]) ^ z_pipeff_1[33]), ((~ atannode_1_w[4]) ^ z_pipeff_1[33]), ((~ atannode_1_w[3]) ^ z_pipeff_1[33]), ((~ atannode_1_w[2]) ^ z_pipeff_1[33]), ((~ atannode_1_w[1]) ^ z_pipeff_1[33]), ((~ atannode_1_w[0]) ^ z_pipeff_1[33])},
		z_subnode_3_w = {((~ atannode_2_w[33]) ^ z_pipeff_2[33]), ((~ atannode_2_w[32]) ^ z_pipeff_2[33]), ((~ atannode_2_w[31]) ^ z_pipeff_2[33]), ((~ atannode_2_w[30]) ^ z_pipeff_2[33]), ((~ atannode_2_w[29]) ^ z_pipeff_2[33]), ((~ atannode_2_w[28]) ^ z_pipeff_2[33]), ((~ atannode_2_w[27]) ^ z_pipeff_2[33]), ((~ atannode_2_w[26]) ^ z_pipeff_2[33]), ((~ atannode_2_w[25]) ^ z_pipeff_2[33]), ((~ atannode_2_w[24]) ^ z_pipeff_2[33]), ((~ atannode_2_w[23]) ^ z_pipeff_2[33]), ((~ atannode_2_w[22]) ^ z_pipeff_2[33]), ((~ atannode_2_w[21]) ^ z_pipeff_2[33]), ((~ atannode_2_w[20]) ^ z_pipeff_2[33]), ((~ atannode_2_w[19]) ^ z_pipeff_2[33]), ((~ atannode_2_w[18]) ^ z_pipeff_2[33]), ((~ atannode_2_w[17]) ^ z_pipeff_2[33]), ((~ atannode_2_w[16]) ^ z_pipeff_2[33]), ((~ atannode_2_w[15]) ^ z_pipeff_2[33]), ((~ atannode_2_w[14]) ^ z_pipeff_2[33]), ((~ atannode_2_w[13]) ^ z_pipeff_2[33]), ((~ atannode_2_w[12]) ^ z_pipeff_2[33]), ((~ atannode_2_w[11]) ^ z_pipeff_2[33]), ((~ atannode_2_w[10]) ^ z_pipeff_2[33]), ((~ atannode_2_w[9]) ^ z_pipeff_2[33]), ((~ atannode_2_w[8]) ^ z_pipeff_2[33]), ((~ atannode_2_w[7]) ^ z_pipeff_2[33]), ((~ atannode_2_w[6]) ^ z_pipeff_2[33]), ((~ atannode_2_w[5]) ^ z_pipeff_2[33]), ((~ atannode_2_w[4]) ^ z_pipeff_2[33]), ((~ atannode_2_w[3]) ^ z_pipeff_2[33]), ((~ atannode_2_w[2]) ^ z_pipeff_2[33]), ((~ atannode_2_w[1]) ^ z_pipeff_2[33]), ((~ atannode_2_w[0]) ^ z_pipeff_2[33])},
		z_subnode_4_w = {((~ atannode_3_w[33]) ^ z_pipeff_3[33]), ((~ atannode_3_w[32]) ^ z_pipeff_3[33]), ((~ atannode_3_w[31]) ^ z_pipeff_3[33]), ((~ atannode_3_w[30]) ^ z_pipeff_3[33]), ((~ atannode_3_w[29]) ^ z_pipeff_3[33]), ((~ atannode_3_w[28]) ^ z_pipeff_3[33]), ((~ atannode_3_w[27]) ^ z_pipeff_3[33]), ((~ atannode_3_w[26]) ^ z_pipeff_3[33]), ((~ atannode_3_w[25]) ^ z_pipeff_3[33]), ((~ atannode_3_w[24]) ^ z_pipeff_3[33]), ((~ atannode_3_w[23]) ^ z_pipeff_3[33]), ((~ atannode_3_w[22]) ^ z_pipeff_3[33]), ((~ atannode_3_w[21]) ^ z_pipeff_3[33]), ((~ atannode_3_w[20]) ^ z_pipeff_3[33]), ((~ atannode_3_w[19]) ^ z_pipeff_3[33]), ((~ atannode_3_w[18]) ^ z_pipeff_3[33]), ((~ atannode_3_w[17]) ^ z_pipeff_3[33]), ((~ atannode_3_w[16]) ^ z_pipeff_3[33]), ((~ atannode_3_w[15]) ^ z_pipeff_3[33]), ((~ atannode_3_w[14]) ^ z_pipeff_3[33]), ((~ atannode_3_w[13]) ^ z_pipeff_3[33]), ((~ atannode_3_w[12]) ^ z_pipeff_3[33]), ((~ atannode_3_w[11]) ^ z_pipeff_3[33]), ((~ atannode_3_w[10]) ^ z_pipeff_3[33]), ((~ atannode_3_w[9]) ^ z_pipeff_3[33]), ((~ atannode_3_w[8]) ^ z_pipeff_3[33]), ((~ atannode_3_w[7]) ^ z_pipeff_3[33]), ((~ atannode_3_w[6]) ^ z_pipeff_3[33]), ((~ atannode_3_w[5]) ^ z_pipeff_3[33]), ((~ atannode_3_w[4]) ^ z_pipeff_3[33]), ((~ atannode_3_w[3]) ^ z_pipeff_3[33]), ((~ atannode_3_w[2]) ^ z_pipeff_3[33]), ((~ atannode_3_w[1]) ^ z_pipeff_3[33]), ((~ atannode_3_w[0]) ^ z_pipeff_3[33])},
		z_subnode_5_w = {((~ atannode_4_w[33]) ^ z_pipeff_4[33]), ((~ atannode_4_w[32]) ^ z_pipeff_4[33]), ((~ atannode_4_w[31]) ^ z_pipeff_4[33]), ((~ atannode_4_w[30]) ^ z_pipeff_4[33]), ((~ atannode_4_w[29]) ^ z_pipeff_4[33]), ((~ atannode_4_w[28]) ^ z_pipeff_4[33]), ((~ atannode_4_w[27]) ^ z_pipeff_4[33]), ((~ atannode_4_w[26]) ^ z_pipeff_4[33]), ((~ atannode_4_w[25]) ^ z_pipeff_4[33]), ((~ atannode_4_w[24]) ^ z_pipeff_4[33]), ((~ atannode_4_w[23]) ^ z_pipeff_4[33]), ((~ atannode_4_w[22]) ^ z_pipeff_4[33]), ((~ atannode_4_w[21]) ^ z_pipeff_4[33]), ((~ atannode_4_w[20]) ^ z_pipeff_4[33]), ((~ atannode_4_w[19]) ^ z_pipeff_4[33]), ((~ atannode_4_w[18]) ^ z_pipeff_4[33]), ((~ atannode_4_w[17]) ^ z_pipeff_4[33]), ((~ atannode_4_w[16]) ^ z_pipeff_4[33]), ((~ atannode_4_w[15]) ^ z_pipeff_4[33]), ((~ atannode_4_w[14]) ^ z_pipeff_4[33]), ((~ atannode_4_w[13]) ^ z_pipeff_4[33]), ((~ atannode_4_w[12]) ^ z_pipeff_4[33]), ((~ atannode_4_w[11]) ^ z_pipeff_4[33]), ((~ atannode_4_w[10]) ^ z_pipeff_4[33]), ((~ atannode_4_w[9]) ^ z_pipeff_4[33]), ((~ atannode_4_w[8]) ^ z_pipeff_4[33]), ((~ atannode_4_w[7]) ^ z_pipeff_4[33]), ((~ atannode_4_w[6]) ^ z_pipeff_4[33]), ((~ atannode_4_w[5]) ^ z_pipeff_4[33]), ((~ atannode_4_w[4]) ^ z_pipeff_4[33]), ((~ atannode_4_w[3]) ^ z_pipeff_4[33]), ((~ atannode_4_w[2]) ^ z_pipeff_4[33]), ((~ atannode_4_w[1]) ^ z_pipeff_4[33]), ((~ atannode_4_w[0]) ^ z_pipeff_4[33])},
		z_subnode_6_w = {((~ atannode_5_w[33]) ^ z_pipeff_5[33]), ((~ atannode_5_w[32]) ^ z_pipeff_5[33]), ((~ atannode_5_w[31]) ^ z_pipeff_5[33]), ((~ atannode_5_w[30]) ^ z_pipeff_5[33]), ((~ atannode_5_w[29]) ^ z_pipeff_5[33]), ((~ atannode_5_w[28]) ^ z_pipeff_5[33]), ((~ atannode_5_w[27]) ^ z_pipeff_5[33]), ((~ atannode_5_w[26]) ^ z_pipeff_5[33]), ((~ atannode_5_w[25]) ^ z_pipeff_5[33]), ((~ atannode_5_w[24]) ^ z_pipeff_5[33]), ((~ atannode_5_w[23]) ^ z_pipeff_5[33]), ((~ atannode_5_w[22]) ^ z_pipeff_5[33]), ((~ atannode_5_w[21]) ^ z_pipeff_5[33]), ((~ atannode_5_w[20]) ^ z_pipeff_5[33]), ((~ atannode_5_w[19]) ^ z_pipeff_5[33]), ((~ atannode_5_w[18]) ^ z_pipeff_5[33]), ((~ atannode_5_w[17]) ^ z_pipeff_5[33]), ((~ atannode_5_w[16]) ^ z_pipeff_5[33]), ((~ atannode_5_w[15]) ^ z_pipeff_5[33]), ((~ atannode_5_w[14]) ^ z_pipeff_5[33]), ((~ atannode_5_w[13]) ^ z_pipeff_5[33]), ((~ atannode_5_w[12]) ^ z_pipeff_5[33]), ((~ atannode_5_w[11]) ^ z_pipeff_5[33]), ((~ atannode_5_w[10]) ^ z_pipeff_5[33]), ((~ atannode_5_w[9]) ^ z_pipeff_5[33]), ((~ atannode_5_w[8]) ^ z_pipeff_5[33]), ((~ atannode_5_w[7]) ^ z_pipeff_5[33]), ((~ atannode_5_w[6]) ^ z_pipeff_5[33]), ((~ atannode_5_w[5]) ^ z_pipeff_5[33]), ((~ atannode_5_w[4]) ^ z_pipeff_5[33]), ((~ atannode_5_w[3]) ^ z_pipeff_5[33]), ((~ atannode_5_w[2]) ^ z_pipeff_5[33]), ((~ atannode_5_w[1]) ^ z_pipeff_5[33]), ((~ atannode_5_w[0]) ^ z_pipeff_5[33])},
		z_subnode_7_w = {((~ atannode_6_w[33]) ^ z_pipeff_6[33]), ((~ atannode_6_w[32]) ^ z_pipeff_6[33]), ((~ atannode_6_w[31]) ^ z_pipeff_6[33]), ((~ atannode_6_w[30]) ^ z_pipeff_6[33]), ((~ atannode_6_w[29]) ^ z_pipeff_6[33]), ((~ atannode_6_w[28]) ^ z_pipeff_6[33]), ((~ atannode_6_w[27]) ^ z_pipeff_6[33]), ((~ atannode_6_w[26]) ^ z_pipeff_6[33]), ((~ atannode_6_w[25]) ^ z_pipeff_6[33]), ((~ atannode_6_w[24]) ^ z_pipeff_6[33]), ((~ atannode_6_w[23]) ^ z_pipeff_6[33]), ((~ atannode_6_w[22]) ^ z_pipeff_6[33]), ((~ atannode_6_w[21]) ^ z_pipeff_6[33]), ((~ atannode_6_w[20]) ^ z_pipeff_6[33]), ((~ atannode_6_w[19]) ^ z_pipeff_6[33]), ((~ atannode_6_w[18]) ^ z_pipeff_6[33]), ((~ atannode_6_w[17]) ^ z_pipeff_6[33]), ((~ atannode_6_w[16]) ^ z_pipeff_6[33]), ((~ atannode_6_w[15]) ^ z_pipeff_6[33]), ((~ atannode_6_w[14]) ^ z_pipeff_6[33]), ((~ atannode_6_w[13]) ^ z_pipeff_6[33]), ((~ atannode_6_w[12]) ^ z_pipeff_6[33]), ((~ atannode_6_w[11]) ^ z_pipeff_6[33]), ((~ atannode_6_w[10]) ^ z_pipeff_6[33]), ((~ atannode_6_w[9]) ^ z_pipeff_6[33]), ((~ atannode_6_w[8]) ^ z_pipeff_6[33]), ((~ atannode_6_w[7]) ^ z_pipeff_6[33]), ((~ atannode_6_w[6]) ^ z_pipeff_6[33]), ((~ atannode_6_w[5]) ^ z_pipeff_6[33]), ((~ atannode_6_w[4]) ^ z_pipeff_6[33]), ((~ atannode_6_w[3]) ^ z_pipeff_6[33]), ((~ atannode_6_w[2]) ^ z_pipeff_6[33]), ((~ atannode_6_w[1]) ^ z_pipeff_6[33]), ((~ atannode_6_w[0]) ^ z_pipeff_6[33])},
		z_subnode_8_w = {((~ atannode_7_w[33]) ^ z_pipeff_7[33]), ((~ atannode_7_w[32]) ^ z_pipeff_7[33]), ((~ atannode_7_w[31]) ^ z_pipeff_7[33]), ((~ atannode_7_w[30]) ^ z_pipeff_7[33]), ((~ atannode_7_w[29]) ^ z_pipeff_7[33]), ((~ atannode_7_w[28]) ^ z_pipeff_7[33]), ((~ atannode_7_w[27]) ^ z_pipeff_7[33]), ((~ atannode_7_w[26]) ^ z_pipeff_7[33]), ((~ atannode_7_w[25]) ^ z_pipeff_7[33]), ((~ atannode_7_w[24]) ^ z_pipeff_7[33]), ((~ atannode_7_w[23]) ^ z_pipeff_7[33]), ((~ atannode_7_w[22]) ^ z_pipeff_7[33]), ((~ atannode_7_w[21]) ^ z_pipeff_7[33]), ((~ atannode_7_w[20]) ^ z_pipeff_7[33]), ((~ atannode_7_w[19]) ^ z_pipeff_7[33]), ((~ atannode_7_w[18]) ^ z_pipeff_7[33]), ((~ atannode_7_w[17]) ^ z_pipeff_7[33]), ((~ atannode_7_w[16]) ^ z_pipeff_7[33]), ((~ atannode_7_w[15]) ^ z_pipeff_7[33]), ((~ atannode_7_w[14]) ^ z_pipeff_7[33]), ((~ atannode_7_w[13]) ^ z_pipeff_7[33]), ((~ atannode_7_w[12]) ^ z_pipeff_7[33]), ((~ atannode_7_w[11]) ^ z_pipeff_7[33]), ((~ atannode_7_w[10]) ^ z_pipeff_7[33]), ((~ atannode_7_w[9]) ^ z_pipeff_7[33]), ((~ atannode_7_w[8]) ^ z_pipeff_7[33]), ((~ atannode_7_w[7]) ^ z_pipeff_7[33]), ((~ atannode_7_w[6]) ^ z_pipeff_7[33]), ((~ atannode_7_w[5]) ^ z_pipeff_7[33]), ((~ atannode_7_w[4]) ^ z_pipeff_7[33]), ((~ atannode_7_w[3]) ^ z_pipeff_7[33]), ((~ atannode_7_w[2]) ^ z_pipeff_7[33]), ((~ atannode_7_w[1]) ^ z_pipeff_7[33]), ((~ atannode_7_w[0]) ^ z_pipeff_7[33])},
		z_subnode_9_w = {((~ atannode_8_w[33]) ^ z_pipeff_8[33]), ((~ atannode_8_w[32]) ^ z_pipeff_8[33]), ((~ atannode_8_w[31]) ^ z_pipeff_8[33]), ((~ atannode_8_w[30]) ^ z_pipeff_8[33]), ((~ atannode_8_w[29]) ^ z_pipeff_8[33]), ((~ atannode_8_w[28]) ^ z_pipeff_8[33]), ((~ atannode_8_w[27]) ^ z_pipeff_8[33]), ((~ atannode_8_w[26]) ^ z_pipeff_8[33]), ((~ atannode_8_w[25]) ^ z_pipeff_8[33]), ((~ atannode_8_w[24]) ^ z_pipeff_8[33]), ((~ atannode_8_w[23]) ^ z_pipeff_8[33]), ((~ atannode_8_w[22]) ^ z_pipeff_8[33]), ((~ atannode_8_w[21]) ^ z_pipeff_8[33]), ((~ atannode_8_w[20]) ^ z_pipeff_8[33]), ((~ atannode_8_w[19]) ^ z_pipeff_8[33]), ((~ atannode_8_w[18]) ^ z_pipeff_8[33]), ((~ atannode_8_w[17]) ^ z_pipeff_8[33]), ((~ atannode_8_w[16]) ^ z_pipeff_8[33]), ((~ atannode_8_w[15]) ^ z_pipeff_8[33]), ((~ atannode_8_w[14]) ^ z_pipeff_8[33]), ((~ atannode_8_w[13]) ^ z_pipeff_8[33]), ((~ atannode_8_w[12]) ^ z_pipeff_8[33]), ((~ atannode_8_w[11]) ^ z_pipeff_8[33]), ((~ atannode_8_w[10]) ^ z_pipeff_8[33]), ((~ atannode_8_w[9]) ^ z_pipeff_8[33]), ((~ atannode_8_w[8]) ^ z_pipeff_8[33]), ((~ atannode_8_w[7]) ^ z_pipeff_8[33]), ((~ atannode_8_w[6]) ^ z_pipeff_8[33]), ((~ atannode_8_w[5]) ^ z_pipeff_8[33]), ((~ atannode_8_w[4]) ^ z_pipeff_8[33]), ((~ atannode_8_w[3]) ^ z_pipeff_8[33]), ((~ atannode_8_w[2]) ^ z_pipeff_8[33]), ((~ atannode_8_w[1]) ^ z_pipeff_8[33]), ((~ atannode_8_w[0]) ^ z_pipeff_8[33])};
endmodule //SIN_bb_altfp_sincos_cordic_m_e5e


//altfp_sincos_range CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" WIDTH_EXP=8 WIDTH_MAN=23 aclr circle clken clock data negcircle
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END


//altfp_sincos_srrt CBX_AUTO_BLACKBOX="ALL" DEVICE_FAMILY="Cyclone V" address basefraction incexponent incmantissa
//VERSION_BEGIN 18.1 cbx_altfp_sincos 2018:09:12:13:04:24:SJ cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_clshift 2018:09:12:13:04:24:SJ cbx_lpm_mult 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END

//synthesis_resources = lpm_mux 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_srrt_koa
	( 
	address,
	basefraction,
	incexponent,
	incmantissa) ;
	input   [7:0]  address;
	output   [35:0]  basefraction;
	output   [7:0]  incexponent;
	output   [55:0]  incmantissa;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [7:0]  address;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [99:0]   wire_mux2_result;

	lpm_mux   mux2
	( 
	.data({{8{1'b0}}, 56'b10011010011011101110000001101101101100010100101011001000, 8'b00110110, 28'b1101100010100101011001100101, 8'b00000001, 56'b10011010011011101110000001101101101100010100101011010000, 8'b00011011, 28'b0110110001010010101100110010, {8{1'b0}}, 56'b10100110100110111011100000011011011011000101001010111000, 8'b00001101, 28'b1011011000101001010110011001, 8'b00000001, 56'b10100110100110111011100000011011011011000101001010110000, 8'b00000110, 28'b1101101100010100101011001101, {8{1'b0}}, 56'b10101001101001101110111000000110110110110001010010110000, 8'b00000011, 28'b0110110110001010010101100110, {8{1'b0}}, 56'b11010100110100110111011100000011011011011000101001100000, 8'b10000001, 28'b1011011011000101001010110011, {8{1'b0}}, 56'b11101010011010011011101110000001101101101100010100011000, 8'b11000000, 28'b1101101101100010100101011010, {8{1'b0}}, 56'b11110101001101001101110111000000110110110110001010011000, 8'b11100000, 28'b0110110110110001010010101101, {8{1'b0}}, 56'b11111010100110100110111011100000011011011011000101010000, 8'b01110000, 28'b0011011011011000101001010110, 8'b00000001, 56'b11111010100110100110111011100000011011011011000101010000, 8'b10111000, 28'b0001101101101100010100101011, 8'b00000010, 56'b11111010100110100110111011100000011011011011000101010000, 8'b11011100, 28'b0000110110110110001010010110, 8'b00000011, 56'b11111010100110100110111011100000011011011011000100101000, 8'b11101110, 28'b0000011011011011000101001011, {8{1'b0}}, 56'b10001111101010011010011011101110000001101101101100011000, 8'b01110111, 28'b0000001101101101100010100101, 8'b00000001, 56'b10001111101010011010011011101110000001101101101100100000, 8'b10111011, 28'b1000000110110110110001010011, {8{1'b0}}, 56'b10100011111010100110100110111011100000011011011011001000, 8'b11011101, 28'b1100000011011011011000101001, {8{1'b0}}, 56'b11010001111101010011010011011101110000001101101101010000, 8'b01101110, 28'b1110000001101101101100010101, {8{1'b0}}, 56'b11101000111110101001101001101110111000000110110110111000, 8'b00110111, 28'b0111000000110110110110001010
, {8{1'b0}}, 56'b11110100011111010100110100110111011100000011011011011000, 8'b10011011, 28'b1011100000011011011011000101, {8{1'b0}}, 56'b11111010001111101010011010011011101110000001101101101000, 8'b01001101, 28'b1101110000001101101101100011, 8'b00000001, 56'b11111010001111101010011010011011101110000001101110000000, 8'b10100110, 28'b1110111000000110110110110001, {8{1'b0}}, 56'b10111110100011111010100110100110111011100000011011100000, 8'b11010011, 28'b0111011100000011011011011001, 8'b00000001, 56'b10111110100011111010100110100110111011100000011011101000, 8'b01101001, 28'b1011101110000001101101101100, {8{1'b0}}, 56'b10101111101000111110101001101001101110111000000110111000, 8'b00110100, 28'b1101110111000000110110110110, 8'b00000001, 56'b10101111101000111110101001101001101110111000000110110000, 8'b10011010, 28'b0110111011100000011011011011, {8{1'b0}}, 56'b10101011111010001111101010011010011011101110000001110000, 8'b01001101, 28'b0011011101110000001101101110, {8{1'b0}}, 56'b11010101111101000111110101001101001101110111000000111000, 8'b10100110, 28'b1001101110111000000110110111, {8{1'b0}}, 56'b11101010111110100011111010100110100110111011100000110000, 8'b01010011, 28'b0100110111011100000011011011, 8'b00000001, 56'b11101010111110100011111010100110100110111011100000100000, 8'b10101001, 28'b1010011011101110000001101110, 8'b00000010, 56'b11101010111110100011111010100110100110111011011111111000, 8'b11010100, 28'b1101001101110111000000110111, {8{1'b0}}, 56'b10011101010111110100011111010100110100110111011100000000, 8'b11101010, 28'b0110100110111011100000011011, 8'b00000001, 56'b10011101010111110100011111010100110100110111011100011000, 8'b11110101, 28'b0011010011011101110000001110, 8'b00000010, 56'b10011101010111110100011111010100110100110111011100011000, 8'b11111010, 28'b1001101001101110111000000111, 8'b00000011, 56'b10011101010111110100011111010100110100110111011100011000, 8'b01111101, 28'b0100110100110111011100000011, 8'b00000100, 56'b10011101010111110100011111010100110100110111011110010000, 8'b00111110, 28'b1010011010011011101110000010
, {8{1'b0}}, 56'b10000100111010101111101000111110101001101001101111000000, 8'b00011111, 28'b0101001101001101110111000001, {8{1'b0}}, 56'b11000010011101010111110100011111010100110100110111011000, 8'b10001111, 28'b1010100110100110111011100000, {8{1'b0}}, 56'b11100001001110101011111010001111101010011010011011110000, 8'b01000111, 28'b1101010011010011011101110000, {8{1'b0}}, 56'b11110000100111010101111101000111110101001101001110000000, 8'b10100011, 28'b1110101001101001101110111000, {8{1'b0}}, 56'b11111000010011101010111110100011111010100110100110111000, 8'b11010001, 28'b1111010100110100110111011100, {8{1'b0}}, 56'b11111100001001110101011111010001111101010011010011011000, 8'b11101000, 28'b1111101010011010011011101110, {8{1'b0}}, 56'b11111110000100111010101111101000111110101001101001110000, 8'b11110100, 28'b0111110101001101001101110111, 8'b00000001, 56'b11111110000100111010101111101000111110101001101010000000, 8'b11111010, 28'b0011111010100110100110111100, 8'b00000010, 56'b11111110000100111010101111101000111110101001101001110000, 8'b01111101, 28'b0001111101010011010011011110, {8{1'b0}}, 56'b10011111110000100111010101111101000111110101001101011000, 8'b10111110, 28'b1000111110101001101001101111, 8'b00000001, 56'b10011111110000100111010101111101000111110101001101100000, 8'b01011111, 28'b0100011111010100110100110111, {8{1'b0}}, 56'b10100111111100001001110101011111010001111101010011010000, 8'b10101111, 28'b1010001111101010011010011100, 8'b00000001, 56'b10100111111100001001110101011111010001111101010011100000, 8'b01010111, 28'b1101000111110101001101001110, 8'b00000010, 56'b10100111111100001001110101011111010001111101010011010000, 8'b10101011, 28'b1110100011111010100110100111, {8{1'b0}}, 56'b10010100111111100001001110101011111010001111101010011000, 8'b11010101, 28'b1111010001111101010011010011, 8'b00000001, 56'b10010100111111100001001110101011111010001111101010101000, 8'b11101010, 28'b1111101000111110101001101010, {8{1'b0}}, 56'b10100101001111111000010011101010111110100011111010101000, 8'b01110101, 28'b0111110100011111010100110101
, 8'b00000001, 56'b10100101001111111000010011101010111110100011111010101000, 8'b00111010, 28'b1011111010001111101010011010, {8{1'b0}}, 56'b10101001010011111110000100111010101111101000111110101000, 8'b10011101, 28'b0101111101000111110101001101, 8'b00000001, 56'b10101001010011111110000100111010101111101000111110111000, 8'b01001110, 28'b1010111110100011111010100111, 8'b00000010, 56'b10101001010011111110000100111010101111101000111110111000, 8'b00100111, 28'b0101011111010001111101010011, 8'b00000011, 56'b10101001010011111110000100111010101111101000111110111000, 8'b00010011, 28'b1010101111101000111110101010, 8'b00000100, 56'b10101001010011111110000100111010101111101000111110111000, 8'b00001001, 28'b1101010111110100011111010101, 8'b00000101, 56'b10101001010011111110000100111010101111101001000000110000, 8'b10000100, 28'b1110101011111010001111101010, {8{1'b0}}, 56'b10000010101001010011111110000100111010101111101001001000, 8'b11000010, 28'b0111010101111101000111110101, 8'b00000001, 56'b10000010101001010011111110000100111010101111101001010000, 8'b11100001, 28'b0011101010111110100011111011, 8'b00000010, 56'b10000010101001010011111110000100111010101111101000111000, 8'b11110000, 28'b1001110101011111010001111101, 8'b00000011, 56'b10000010101001010011111110000100111010101111101001100000, 8'b11111000, 28'b0100111010101111101000111111, {8{1'b0}}, 56'b10001000001010100101001111111000010011101010111110100000, 8'b11111100, 28'b0010011101010111110100011111, 8'b00000001, 56'b10001000001010100101001111111000010011101010111110100000, 8'b11111110, 28'b0001001110101011111010010000, 8'b00000010, 56'b10001000001010100101001111111000010011101010111110100000, 8'b01111111, 28'b0000100111010101111101001000, {8{1'b0}}, 56'b10010001000001010100101001111111000010011101011000010000, 8'b00111111, 28'b1000010011101010111110100100, {8{1'b0}}, 56'b11001000100000101010010100111111100001001110101011111000, 8'b10011111, 28'b1100001001110101011111010010, {8{1'b0}}, 56'b11100100010000010101001010011111110000100111010101111000, 8'b01001111, 28'b1110000100111010101111101001
, 8'b00000001, 56'b11100100010000010101001010011111110000100111010101110000, 8'b10100111, 28'b1111000010011101010111110100, 8'b00000010, 56'b11100100010000010101001010011111110000100111010110001000, 8'b01010011, 28'b1111100001001110101011111010, {8{1'b0}}, 56'b10011100100010000010101001010011111110000100111010111000, 8'b00101001, 28'b1111110000100111010101111101, 8'b00000001, 56'b10011100100010000010101001010011111110000100111010111000, 8'b10010100, 28'b1111111000010011101010111111, 8'b00000010, 56'b10011100100010000010101001010011111110000100111010110000, 8'b01001010, 28'b0111111100001001110101011111, {8{1'b0}}, 56'b10010011100100010000010101001010011111110000100111011000, 8'b10100101, 28'b0011111110000100111010110000, {8{1'b0}}, 56'b11001001110010001000001010100101001111111000010011101000, 8'b01010010, 28'b1001111111000010011101011000, {8{1'b0}}, 56'b11100100111001000100000101010010100111111100001001111000, 8'b10101001, 28'b0100111111100001001110101100, 8'b00000001, 56'b11100100111001000100000101010010100111111100001001101000, 8'b01010100, 28'b1010011111110000100111010110, {8{1'b0}}, 56'b10111001001110010001000001010100101001111111000010011000, 8'b00101010, 28'b0101001111111000010011101011, {8{1'b0}}, 56'b11011100100111001000100000101010010100111111100001011000, 8'b00010101, 28'b0010100111111100001001110101, 8'b00000001, 56'b11011100100111001000100000101010010100111111100001011000, 8'b00001010, 28'b1001010011111110000100111011, {8{1'b0}}, 56'b10110111001001110010001000001010100101001111111000011000, 8'b00000101, 28'b0100101001111111000010011101, {8{1'b0}}, 56'b11011011100100111001000100000101010010100111111100001000, 8'b10000010, 28'b1010010100111111100001001111, 8'b00000001, 56'b11011011100100111001000100000101010010100111111011111000, 8'b01000001, 28'b0101001010011111110000100111, 8'b00000010, 56'b11011011100100111001000100000101010010100111111100001000, 8'b00100000, 28'b1010100101001111111000010100, 8'b00000011, 56'b11011011100100111001000100000101010010100111111100100000, 8'b00010000, 28'b0101010010100111111100001010
, 8'b00000100, 56'b11011011100100111001000100000101010010100111111010111000, 8'b10001000, 28'b0010101001010011111110000101, 8'b00000101, 56'b11011011100100111001000100000101010010100111111001101000, 8'b01000100, 28'b0001010100101001111111000010, {8{1'b0}}, 56'b10000011011011100100111001000100000101010010101000000000, 8'b00100010, 28'b0000101010010100111111100001, {8{1'b0}}, 56'b11000001101101110010011100100010000010101001010100001000, 8'b10010001, 28'b0000010101001010011111110001, 8'b00000001, 56'b11000001101101110010011100100010000010101001010011110000, 8'b11001000, 28'b1000001010100101001111111000, 8'b00000010, 56'b11000001101101110010011100100010000010101001010100001000, 8'b11100100, 28'b0100000101010010100111111100, {8{1'b0}}, 56'b10011000001101101110010011100100010000010101001010100000, 8'b01110010, 28'b0010000010101001010011111110, {8{1'b0}}, 56'b11001100000110110111001001110010001000001010100101010000, 8'b00111001, 28'b0001000001010100101001111111, {8{1'b0}}, 56'b11100110000011011011100100111001000100000101010010101000, 8'b10011100, 28'b1000100000101010010101000000, {8{1'b0}}, 56'b11110011000001101101110010011100100010000010101001001000, 8'b01001110, 28'b0100010000010101001010100000, {8{1'b0}}, 56'b11111001100000110110111001001110010001000001010100101000, 8'b00100111, 28'b0010001000001010100101010000, 8'b00000001, 56'b11111001100000110110111001001110010001000001010100101000, 8'b10010011, 28'b1001000100000101010010101000, {8{1'b0}}, 56'b10111110011000001101101110010011100100010000010101010000, 8'b11001001, 28'b1100100010000010101001010100, 8'b00000001, 56'b10111110011000001101101110010011100100010000010101011000, 8'b11100100, 28'b1110010001000001010100101010, 8'b00000010, 56'b10111110011000001101101110010011100100010000010101000000, 8'b01110010, 28'b0111001000100000101010010101, 8'b00000011, 56'b10111110011000001101101110010011100100010000010101110000, 8'b10111001, 28'b0011100100010000010101001010, {8{1'b0}}, 56'b10001011111001100000110110111001001110010001000001011000, 8'b11011100, 28'b1001110010001000001010100101
, 8'b00000001, 56'b10001011111001100000110110111001001110010001000001010000, 8'b01101110, 28'b0100111001000100000101010011, {8{1'b0}}, 56'b10100010111110011000001101101110010011100100010000010000, 8'b10110111, 28'b0010011100100010000010101001, 8'b00000001, 56'b10100010111110011000001101101110010011100100010000011000, 8'b11011011, 28'b1001001110010001000001010101, 8'b00000010, 56'b10100010111110011000001101101110010011100100010000011000, 8'b01101101, 28'b1100100111001000100000101010, 8'b00000011, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00110110, 28'b1110010011100100010000010101, 8'b00000100, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00011011, 28'b0111001001110010001000001011, 8'b00000101, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00001101, 28'b1011100100111001000100000101, 8'b00000110, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00000110, 28'b1101110010011100100010000011, 8'b00000111, 56'b10100010111110011000001101101110010011100100010000011000, 8'b10000011, 28'b0110111001001110010001000001, 8'b00001000, 56'b10100010111110011000001101101110010011100101100001111000, 8'b11000001, 28'b1011011100100111001000100001, 8'b00001001, 56'b10100010111110011000001101101110010011100100010000011000, 8'b01100000, 28'b1101101110010011100100010000, 8'b00001010, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00110000, 28'b0110110111001001110010001000, 8'b00001011, 56'b10100010111110011000001101101110010011100100010000011000, 8'b10011000, 28'b0011011011100100111001000100, 8'b00001100, 56'b10100010111110011000001101101110010011100100010000011000, 8'b11001100, 28'b0001101101110010011100100010, 8'b00001101, 56'b10100010111110011000001101101110010011100100010000011000, 8'b11100110, 28'b0000110110111001001110010001, 8'b00001110, 56'b10100010111110011000001101101110010011100100010000011000, 8'b11110011, 28'b0000011011011100100111001001, 8'b00001111, 56'b10100010111110011000001101101110010011100100010000011000, 8'b11111001, 28'b1000001101101110010011100100
, 8'b00010000, 56'b10100010111110011000001101101110010011100100010000011000, 8'b01111100, 28'b1100000110110111001001110010, 8'b00010001, 56'b10100010111110011000001101101110001001011000010110111000, 8'b10111110, 28'b0110000011011011100100111001, 8'b00010010, 56'b10100010111110011000001101101110010011100100010000011000, 8'b01011111, 28'b0011000001101101110010011101, 8'b00010011, 56'b10100010111110011000001101101110011000101010001101001000, 8'b00101111, 28'b1001100000110110111001001110, 8'b00010100, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00010111, 28'b1100110000011011011100100111, 8'b00010101, 56'b10100010111110011000001101101110010011100100010000011000, 8'b10001011, 28'b1110011000001101101110010100, 8'b00010110, 56'b10100010111110011000001101101110010011100100010000011000, 8'b01000101, 28'b1111001100000110110111001010, 8'b00010111, 56'b10100010111110011000001101101110010011100100010000011000, 8'b10100010, 28'b1111100110000011011011100101, 8'b00011000, 56'b10100010111110011000001101110000110110100010101000101000, 8'b01010001, 28'b0111110011000001101101110010, 8'b00011001, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00101000, 28'b1011111001100000110110111001, 8'b00011010, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00010100, 28'b0101111100110000011011011101, 8'b00011011, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00001010, 28'b0010111110011000001101101110, 8'b00011100, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00000101, 28'b0001011111001100000110110111, 8'b00011101, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00000010, 28'b1000101111100110000011011100, 8'b00011110, 56'b10100010111110011000001101101110010011100100010000011000, 8'b00000001, 28'b0100010111110011000001101110, 8'b00011111, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b1010001011111001100000110111, 8'b00100000, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0101000101111100110000011011
, 8'b00100001, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0010100010111110011000001110, 8'b00100010, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0001010001011111001100000111, 8'b00100011, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000101000101111100110000011, 8'b00100100, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000010100010111110011000010, 8'b00100101, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000001010001011111001100001, 8'b00100110, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000000101000101111100110000, 8'b00100111, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000000010100010111110011000, 8'b00101000, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000000001010001011111001100, 8'b00101001, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000000000101000101111100110, 8'b00101010, 56'b10100010111110011000001101101110010011100100010000011000, {8{1'b0}}, 28'b0000000000010100010111110011, {110{{100{1'b0}}}}}),
	.result(wire_mux2_result),
	.sel(address)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mux2.lpm_size = 256,
		mux2.lpm_width = 100,
		mux2.lpm_widths = 8,
		mux2.lpm_type = "lpm_mux";
	assign
		basefraction = wire_mux2_result[35:0],
		incexponent = wire_mux2_result[99:92],
		incmantissa = wire_mux2_result[91:36];
endmodule //SIN_bb_altfp_sincos_srrt_koa


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" WIDTH=32 WIDTHAD=5 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=16 WIDTHAD=4 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=8 WIDTHAD=3 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=4 WIDTHAD=2 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=2 WIDTHAD=1 data q zero
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_3e8
	( 
	data,
	q,
	zero) ;
	input   [1:0]  data;
	output   [0:0]  q;
	output   zero;


	assign
		q = {data[1]},
		zero = (~ (data[0] | data[1]));
endmodule //SIN_bb_altpriority_encoder_3e8


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=2 WIDTHAD=1 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_3v7
	( 
	data,
	q) ;
	input   [1:0]  data;
	output   [0:0]  q;


	assign
		q = {data[1]};
endmodule //SIN_bb_altpriority_encoder_3v7

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_6v7
	( 
	data,
	q) ;
	input   [3:0]  data;
	output   [1:0]  q;

	wire  [0:0]   wire_altpriority_encoder10_q;
	wire  wire_altpriority_encoder10_zero;
	wire  [0:0]   wire_altpriority_encoder9_q;

	SIN_bb_altpriority_encoder_3e8   altpriority_encoder10
	( 
	.data(data[3:2]),
	.q(wire_altpriority_encoder10_q),
	.zero(wire_altpriority_encoder10_zero));
	SIN_bb_altpriority_encoder_3v7   altpriority_encoder9
	( 
	.data(data[1:0]),
	.q(wire_altpriority_encoder9_q));
	assign
		q = {(~ wire_altpriority_encoder10_zero), ((wire_altpriority_encoder10_zero & wire_altpriority_encoder9_q) | ((~ wire_altpriority_encoder10_zero) & wire_altpriority_encoder10_q))};
endmodule //SIN_bb_altpriority_encoder_6v7


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=4 WIDTHAD=2 data q zero
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_6e8
	( 
	data,
	q,
	zero) ;
	input   [3:0]  data;
	output   [1:0]  q;
	output   zero;

	wire  [0:0]   wire_altpriority_encoder11_q;
	wire  wire_altpriority_encoder11_zero;
	wire  [0:0]   wire_altpriority_encoder12_q;
	wire  wire_altpriority_encoder12_zero;

	SIN_bb_altpriority_encoder_3e8   altpriority_encoder11
	( 
	.data(data[1:0]),
	.q(wire_altpriority_encoder11_q),
	.zero(wire_altpriority_encoder11_zero));
	SIN_bb_altpriority_encoder_3e8   altpriority_encoder12
	( 
	.data(data[3:2]),
	.q(wire_altpriority_encoder12_q),
	.zero(wire_altpriority_encoder12_zero));
	assign
		q = {(~ wire_altpriority_encoder12_zero), ((wire_altpriority_encoder12_zero & wire_altpriority_encoder11_q) | ((~ wire_altpriority_encoder12_zero) & wire_altpriority_encoder12_q))},
		zero = (wire_altpriority_encoder11_zero & wire_altpriority_encoder12_zero);
endmodule //SIN_bb_altpriority_encoder_6e8

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_bv7
	( 
	data,
	q) ;
	input   [7:0]  data;
	output   [2:0]  q;

	wire  [1:0]   wire_altpriority_encoder7_q;
	wire  [1:0]   wire_altpriority_encoder8_q;
	wire  wire_altpriority_encoder8_zero;

	SIN_bb_altpriority_encoder_6v7   altpriority_encoder7
	( 
	.data(data[3:0]),
	.q(wire_altpriority_encoder7_q));
	SIN_bb_altpriority_encoder_6e8   altpriority_encoder8
	( 
	.data(data[7:4]),
	.q(wire_altpriority_encoder8_q),
	.zero(wire_altpriority_encoder8_zero));
	assign
		q = {(~ wire_altpriority_encoder8_zero), (({2{wire_altpriority_encoder8_zero}} & wire_altpriority_encoder7_q) | ({2{(~ wire_altpriority_encoder8_zero)}} & wire_altpriority_encoder8_q))};
endmodule //SIN_bb_altpriority_encoder_bv7


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=8 WIDTHAD=3 data q zero
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_be8
	( 
	data,
	q,
	zero) ;
	input   [7:0]  data;
	output   [2:0]  q;
	output   zero;

	wire  [1:0]   wire_altpriority_encoder13_q;
	wire  wire_altpriority_encoder13_zero;
	wire  [1:0]   wire_altpriority_encoder14_q;
	wire  wire_altpriority_encoder14_zero;

	SIN_bb_altpriority_encoder_6e8   altpriority_encoder13
	( 
	.data(data[3:0]),
	.q(wire_altpriority_encoder13_q),
	.zero(wire_altpriority_encoder13_zero));
	SIN_bb_altpriority_encoder_6e8   altpriority_encoder14
	( 
	.data(data[7:4]),
	.q(wire_altpriority_encoder14_q),
	.zero(wire_altpriority_encoder14_zero));
	assign
		q = {(~ wire_altpriority_encoder14_zero), (({2{wire_altpriority_encoder14_zero}} & wire_altpriority_encoder13_q) | ({2{(~ wire_altpriority_encoder14_zero)}} & wire_altpriority_encoder14_q))},
		zero = (wire_altpriority_encoder13_zero & wire_altpriority_encoder14_zero);
endmodule //SIN_bb_altpriority_encoder_be8

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_r08
	( 
	data,
	q) ;
	input   [15:0]  data;
	output   [3:0]  q;

	wire  [2:0]   wire_altpriority_encoder5_q;
	wire  [2:0]   wire_altpriority_encoder6_q;
	wire  wire_altpriority_encoder6_zero;

	SIN_bb_altpriority_encoder_bv7   altpriority_encoder5
	( 
	.data(data[7:0]),
	.q(wire_altpriority_encoder5_q));
	SIN_bb_altpriority_encoder_be8   altpriority_encoder6
	( 
	.data(data[15:8]),
	.q(wire_altpriority_encoder6_q),
	.zero(wire_altpriority_encoder6_zero));
	assign
		q = {(~ wire_altpriority_encoder6_zero), (({3{wire_altpriority_encoder6_zero}} & wire_altpriority_encoder5_q) | ({3{(~ wire_altpriority_encoder6_zero)}} & wire_altpriority_encoder6_q))};
endmodule //SIN_bb_altpriority_encoder_r08


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=16 WIDTHAD=4 data q zero
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_rf8
	( 
	data,
	q,
	zero) ;
	input   [15:0]  data;
	output   [3:0]  q;
	output   zero;

	wire  [2:0]   wire_altpriority_encoder15_q;
	wire  wire_altpriority_encoder15_zero;
	wire  [2:0]   wire_altpriority_encoder16_q;
	wire  wire_altpriority_encoder16_zero;

	SIN_bb_altpriority_encoder_be8   altpriority_encoder15
	( 
	.data(data[7:0]),
	.q(wire_altpriority_encoder15_q),
	.zero(wire_altpriority_encoder15_zero));
	SIN_bb_altpriority_encoder_be8   altpriority_encoder16
	( 
	.data(data[15:8]),
	.q(wire_altpriority_encoder16_q),
	.zero(wire_altpriority_encoder16_zero));
	assign
		q = {(~ wire_altpriority_encoder16_zero), (({3{wire_altpriority_encoder16_zero}} & wire_altpriority_encoder15_q) | ({3{(~ wire_altpriority_encoder16_zero)}} & wire_altpriority_encoder16_q))},
		zero = (wire_altpriority_encoder15_zero & wire_altpriority_encoder16_zero);
endmodule //SIN_bb_altpriority_encoder_rf8

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_qb6
	( 
	data,
	q) ;
	input   [31:0]  data;
	output   [4:0]  q;

	wire  [3:0]   wire_altpriority_encoder3_q;
	wire  [3:0]   wire_altpriority_encoder4_q;
	wire  wire_altpriority_encoder4_zero;

	SIN_bb_altpriority_encoder_r08   altpriority_encoder3
	( 
	.data(data[15:0]),
	.q(wire_altpriority_encoder3_q));
	SIN_bb_altpriority_encoder_rf8   altpriority_encoder4
	( 
	.data(data[31:16]),
	.q(wire_altpriority_encoder4_q),
	.zero(wire_altpriority_encoder4_zero));
	assign
		q = {(~ wire_altpriority_encoder4_zero), (({4{wire_altpriority_encoder4_zero}} & wire_altpriority_encoder3_q) | ({4{(~ wire_altpriority_encoder4_zero)}} & wire_altpriority_encoder4_q))};
endmodule //SIN_bb_altpriority_encoder_qb6

//synthesis_resources = lpm_add_sub 8 lpm_clshift 2 lpm_mult 1 lpm_mux 1 reg 780 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_range_b6c
	( 
	aclr,
	circle,
	clken,
	clock,
	data,
	negcircle) ;
	input   aclr;
	output   [35:0]  circle;
	input   clken;
	input   clock;
	input   [31:0]  data;
	output   [35:0]  negcircle;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   clken;
	tri0   clock;
	tri0   [31:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [35:0]   wire_fp_range_table1_basefraction;
	wire  [7:0]   wire_fp_range_table1_incexponent;
	wire  [55:0]   wire_fp_range_table1_incmantissa;
	wire  [4:0]   wire_clz23_q;
	reg	[35:0]	basefractiondelff;
	reg	[35:0]	basefractionff;
	reg	[35:0]	cbfd_0;
	reg	[35:0]	cbfd_1;
	reg	[35:0]	cbfd_2;
	reg	[35:0]	cbfd_3;
	reg	[35:0]	cbfd_4;
	reg	[35:0]	cbfd_5;
	reg	[36:0]	circleff;
	reg	[7:0]	exponentff;
	reg	[7:0]	incexponentff;
	reg	[55:0]	incmantissaff;
	reg	[4:0]	leadff;
	reg	[22:0]	mantissadelff;
	reg	[22:0]	mantissaff;
	reg	[22:0]	mantissamultiplierff;
	reg	[77:0]	multipliernormff;
	reg	[35:0]	negbasefractiondelff;
	reg	[36:0]	negcircleff;
	reg	[8:0]	negrangeexponentff4;
	reg	[8:0]	negrangeexponentff5;
	reg	[8:0]	rangeexponentff_0;
	reg	[8:0]	rangeexponentff_1;
	reg	[8:0]	rangeexponentff_2;
	reg	[8:0]	rangeexponentff_3;
	reg	[8:0]	rangeexponentff_4;
	reg	[8:0]	rangeexponentff_5;
	reg	[77:0]	rotateff;
	reg	[7:0]	tableaddressff;
	wire  [36:0]   wire_circle_add_result;
	wire  [8:0]   wire_exponent_adjust_sub_result;
	wire  [35:0]   wire_negbasedractiondel_sub_result;
	wire  [36:0]   wire_negcircle_add_result;
	wire  [8:0]   wire_negrangeexponent_sub4_result;
	wire  [8:0]   wire_negrangeexponent_sub5_result;
	wire  [8:0]   wire_rangeexponent_sub1_result;
	wire  [8:0]   wire_rangeexponent_sub5_result;
	wire  [22:0]   wire_csftin_result;
	wire  [77:0]   wire_fp_lsft_rsft78_result;
	wire  [78:0]   wire_mult23x56_result;
	wire  [35:0]  basefractiondelnode_w;
	wire  [35:0]  basefractionnode_w;
	wire  [36:0]  circlenode_w;
	wire  [8:0]  const_23_w;
	wire  [7:0]  incexponentnode_w;
	wire  [55:0]  incmantissanode_w;
	wire  [4:0]  leadnode_w;
	wire  [8:0]  mantissaexponentnode_w;
	wire  [22:0]  mantissamultipliernode_w;
	wire  [78:0]  multipliernode_w;
	wire  [77:0]  multipliernormnode_w;
	wire  [35:0]  negbasefractiondelnode_w;
	wire  [36:0]  negcirclenode_w;
	wire  [35:0]  negrotatenode_w;
	wire  [77:0]  rotatenode_w;

	SIN_bb_altfp_sincos_srrt_koa   fp_range_table1
	( 
	.address(tableaddressff),
	.basefraction(wire_fp_range_table1_basefraction),
	.incexponent(wire_fp_range_table1_incexponent),
	.incmantissa(wire_fp_range_table1_incmantissa));
	SIN_bb_altpriority_encoder_qb6   clz23
	( 
	.data({mantissaff, {9{1'b1}}}),
	.q(wire_clz23_q));
	// synopsys translate_off
	initial
		basefractiondelff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) basefractiondelff <= 36'b0;
		else if  (clken == 1'b1)   basefractiondelff <= basefractiondelnode_w;
	// synopsys translate_off
	initial
		basefractionff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) basefractionff <= 36'b0;
		else if  (clken == 1'b1)   basefractionff <= basefractionnode_w;
	// synopsys translate_off
	initial
		cbfd_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cbfd_0 <= 36'b0;
		else if  (clken == 1'b1)   cbfd_0 <= basefractionff;
	// synopsys translate_off
	initial
		cbfd_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cbfd_1 <= 36'b0;
		else if  (clken == 1'b1)   cbfd_1 <= cbfd_0;
	// synopsys translate_off
	initial
		cbfd_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cbfd_2 <= 36'b0;
		else if  (clken == 1'b1)   cbfd_2 <= cbfd_1;
	// synopsys translate_off
	initial
		cbfd_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cbfd_3 <= 36'b0;
		else if  (clken == 1'b1)   cbfd_3 <= cbfd_2;
	// synopsys translate_off
	initial
		cbfd_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cbfd_4 <= 36'b0;
		else if  (clken == 1'b1)   cbfd_4 <= cbfd_3;
	// synopsys translate_off
	initial
		cbfd_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) cbfd_5 <= 36'b0;
		else if  (clken == 1'b1)   cbfd_5 <= cbfd_4;
	// synopsys translate_off
	initial
		circleff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) circleff <= 37'b0;
		else if  (clken == 1'b1)   circleff <= circlenode_w;
	// synopsys translate_off
	initial
		exponentff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentff <= 8'b0;
		else if  (clken == 1'b1)   exponentff <= data[30:23];
	// synopsys translate_off
	initial
		incexponentff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) incexponentff <= 8'b0;
		else if  (clken == 1'b1)   incexponentff <= incexponentnode_w;
	// synopsys translate_off
	initial
		incmantissaff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) incmantissaff <= 56'b0;
		else if  (clken == 1'b1)   incmantissaff <= incmantissanode_w;
	// synopsys translate_off
	initial
		leadff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) leadff <= 5'b0;
		else if  (clken == 1'b1)   leadff <= leadnode_w;
	// synopsys translate_off
	initial
		mantissadelff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) mantissadelff <= 23'b0;
		else if  (clken == 1'b1)   mantissadelff <= mantissaff;
	// synopsys translate_off
	initial
		mantissaff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) mantissaff <= 23'b0;
		else if  (clken == 1'b1)   mantissaff <= data[22:0];
	// synopsys translate_off
	initial
		mantissamultiplierff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) mantissamultiplierff <= 23'b0;
		else if  (clken == 1'b1)   mantissamultiplierff <= mantissamultipliernode_w;
	// synopsys translate_off
	initial
		multipliernormff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) multipliernormff <= 78'b0;
		else if  (clken == 1'b1)   multipliernormff <= multipliernormnode_w;
	// synopsys translate_off
	initial
		negbasefractiondelff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) negbasefractiondelff <= 36'b0;
		else if  (clken == 1'b1)   negbasefractiondelff <= negbasefractiondelnode_w;
	// synopsys translate_off
	initial
		negcircleff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) negcircleff <= 37'b0;
		else if  (clken == 1'b1)   negcircleff <= negcirclenode_w;
	// synopsys translate_off
	initial
		negrangeexponentff4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) negrangeexponentff4 <= 9'b0;
		else if  (clken == 1'b1)   negrangeexponentff4 <= wire_negrangeexponent_sub4_result;
	// synopsys translate_off
	initial
		negrangeexponentff5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) negrangeexponentff5 <= 9'b0;
		else if  (clken == 1'b1)   negrangeexponentff5 <= wire_negrangeexponent_sub5_result;
	// synopsys translate_off
	initial
		rangeexponentff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rangeexponentff_0 <= 9'b0;
		else if  (clken == 1'b1)   rangeexponentff_0 <= mantissaexponentnode_w;
	// synopsys translate_off
	initial
		rangeexponentff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rangeexponentff_1 <= 9'b0;
		else if  (clken == 1'b1)   rangeexponentff_1 <= wire_rangeexponent_sub1_result;
	// synopsys translate_off
	initial
		rangeexponentff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rangeexponentff_2 <= 9'b0;
		else if  (clken == 1'b1)   rangeexponentff_2 <= rangeexponentff_1;
	// synopsys translate_off
	initial
		rangeexponentff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rangeexponentff_3 <= 9'b0;
		else if  (clken == 1'b1)   rangeexponentff_3 <= rangeexponentff_2;
	// synopsys translate_off
	initial
		rangeexponentff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rangeexponentff_4 <= 9'b0;
		else if  (clken == 1'b1)   rangeexponentff_4 <= rangeexponentff_3;
	// synopsys translate_off
	initial
		rangeexponentff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rangeexponentff_5 <= 9'b0;
		else if  (clken == 1'b1)   rangeexponentff_5 <= wire_rangeexponent_sub5_result;
	// synopsys translate_off
	initial
		rotateff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rotateff <= 78'b0;
		else if  (clken == 1'b1)   rotateff <= rotatenode_w;
	// synopsys translate_off
	initial
		tableaddressff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) tableaddressff <= 8'b0;
		else if  (clken == 1'b1)   tableaddressff <= exponentff;
	lpm_add_sub   circle_add
	( 
	.cout(),
	.dataa({1'b0, basefractiondelff}),
	.datab({1'b0, rotateff[77:42]}),
	.overflow(),
	.result(wire_circle_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		circle_add.lpm_direction = "ADD",
		circle_add.lpm_representation = "UNSIGNED",
		circle_add.lpm_width = 37,
		circle_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponent_adjust_sub
	( 
	.cout(),
	.dataa(const_23_w),
	.datab({{4{1'b0}}, leadff}),
	.overflow(),
	.result(wire_exponent_adjust_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponent_adjust_sub.lpm_direction = "SUB",
		exponent_adjust_sub.lpm_representation = "UNSIGNED",
		exponent_adjust_sub.lpm_width = 9,
		exponent_adjust_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   negbasedractiondel_sub
	( 
	.cout(),
	.dataa({36{1'b0}}),
	.datab(basefractiondelnode_w[35:0]),
	.overflow(),
	.result(wire_negbasedractiondel_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		negbasedractiondel_sub.lpm_direction = "SUB",
		negbasedractiondel_sub.lpm_representation = "UNSIGNED",
		negbasedractiondel_sub.lpm_width = 36,
		negbasedractiondel_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   negcircle_add
	( 
	.cin(1'b1),
	.cout(),
	.dataa({1'b1, negbasefractiondelff}),
	.datab({1'b1, negrotatenode_w}),
	.overflow(),
	.result(wire_negcircle_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		negcircle_add.lpm_direction = "ADD",
		negcircle_add.lpm_representation = "UNSIGNED",
		negcircle_add.lpm_width = 37,
		negcircle_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   negrangeexponent_sub4
	( 
	.cout(),
	.dataa({1'b1, {8{1'b0}}}),
	.datab(rangeexponentff_3),
	.overflow(),
	.result(wire_negrangeexponent_sub4_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		negrangeexponent_sub4.lpm_direction = "SUB",
		negrangeexponent_sub4.lpm_representation = "UNSIGNED",
		negrangeexponent_sub4.lpm_width = 9,
		negrangeexponent_sub4.lpm_type = "lpm_add_sub";
	lpm_add_sub   negrangeexponent_sub5
	( 
	.cout(),
	.dataa(negrangeexponentff4),
	.datab({{8{1'b0}}, (~ multipliernode_w[78])}),
	.overflow(),
	.result(wire_negrangeexponent_sub5_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		negrangeexponent_sub5.lpm_direction = "ADD",
		negrangeexponent_sub5.lpm_representation = "UNSIGNED",
		negrangeexponent_sub5.lpm_width = 9,
		negrangeexponent_sub5.lpm_type = "lpm_add_sub";
	lpm_add_sub   rangeexponent_sub1
	( 
	.cout(),
	.dataa(rangeexponentff_0),
	.datab({1'b0, incexponentff}),
	.overflow(),
	.result(wire_rangeexponent_sub1_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		rangeexponent_sub1.lpm_direction = "SUB",
		rangeexponent_sub1.lpm_representation = "UNSIGNED",
		rangeexponent_sub1.lpm_width = 9,
		rangeexponent_sub1.lpm_type = "lpm_add_sub";
	lpm_add_sub   rangeexponent_sub5
	( 
	.cout(),
	.dataa(rangeexponentff_4),
	.datab({{8{1'b0}}, (~ multipliernode_w[78])}),
	.overflow(),
	.result(wire_rangeexponent_sub5_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		rangeexponent_sub5.lpm_direction = "SUB",
		rangeexponent_sub5.lpm_representation = "UNSIGNED",
		rangeexponent_sub5.lpm_width = 9,
		rangeexponent_sub5.lpm_type = "lpm_add_sub";
	lpm_clshift   csftin
	( 
	.data(mantissadelff),
	.direction(1'b0),
	.distance(leadff),
	.overflow(),
	.result(wire_csftin_result),
	.underflow()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		csftin.lpm_width = 23,
		csftin.lpm_widthdist = 5,
		csftin.lpm_type = "lpm_clshift";
	lpm_clshift   fp_lsft_rsft78
	( 
	.aclr(aclr),
	.clken(clken),
	.clock(clock),
	.data(multipliernormff),
	.direction(negrangeexponentff5[8]),
	.distance((({7{(~ negrangeexponentff5[8])}} & rangeexponentff_5[6:0]) | ({7{negrangeexponentff5[8]}} & negrangeexponentff5[6:0]))),
	.overflow(),
	.result(wire_fp_lsft_rsft78_result),
	.underflow());
	defparam
		fp_lsft_rsft78.lpm_pipeline = 1,
		fp_lsft_rsft78.lpm_width = 78,
		fp_lsft_rsft78.lpm_widthdist = 7,
		fp_lsft_rsft78.lpm_type = "lpm_clshift";
	lpm_mult   mult23x56
	( 
	.aclr(aclr),
	.clken(clken),
	.clock(clock),
	.dataa(mantissamultiplierff),
	.datab(incmantissaff),
	.result(wire_mult23x56_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sclr(1'b0),
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mult23x56.lpm_pipeline = 4,
		mult23x56.lpm_representation = "UNSIGNED",
		mult23x56.lpm_widtha = 23,
		mult23x56.lpm_widthb = 56,
		mult23x56.lpm_widthp = 79,
		mult23x56.lpm_type = "lpm_mult";
	assign
		basefractiondelnode_w = cbfd_5,
		basefractionnode_w = wire_fp_range_table1_basefraction,
		circle = circleff[35:0],
		circlenode_w = wire_circle_add_result,
		const_23_w = 9'b000010111,
		incexponentnode_w = wire_fp_range_table1_incexponent,
		incmantissanode_w = wire_fp_range_table1_incmantissa,
		leadnode_w = (~ wire_clz23_q),
		mantissaexponentnode_w = wire_exponent_adjust_sub_result,
		mantissamultipliernode_w = wire_csftin_result,
		multipliernode_w = wire_mult23x56_result,
		multipliernormnode_w = {((multipliernode_w[78] & multipliernode_w[78]) | (multipliernode_w[77] & (~ multipliernode_w[78]))), ((multipliernode_w[77] & multipliernode_w[78]) | (multipliernode_w[76] & (~ multipliernode_w[78]))), ((multipliernode_w[76] & multipliernode_w[78]) | (multipliernode_w[75] & (~ multipliernode_w[78]))), ((multipliernode_w[75] & multipliernode_w[78]) | (multipliernode_w[74] & (~ multipliernode_w[78]))), ((multipliernode_w[74] & multipliernode_w[78]) | (multipliernode_w[73] & (~ multipliernode_w[78]))), ((multipliernode_w[73] & multipliernode_w[78]) | (multipliernode_w[72] & (~ multipliernode_w[78]))), ((multipliernode_w[72] & multipliernode_w[78]) | (multipliernode_w[71] & (~ multipliernode_w[78]))), ((multipliernode_w[71] & multipliernode_w[78]) | (multipliernode_w[70] & (~ multipliernode_w[78]))), ((multipliernode_w[70] & multipliernode_w[78]) | (multipliernode_w[69] & (~ multipliernode_w[78]))), ((multipliernode_w[69] & multipliernode_w[78]) | (multipliernode_w[68] & (~ multipliernode_w[78]))), ((multipliernode_w[68] & multipliernode_w[78]) | (multipliernode_w[67] & (~ multipliernode_w[78]))), ((multipliernode_w[67] & multipliernode_w[78]) | (multipliernode_w[66] & (~ multipliernode_w[78]))), ((multipliernode_w[66] & multipliernode_w[78]) | (multipliernode_w[65] & (~ multipliernode_w[78]))), ((multipliernode_w[65] & multipliernode_w[78]) | (multipliernode_w[64] & (~ multipliernode_w[78]))), ((multipliernode_w[64] & multipliernode_w[78]) | (multipliernode_w[63] & (~ multipliernode_w[78]))), ((multipliernode_w[63] & multipliernode_w[78]) | (multipliernode_w[62] & (~ multipliernode_w[78]))), ((multipliernode_w[62] & multipliernode_w[78]) | (multipliernode_w[61] & (~ multipliernode_w[78]))), ((multipliernode_w[61] & multipliernode_w[78]) | (multipliernode_w[60] & (~ multipliernode_w[78]))), ((multipliernode_w[60] & multipliernode_w[78]) | (multipliernode_w[59] & (~ multipliernode_w[78]))), ((multipliernode_w[59] & multipliernode_w[78]) | (multipliernode_w[58] & (~ multipliernode_w[78]))), ((multipliernode_w[58]
 & multipliernode_w[78]) | (multipliernode_w[57] & (~ multipliernode_w[78]))), ((multipliernode_w[57] & multipliernode_w[78]) | (multipliernode_w[56] & (~ multipliernode_w[78]))), ((multipliernode_w[56] & multipliernode_w[78]) | (multipliernode_w[55] & (~ multipliernode_w[78]))), ((multipliernode_w[55] & multipliernode_w[78]) | (multipliernode_w[54] & (~ multipliernode_w[78]))), ((multipliernode_w[54] & multipliernode_w[78]) | (multipliernode_w[53] & (~ multipliernode_w[78]))), ((multipliernode_w[53] & multipliernode_w[78]) | (multipliernode_w[52] & (~ multipliernode_w[78]))), ((multipliernode_w[52] & multipliernode_w[78]) | (multipliernode_w[51] & (~ multipliernode_w[78]))), ((multipliernode_w[51] & multipliernode_w[78]) | (multipliernode_w[50] & (~ multipliernode_w[78]))), ((multipliernode_w[50] & multipliernode_w[78]) | (multipliernode_w[49] & (~ multipliernode_w[78]))), ((multipliernode_w[49] & multipliernode_w[78]) | (multipliernode_w[48] & (~ multipliernode_w[78]))), ((multipliernode_w[48] & multipliernode_w[78]) | (multipliernode_w[47] & (~ multipliernode_w[78]))), ((multipliernode_w[47] & multipliernode_w[78]) | (multipliernode_w[46] & (~ multipliernode_w[78]))), ((multipliernode_w[46] & multipliernode_w[78]) | (multipliernode_w[45] & (~ multipliernode_w[78]))), ((multipliernode_w[45] & multipliernode_w[78]) | (multipliernode_w[44] & (~ multipliernode_w[78]))), ((multipliernode_w[44] & multipliernode_w[78]) | (multipliernode_w[43] & (~ multipliernode_w[78]))), ((multipliernode_w[43] & multipliernode_w[78]) | (multipliernode_w[42] & (~ multipliernode_w[78]))), ((multipliernode_w[42] & multipliernode_w[78]) | (multipliernode_w[41] & (~ multipliernode_w[78]))), ((multipliernode_w[41] & multipliernode_w[78]) | (multipliernode_w[40] & (~ multipliernode_w[78]))), ((multipliernode_w[40] & multipliernode_w[78]) | (multipliernode_w[39] & (~ multipliernode_w[78]))), ((multipliernode_w[39] & multipliernode_w[78]) | (multipliernode_w[38] & (~ multipliernode_w[78]))), ((multipliernode_w[38] & multipliernode_w[78]) | (multipliernode_w[37]
 & (~ multipliernode_w[78]))), ((multipliernode_w[37] & multipliernode_w[78]) | (multipliernode_w[36] & (~ multipliernode_w[78]))), ((multipliernode_w[36] & multipliernode_w[78]) | (multipliernode_w[35] & (~ multipliernode_w[78]))), ((multipliernode_w[35] & multipliernode_w[78]) | (multipliernode_w[34] & (~ multipliernode_w[78]))), ((multipliernode_w[34] & multipliernode_w[78]) | (multipliernode_w[33] & (~ multipliernode_w[78]))), ((multipliernode_w[33] & multipliernode_w[78]) | (multipliernode_w[32] & (~ multipliernode_w[78]))), ((multipliernode_w[32] & multipliernode_w[78]) | (multipliernode_w[31] & (~ multipliernode_w[78]))), ((multipliernode_w[31] & multipliernode_w[78]) | (multipliernode_w[30] & (~ multipliernode_w[78]))), ((multipliernode_w[30] & multipliernode_w[78]) | (multipliernode_w[29] & (~ multipliernode_w[78]))), ((multipliernode_w[29] & multipliernode_w[78]) | (multipliernode_w[28] & (~ multipliernode_w[78]))), ((multipliernode_w[28] & multipliernode_w[78]) | (multipliernode_w[27] & (~ multipliernode_w[78]))), ((multipliernode_w[27] & multipliernode_w[78]) | (multipliernode_w[26] & (~ multipliernode_w[78]))), ((multipliernode_w[26] & multipliernode_w[78]) | (multipliernode_w[25] & (~ multipliernode_w[78]))), ((multipliernode_w[25] & multipliernode_w[78]) | (multipliernode_w[24] & (~ multipliernode_w[78]))), ((multipliernode_w[24] & multipliernode_w[78]) | (multipliernode_w[23] & (~ multipliernode_w[78]))), ((multipliernode_w[23] & multipliernode_w[78]) | (multipliernode_w[22] & (~ multipliernode_w[78]))), ((multipliernode_w[22] & multipliernode_w[78]) | (multipliernode_w[21] & (~ multipliernode_w[78]))), ((multipliernode_w[21] & multipliernode_w[78]) | (multipliernode_w[20] & (~ multipliernode_w[78]))), ((multipliernode_w[20] & multipliernode_w[78]) | (multipliernode_w[19] & (~ multipliernode_w[78]))), ((multipliernode_w[19] & multipliernode_w[78]) | (multipliernode_w[18] & (~ multipliernode_w[78]))), ((multipliernode_w[18] & multipliernode_w[78]) | (multipliernode_w[17] & (~ multipliernode_w[78]))
), ((multipliernode_w[17] & multipliernode_w[78]) | (multipliernode_w[16] & (~ multipliernode_w[78]))), ((multipliernode_w[16] & multipliernode_w[78]) | (multipliernode_w[15] & (~ multipliernode_w[78]))), ((multipliernode_w[15] & multipliernode_w[78]) | (multipliernode_w[14] & (~ multipliernode_w[78]))), ((multipliernode_w[14] & multipliernode_w[78]) | (multipliernode_w[13] & (~ multipliernode_w[78]))), ((multipliernode_w[13] & multipliernode_w[78]) | (multipliernode_w[12] & (~ multipliernode_w[78]))), ((multipliernode_w[12] & multipliernode_w[78]) | (multipliernode_w[11] & (~ multipliernode_w[78]))), ((multipliernode_w[11] & multipliernode_w[78]) | (multipliernode_w[10] & (~ multipliernode_w[78]))), ((multipliernode_w[10] & multipliernode_w[78]) | (multipliernode_w[9] & (~ multipliernode_w[78]))), ((multipliernode_w[9] & multipliernode_w[78]) | (multipliernode_w[8] & (~ multipliernode_w[78]))), ((multipliernode_w[8] & multipliernode_w[78]) | (multipliernode_w[7] & (~ multipliernode_w[78]))), ((multipliernode_w[7] & multipliernode_w[78]) | (multipliernode_w[6] & (~ multipliernode_w[78]))), ((multipliernode_w[6] & multipliernode_w[78]) | (multipliernode_w[5] & (~ multipliernode_w[78]))), ((multipliernode_w[5] & multipliernode_w[78]) | (multipliernode_w[4] & (~ multipliernode_w[78]))), ((multipliernode_w[4] & multipliernode_w[78]) | (multipliernode_w[3] & (~ multipliernode_w[78]))), ((multipliernode_w[3] & multipliernode_w[78]) | (multipliernode_w[2] & (~ multipliernode_w[78]))), ((multipliernode_w[2] & multipliernode_w[78]) | (multipliernode_w[1] & (~ multipliernode_w[78]))), ((multipliernode_w[1] & multipliernode_w[78]) | (multipliernode_w[0] & (~ multipliernode_w[78])))},
		negbasefractiondelnode_w = wire_negbasedractiondel_sub_result,
		negcircle = negcircleff[35:0],
		negcirclenode_w = wire_negcircle_add_result,
		negrotatenode_w = {(~ rotateff[77]), (~ rotateff[76]), (~ rotateff[75]), (~ rotateff[74]), (~ rotateff[73]), (~ rotateff[72]), (~ rotateff[71]), (~ rotateff[70]), (~ rotateff[69]), (~ rotateff[68]), (~ rotateff[67]), (~ rotateff[66]), (~ rotateff[65]), (~ rotateff[64]), (~ rotateff[63]), (~ rotateff[62]), (~ rotateff[61]), (~ rotateff[60]), (~ rotateff[59]), (~ rotateff[58]), (~ rotateff[57]), (~ rotateff[56]), (~ rotateff[55]), (~ rotateff[54]), (~ rotateff[53]), (~ rotateff[52]), (~ rotateff[51]), (~ rotateff[50]), (~ rotateff[49]), (~ rotateff[48]), (~ rotateff[47]), (~ rotateff[46]), (~ rotateff[45]), (~ rotateff[44]), (~ rotateff[43]), (~ rotateff[42])},
		rotatenode_w = wire_fp_lsft_rsft78_result;
endmodule //SIN_bb_altfp_sincos_range_b6c


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" WIDTH=64 WIDTHAD=6 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=32 WIDTHAD=5 data q
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_q08
	( 
	data,
	q) ;
	input   [31:0]  data;
	output   [4:0]  q;

	wire  [3:0]   wire_altpriority_encoder19_q;
	wire  [3:0]   wire_altpriority_encoder20_q;
	wire  wire_altpriority_encoder20_zero;

	SIN_bb_altpriority_encoder_r08   altpriority_encoder19
	( 
	.data(data[15:0]),
	.q(wire_altpriority_encoder19_q));
	SIN_bb_altpriority_encoder_rf8   altpriority_encoder20
	( 
	.data(data[31:16]),
	.q(wire_altpriority_encoder20_q),
	.zero(wire_altpriority_encoder20_zero));
	assign
		q = {(~ wire_altpriority_encoder20_zero), (({4{wire_altpriority_encoder20_zero}} & wire_altpriority_encoder19_q) | ({4{(~ wire_altpriority_encoder20_zero)}} & wire_altpriority_encoder20_q))};
endmodule //SIN_bb_altpriority_encoder_q08


//altpriority_encoder CBX_AUTO_BLACKBOX="ALL" LSB_PRIORITY="NO" WIDTH=32 WIDTHAD=5 data q zero
//VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_qf8
	( 
	data,
	q,
	zero) ;
	input   [31:0]  data;
	output   [4:0]  q;
	output   zero;

	wire  [3:0]   wire_altpriority_encoder21_q;
	wire  wire_altpriority_encoder21_zero;
	wire  [3:0]   wire_altpriority_encoder22_q;
	wire  wire_altpriority_encoder22_zero;

	SIN_bb_altpriority_encoder_rf8   altpriority_encoder21
	( 
	.data(data[15:0]),
	.q(wire_altpriority_encoder21_q),
	.zero(wire_altpriority_encoder21_zero));
	SIN_bb_altpriority_encoder_rf8   altpriority_encoder22
	( 
	.data(data[31:16]),
	.q(wire_altpriority_encoder22_q),
	.zero(wire_altpriority_encoder22_zero));
	assign
		q = {(~ wire_altpriority_encoder22_zero), (({4{wire_altpriority_encoder22_zero}} & wire_altpriority_encoder21_q) | ({4{(~ wire_altpriority_encoder22_zero)}} & wire_altpriority_encoder22_q))},
		zero = (wire_altpriority_encoder21_zero & wire_altpriority_encoder22_zero);
endmodule //SIN_bb_altpriority_encoder_qf8

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altpriority_encoder_0c6
	( 
	data,
	q) ;
	input   [63:0]  data;
	output   [5:0]  q;

	wire  [4:0]   wire_altpriority_encoder17_q;
	wire  [4:0]   wire_altpriority_encoder18_q;
	wire  wire_altpriority_encoder18_zero;

	SIN_bb_altpriority_encoder_q08   altpriority_encoder17
	( 
	.data(data[31:0]),
	.q(wire_altpriority_encoder17_q));
	SIN_bb_altpriority_encoder_qf8   altpriority_encoder18
	( 
	.data(data[63:32]),
	.q(wire_altpriority_encoder18_q),
	.zero(wire_altpriority_encoder18_zero));
	assign
		q = {(~ wire_altpriority_encoder18_zero), (({5{wire_altpriority_encoder18_zero}} & wire_altpriority_encoder17_q) | ({5{(~ wire_altpriority_encoder18_zero)}} & wire_altpriority_encoder18_q))};
endmodule //SIN_bb_altpriority_encoder_0c6

//synthesis_resources = lpm_add_sub 52 lpm_clshift 3 lpm_mult 3 lpm_mux 2 reg 3720 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  SIN_bb_altfp_sincos_47e
	( 
	clock,
	data,
	result) ;
	input   clock;
	input   [31:0]  data;
	output   [31:0]  result;

	wire  [33:0]   wire_ccc_cordic_m_sincos;
	wire  [35:0]   wire_crr_fp_range1_circle;
	wire  [35:0]   wire_crr_fp_range1_negcircle;
	wire  [5:0]   wire_clz_q;
	reg	[5:0]	countff;
	reg	[7:0]	exponentinff;
	reg	[7:0]	exponentnormff;
	reg	[7:0]	exponentoutff;
	reg	[35:0]	fixed_sincosff;
	reg	[31:0]	input_delay_ff_0;
	reg	[31:0]	input_delay_ff_1;
	reg	[31:0]	input_delay_ff_10;
	reg	[31:0]	input_delay_ff_11;
	reg	[31:0]	input_delay_ff_12;
	reg	[31:0]	input_delay_ff_13;
	reg	[31:0]	input_delay_ff_14;
	reg	[31:0]	input_delay_ff_15;
	reg	[31:0]	input_delay_ff_16;
	reg	[31:0]	input_delay_ff_17;
	reg	[31:0]	input_delay_ff_18;
	reg	[31:0]	input_delay_ff_19;
	reg	[31:0]	input_delay_ff_2;
	reg	[31:0]	input_delay_ff_20;
	reg	[31:0]	input_delay_ff_21;
	reg	[31:0]	input_delay_ff_22;
	reg	[31:0]	input_delay_ff_23;
	reg	[31:0]	input_delay_ff_24;
	reg	[31:0]	input_delay_ff_25;
	reg	[31:0]	input_delay_ff_26;
	reg	[31:0]	input_delay_ff_27;
	reg	[31:0]	input_delay_ff_28;
	reg	[31:0]	input_delay_ff_29;
	reg	[31:0]	input_delay_ff_3;
	reg	[31:0]	input_delay_ff_30;
	reg	[31:0]	input_delay_ff_31;
	reg	[31:0]	input_delay_ff_32;
	reg	[31:0]	input_delay_ff_33;
	reg	[31:0]	input_delay_ff_34;
	reg	[31:0]	input_delay_ff_4;
	reg	[31:0]	input_delay_ff_5;
	reg	[31:0]	input_delay_ff_6;
	reg	[31:0]	input_delay_ff_7;
	reg	[31:0]	input_delay_ff_8;
	reg	[31:0]	input_delay_ff_9;
	reg	[22:0]	mantissanormff;
	reg	[22:0]	mantissaoutff;
	reg	[35:0]	quadrant_sumff;
	reg	[3:0]	select_sincosff;
	reg	[33:0]	selectoutputff;
	reg	[23:0]	signcalcff;
	reg	[10:0]	signinff;
	reg	signoutff;
	wire  [8:0]   wire_exponentcheck_sub_result;
	wire  [7:0]   wire_exponentnorm_add_result;
	wire  [7:0]   wire_exponentnormmode_sub_result;
	wire  [22:0]   wire_mantissanorm_add_result;
	wire  [35:0]   wire_quadrantsum_add_result;
	wire  [35:0]   wire_sft_result;
	wire  [33:0]   wire_cmul_result;
	wire aclr;
	wire  [35:0]  circle_w;
	wire clk_en;
	wire  [5:0]  countnode_w;
	wire  [8:0]  exponentcheck_w;
	wire  [7:0]  exponentnormmode_w;
	wire  [33:0]  fixed_sincos_w;
	wire  [35:0]  fixed_sincosnode_w;
	wire  [35:0]  fraction_quadrant_w;
	wire  indexbit_w;
	wire  [15:0]  indexcheck_w;
	wire  [31:0]  input_number_delay_w;
	wire  [31:0]  input_number_w;
	wire  [35:0]  mantissanormnode_w;
	wire  [35:0]  negative_quadrant_w;
	wire  [35:0]  negcircle_w;
	wire  [35:0]  one_term_w;
	wire  [23:0]  overflownode_w;
	wire  [35:0]  piovertwo_w;
	wire  [35:0]  positive_quadrant_w;
	wire  [33:0]  quadrant_w;
	wire  quadrantselect_w;
	wire  quadrantsign_w;
	wire  [33:0]  radiansnode_w;
	wire  [7:0]  value_128_w;
	wire  [7:0]  value_x73_w;
	wire  [35:0]  zerovec_w;

	SIN_bb_altfp_sincos_cordic_m_e5e   ccc_cordic_m
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.indexbit(indexbit_w),
	.radians(radiansnode_w),
	.sincos(wire_ccc_cordic_m_sincos),
	.sincosbit(select_sincosff[3]));
	SIN_bb_altfp_sincos_range_b6c   crr_fp_range1
	( 
	.aclr(aclr),
	.circle(wire_crr_fp_range1_circle),
	.clken(clk_en),
	.clock(clock),
	.data(data),
	.negcircle(wire_crr_fp_range1_negcircle));
	SIN_bb_altpriority_encoder_0c6   clz
	( 
	.data({fixed_sincosnode_w, {28{1'b1}}}),
	.q(wire_clz_q));
	// synopsys translate_off
	initial
		countff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) countff <= 6'b0;
		else if  (clk_en == 1'b1)   countff <= countnode_w;
	// synopsys translate_off
	initial
		exponentinff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentinff <= 8'b0;
		else if  (clk_en == 1'b1)   exponentinff <= data[30:23];
	// synopsys translate_off
	initial
		exponentnormff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentnormff <= 8'b0;
		else if  (clk_en == 1'b1)   exponentnormff <= wire_exponentnorm_add_result;
	// synopsys translate_off
	initial
		exponentoutff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exponentoutff <= 8'b0;
		else if  (clk_en == 1'b1)   exponentoutff <= ((exponentnormff & {8{(~ selectoutputff[33])}}) | (input_number_delay_w[30:23] & {8{selectoutputff[33]}}));
	// synopsys translate_off
	initial
		fixed_sincosff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) fixed_sincosff <= 36'b0;
		else if  (clk_en == 1'b1)   fixed_sincosff <= fixed_sincosnode_w;
	// synopsys translate_off
	initial
		input_delay_ff_0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_0 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_0 <= input_number_w;
	// synopsys translate_off
	initial
		input_delay_ff_1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_1 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_1 <= input_delay_ff_0;
	// synopsys translate_off
	initial
		input_delay_ff_10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_10 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_10 <= input_delay_ff_9;
	// synopsys translate_off
	initial
		input_delay_ff_11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_11 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_11 <= input_delay_ff_10;
	// synopsys translate_off
	initial
		input_delay_ff_12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_12 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_12 <= input_delay_ff_11;
	// synopsys translate_off
	initial
		input_delay_ff_13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_13 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_13 <= input_delay_ff_12;
	// synopsys translate_off
	initial
		input_delay_ff_14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_14 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_14 <= input_delay_ff_13;
	// synopsys translate_off
	initial
		input_delay_ff_15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_15 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_15 <= input_delay_ff_14;
	// synopsys translate_off
	initial
		input_delay_ff_16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_16 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_16 <= input_delay_ff_15;
	// synopsys translate_off
	initial
		input_delay_ff_17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_17 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_17 <= input_delay_ff_16;
	// synopsys translate_off
	initial
		input_delay_ff_18 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_18 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_18 <= input_delay_ff_17;
	// synopsys translate_off
	initial
		input_delay_ff_19 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_19 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_19 <= input_delay_ff_18;
	// synopsys translate_off
	initial
		input_delay_ff_2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_2 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_2 <= input_delay_ff_1;
	// synopsys translate_off
	initial
		input_delay_ff_20 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_20 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_20 <= input_delay_ff_19;
	// synopsys translate_off
	initial
		input_delay_ff_21 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_21 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_21 <= input_delay_ff_20;
	// synopsys translate_off
	initial
		input_delay_ff_22 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_22 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_22 <= input_delay_ff_21;
	// synopsys translate_off
	initial
		input_delay_ff_23 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_23 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_23 <= input_delay_ff_22;
	// synopsys translate_off
	initial
		input_delay_ff_24 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_24 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_24 <= input_delay_ff_23;
	// synopsys translate_off
	initial
		input_delay_ff_25 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_25 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_25 <= input_delay_ff_24;
	// synopsys translate_off
	initial
		input_delay_ff_26 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_26 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_26 <= input_delay_ff_25;
	// synopsys translate_off
	initial
		input_delay_ff_27 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_27 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_27 <= input_delay_ff_26;
	// synopsys translate_off
	initial
		input_delay_ff_28 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_28 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_28 <= input_delay_ff_27;
	// synopsys translate_off
	initial
		input_delay_ff_29 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_29 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_29 <= input_delay_ff_28;
	// synopsys translate_off
	initial
		input_delay_ff_3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_3 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_3 <= input_delay_ff_2;
	// synopsys translate_off
	initial
		input_delay_ff_30 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_30 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_30 <= input_delay_ff_29;
	// synopsys translate_off
	initial
		input_delay_ff_31 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_31 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_31 <= input_delay_ff_30;
	// synopsys translate_off
	initial
		input_delay_ff_32 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_32 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_32 <= input_delay_ff_31;
	// synopsys translate_off
	initial
		input_delay_ff_33 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_33 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_33 <= input_delay_ff_32;
	// synopsys translate_off
	initial
		input_delay_ff_34 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_34 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_34 <= input_delay_ff_33;
	// synopsys translate_off
	initial
		input_delay_ff_4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_4 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_4 <= input_delay_ff_3;
	// synopsys translate_off
	initial
		input_delay_ff_5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_5 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_5 <= input_delay_ff_4;
	// synopsys translate_off
	initial
		input_delay_ff_6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_6 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_6 <= input_delay_ff_5;
	// synopsys translate_off
	initial
		input_delay_ff_7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_7 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_7 <= input_delay_ff_6;
	// synopsys translate_off
	initial
		input_delay_ff_8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_8 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_8 <= input_delay_ff_7;
	// synopsys translate_off
	initial
		input_delay_ff_9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) input_delay_ff_9 <= 32'b0;
		else if  (clk_en == 1'b1)   input_delay_ff_9 <= input_delay_ff_8;
	// synopsys translate_off
	initial
		mantissanormff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) mantissanormff <= 23'b0;
		else if  (clk_en == 1'b1)   mantissanormff <= wire_mantissanorm_add_result;
	// synopsys translate_off
	initial
		mantissaoutff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) mantissaoutff <= 23'b0;
		else if  (clk_en == 1'b1)   mantissaoutff <= ((mantissanormff & {23{(~ selectoutputff[33])}}) | (input_number_delay_w[22:0] & {23{selectoutputff[33]}}));
	// synopsys translate_off
	initial
		quadrant_sumff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) quadrant_sumff <= 36'b0;
		else if  (clk_en == 1'b1)   quadrant_sumff <= wire_quadrantsum_add_result;
	// synopsys translate_off
	initial
		select_sincosff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) select_sincosff <= 4'b0;
		else if  (clk_en == 1'b1)   select_sincosff <= {select_sincosff[2:0], quadrant_w[33]};
	// synopsys translate_off
	initial
		selectoutputff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) selectoutputff <= 34'b0;
		else if  (clk_en == 1'b1)   selectoutputff <= {selectoutputff[32:0], exponentcheck_w[8]};
	// synopsys translate_off
	initial
		signcalcff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) signcalcff <= 24'b0;
		else if  (clk_en == 1'b1)   signcalcff <= {signcalcff[22:0], (quadrantsign_w ^ signinff[10])};
	// synopsys translate_off
	initial
		signinff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) signinff <= 11'b0;
		else if  (clk_en == 1'b1)   signinff <= {signinff[9:0], data[31]};
	// synopsys translate_off
	initial
		signoutff = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) signoutff <= 1'b0;
		else if  (clk_en == 1'b1)   signoutff <= ((signcalcff[23] & (~ selectoutputff[33])) | (input_number_delay_w[31] & selectoutputff[33]));
	lpm_add_sub   exponentcheck_sub
	( 
	.cout(),
	.dataa({1'b0, exponentinff}),
	.datab({1'b0, value_x73_w}),
	.overflow(),
	.result(wire_exponentcheck_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponentcheck_sub.lpm_direction = "SUB",
		exponentcheck_sub.lpm_representation = "UNSIGNED",
		exponentcheck_sub.lpm_width = 9,
		exponentcheck_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponentnorm_add
	( 
	.cout(),
	.dataa(exponentnormmode_w[7:0]),
	.datab({{7{1'b0}}, overflownode_w[23]}),
	.overflow(),
	.result(wire_exponentnorm_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponentnorm_add.lpm_direction = "ADD",
		exponentnorm_add.lpm_representation = "UNSIGNED",
		exponentnorm_add.lpm_width = 8,
		exponentnorm_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   exponentnormmode_sub
	( 
	.cout(),
	.dataa(value_128_w),
	.datab({{2{1'b0}}, countff}),
	.overflow(),
	.result(wire_exponentnormmode_sub_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		exponentnormmode_sub.lpm_direction = "SUB",
		exponentnormmode_sub.lpm_representation = "UNSIGNED",
		exponentnormmode_sub.lpm_width = 8,
		exponentnormmode_sub.lpm_type = "lpm_add_sub";
	lpm_add_sub   mantissanorm_add
	( 
	.cout(),
	.dataa(mantissanormnode_w[34:12]),
	.datab({{22{1'b0}}, mantissanormnode_w[11]}),
	.overflow(),
	.result(wire_mantissanorm_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.cin(),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		mantissanorm_add.lpm_direction = "ADD",
		mantissanorm_add.lpm_representation = "UNSIGNED",
		mantissanorm_add.lpm_width = 23,
		mantissanorm_add.lpm_type = "lpm_add_sub";
	lpm_add_sub   quadrantsum_add
	( 
	.cin((~ quadrant_w[33])),
	.cout(),
	.dataa(one_term_w),
	.datab(fraction_quadrant_w),
	.overflow(),
	.result(wire_quadrantsum_add_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.add_sub(1'b1),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		quadrantsum_add.lpm_direction = "ADD",
		quadrantsum_add.lpm_representation = "UNSIGNED",
		quadrantsum_add.lpm_width = 36,
		quadrantsum_add.lpm_type = "lpm_add_sub";
	lpm_clshift   sft
	( 
	.data(fixed_sincosff),
	.direction(1'b0),
	.distance(countff),
	.overflow(),
	.result(wire_sft_result),
	.underflow()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clken(1'b1),
	.clock(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		sft.lpm_width = 36,
		sft.lpm_widthdist = 6,
		sft.lpm_type = "lpm_clshift";
	lpm_mult   cmul
	( 
	.aclr(aclr),
	.clken(clk_en),
	.clock(clock),
	.dataa(quadrant_sumff),
	.datab(piovertwo_w),
	.result(wire_cmul_result)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.sclr(1'b0),
	.sum({1{1'b0}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	);
	defparam
		cmul.lpm_pipeline = 3,
		cmul.lpm_representation = "UNSIGNED",
		cmul.lpm_widtha = 36,
		cmul.lpm_widthb = 36,
		cmul.lpm_widthp = 34,
		cmul.lpm_type = "lpm_mult";
	assign
		aclr = 1'b0,
		circle_w = wire_crr_fp_range1_circle,
		clk_en = 1'b1,
		countnode_w = (~ wire_clz_q),
		exponentcheck_w = wire_exponentcheck_sub_result,
		exponentnormmode_w = wire_exponentnormmode_sub_result,
		fixed_sincos_w = wire_ccc_cordic_m_sincos,
		fixed_sincosnode_w = {fixed_sincos_w, zerovec_w[1:0]},
		fraction_quadrant_w = ((positive_quadrant_w & {36{quadrant_w[33]}}) | (negative_quadrant_w & {36{(~ quadrant_w[33])}})),
		indexbit_w = (~ indexcheck_w[3]),
		indexcheck_w = {(indexcheck_w[14] | radiansnode_w[18]), (indexcheck_w[13] | radiansnode_w[19]), (indexcheck_w[12] | radiansnode_w[20]), (indexcheck_w[11] | radiansnode_w[21]), (indexcheck_w[10] | radiansnode_w[22]), (indexcheck_w[9] | radiansnode_w[23]), (indexcheck_w[8] | radiansnode_w[24]), (indexcheck_w[7] | radiansnode_w[25]), (indexcheck_w[6] | radiansnode_w[26]), (indexcheck_w[5] | radiansnode_w[27]), (indexcheck_w[4] | radiansnode_w[28]), (indexcheck_w[3] | radiansnode_w[29]), (indexcheck_w[2] | radiansnode_w[30]), (indexcheck_w[1] | radiansnode_w[31]), (indexcheck_w[0] | radiansnode_w[32]), radiansnode_w[32]},
		input_number_delay_w = input_delay_ff_34,
		input_number_w = data,
		mantissanormnode_w = wire_sft_result,
		negative_quadrant_w = (~ positive_quadrant_w),
		negcircle_w = wire_crr_fp_range1_negcircle,
		one_term_w = {(~ quadrant_w[33]), zerovec_w[34:0]},
		overflownode_w = {(mantissanormnode_w[34] & overflownode_w[22]), (mantissanormnode_w[33] & overflownode_w[21]), (mantissanormnode_w[32] & overflownode_w[20]), (mantissanormnode_w[31] & overflownode_w[19]), (mantissanormnode_w[30] & overflownode_w[18]), (mantissanormnode_w[29] & overflownode_w[17]), (mantissanormnode_w[28] & overflownode_w[16]), (mantissanormnode_w[27] & overflownode_w[15]), (mantissanormnode_w[26] & overflownode_w[14]), (mantissanormnode_w[25] & overflownode_w[13]), (mantissanormnode_w[24] & overflownode_w[12]), (mantissanormnode_w[23] & overflownode_w[11]), (mantissanormnode_w[22] & overflownode_w[10]), (mantissanormnode_w[21] & overflownode_w[9]), (mantissanormnode_w[20] & overflownode_w[8]), (mantissanormnode_w[19] & overflownode_w[7]), (mantissanormnode_w[18] & overflownode_w[6]), (mantissanormnode_w[17] & overflownode_w[5]), (mantissanormnode_w[16] & overflownode_w[4]), (mantissanormnode_w[15] & overflownode_w[3]), (mantissanormnode_w[14] & overflownode_w[2]), (mantissanormnode_w[13] & overflownode_w[1]), (mantissanormnode_w[12] & overflownode_w[0]), mantissanormnode_w[11]},
		piovertwo_w = 36'b110010010000111111011010101000100010,
		positive_quadrant_w = {1'b0, quadrant_w, 1'b0},
		quadrant_w = ((circle_w[33:0] & {34{(~ quadrantselect_w)}}) | (negcircle_w[33:0] & {34{quadrantselect_w}})),
		quadrantselect_w = circle_w[34],
		quadrantsign_w = circle_w[35],
		radiansnode_w = wire_cmul_result,
		result = {signoutff, exponentoutff, mantissaoutff},
		value_128_w = 8'b10000000,
		value_x73_w = 8'b01110011,
		zerovec_w = {36{1'b0}};
endmodule //SIN_bb_altfp_sincos_47e
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module SIN_bb (
	clock,
	data,
	result);

	input	  clock;
	input	[31:0]  data;
	output	[31:0]  result;

	wire [31:0] sub_wire0;
	wire [31:0] result = sub_wire0[31:0];

	SIN_bb_altfp_sincos_47e	SIN_bb_altfp_sincos_47e_component (
				.clock (clock),
				.data (data),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: FPM_FORMAT NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: CONSTANT: OPERATION STRING "SIN"
// Retrieval info: CONSTANT: PIPELINE NUMERIC "36"
// Retrieval info: CONSTANT: ROUNDING STRING "TO_NEAREST"
// Retrieval info: CONSTANT: WIDTH_EXP NUMERIC "8"
// Retrieval info: CONSTANT: WIDTH_MAN NUMERIC "23"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: data 0 0 32 0 INPUT NODEFVAL "data[31..0]"
// Retrieval info: USED_PORT: result 0 0 32 0 OUTPUT NODEFVAL "result[31..0]"
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @data 0 0 32 0 data 0 0 32 0
// Retrieval info: CONNECT: result 0 0 32 0 @result 0 0 32 0
// Retrieval info: GEN_FILE: TYPE_NORMAL SIN_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL SIN_bb.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL SIN_bb.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL SIN_bb.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL SIN_bb_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL SIN_bb_bb.v TRUE
// Retrieval info: LIB_FILE: lpm
